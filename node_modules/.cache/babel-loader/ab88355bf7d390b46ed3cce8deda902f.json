{"ast":null,"code":"var _classCallCheck = require(\"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/createClass.js\").default;\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require(\"./base64-vlq\");\nvar util = require(\"./util\");\nvar ArraySet = require(\"./array-set\").ArraySet;\nvar MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nvar SourceMapGenerator = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function SourceMapGenerator(aArgs) {\n    _classCallCheck(this, SourceMapGenerator);\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  _createClass(SourceMapGenerator, [{\n    key: \"addMapping\",\n    value:\n    /**\n     * Add a single mapping from original source line and column to the generated\n     * source's line and column for this source map being created. The mapping\n     * object should have the following properties:\n     *\n     *   - generated: An object with the generated line and column positions.\n     *   - original: An object with the original line and column positions.\n     *   - source: The original source file (relative to the sourceRoot).\n     *   - name: An optional original token name for this mapping.\n     */\n    function addMapping(aArgs) {\n      var generated = util.getArg(aArgs, \"generated\");\n      var original = util.getArg(aArgs, \"original\", null);\n      var source = util.getArg(aArgs, \"source\", null);\n      var name = util.getArg(aArgs, \"name\", null);\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n      if (source != null) {\n        source = String(source);\n        if (!this._sources.has(source)) {\n          this._sources.add(source);\n        }\n      }\n      if (name != null) {\n        name = String(name);\n        if (!this._names.has(name)) {\n          this._names.add(name);\n        }\n      }\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    }\n\n    /**\n     * Set the source content for a source file.\n     */\n  }, {\n    key: \"setSourceContent\",\n    value: function setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = Object.create(null);\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    }\n\n    /**\n     * Applies the mappings of a sub-source-map for a specific source file to the\n     * source map being generated. Each mapping to the supplied source file is\n     * rewritten using the supplied source map. Note: The resolution for the\n     * resulting mappings is the minimium of this map and the supplied map.\n     *\n     * @param aSourceMapConsumer The source map to be applied.\n     * @param aSourceFile Optional. The filename of the source file.\n     *        If omitted, SourceMapConsumer's file property will be used.\n     * @param aSourceMapPath Optional. The dirname of the path to the source map\n     *        to be applied. If relative, it is relative to the SourceMapConsumer.\n     *        This parameter is needed when the two source maps aren't in the same\n     *        directory, and the source map to be applied contains relative source\n     *        paths. If so, those relative source paths need to be rewritten\n     *        relative to the SourceMapGenerator.\n     */\n  }, {\n    key: \"applySourceMap\",\n    value: function applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" + 'or the source map\\'s \"file\" property. Both were omitted.');\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = this._mappings.toArray().length > 0 ? new ArraySet() : this._sources;\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source);\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (srcFile) {\n        var content = aSourceMapConsumer.sourceContentFor(srcFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            srcFile = util.join(aSourceMapPath, srcFile);\n          }\n          if (sourceRoot != null) {\n            srcFile = util.relative(sourceRoot, srcFile);\n          }\n          this.setSourceContent(srcFile, content);\n        }\n      }, this);\n    }\n\n    /**\n     * A mapping can have one of the three levels of data:\n     *\n     *   1. Just the generated position.\n     *   2. The Generated position, original position, and original source.\n     *   3. Generated and original position, original source, as well as a name\n     *      token.\n     *\n     * To maintain consistency, we validate that any new mapping being added falls\n     * in to one of these categories.\n     */\n  }, {\n    key: \"_validateMapping\",\n    value: function _validateMapping(aGenerated, aOriginal, aSource, aName) {\n      // When aOriginal is truthy but has empty values for .line and .column,\n      // it is most likely a programmer error. In this case we throw a very\n      // specific error message to try to guide them the right way.\n      // For example: https://github.com/Polymer/polymer-bundler/pull/519\n      if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\"original.line and original.column are not numbers -- you probably meant to omit \" + \"the original mapping entirely and only map the generated position. If so, pass \" + \"null for the original mapping instead of an object with empty or null values.\");\n      }\n      if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n        // Case 1.\n      } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n        // Cases 2 and 3.\n      } else {\n        throw new Error(\"Invalid mapping: \" + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    }\n\n    /**\n     * Serialize the accumulated mappings in to the stream of base 64 VLQs\n     * specified by the source map format.\n     */\n  }, {\n    key: \"_serializeMappings\",\n    value: function _serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = \"\";\n      var next;\n      var mapping;\n      var nameIdx;\n      var sourceIdx;\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n        next = \"\";\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            next += \";\";\n            previousGeneratedLine++;\n          }\n        } else if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += \",\";\n        }\n        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n        if (mapping.source != null) {\n          sourceIdx = this._sources.indexOf(mapping.source);\n          next += base64VLQ.encode(sourceIdx - previousSource);\n          previousSource = sourceIdx;\n\n          // lines are stored 0-based in SourceMap spec version 3\n          next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n          next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n          if (mapping.name != null) {\n            nameIdx = this._names.indexOf(mapping.name);\n            next += base64VLQ.encode(nameIdx - previousName);\n            previousName = nameIdx;\n          }\n        }\n        result += next;\n      }\n      return result;\n    }\n  }, {\n    key: \"_generateSourcesContent\",\n    value: function _generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n      }, this);\n    }\n\n    /**\n     * Externalize the source map.\n     */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n      return map;\n    }\n\n    /**\n     * Render the source map being generated to a string.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toJSON());\n    }\n  }], [{\n    key: \"fromSourceMap\",\n    value: function fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var sourceRelative = sourceFile;\n        if (sourceRoot !== null) {\n          sourceRelative = util.relative(sourceRoot, sourceFile);\n        }\n        if (!generator._sources.has(sourceRelative)) {\n          generator._sources.add(sourceRelative);\n        }\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    }\n  }]);\n  return SourceMapGenerator;\n}();\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;","map":{"version":3,"names":["base64VLQ","require","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","generated","original","source","name","_validateMapping","String","has","add","generatedLine","line","generatedColumn","column","originalLine","originalColumn","aSourceFile","aSourceContent","relative","Object","create","toSetString","keys","length","aSourceMapConsumer","aSourceMapPath","sourceFile","file","Error","sourceRoot","newSources","toArray","newNames","unsortedForEach","mapping","originalPositionFor","join","sources","forEach","srcFile","content","sourceContentFor","setSourceContent","aGenerated","aOriginal","aSource","aName","JSON","stringify","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","next","nameIdx","sourceIdx","mappings","i","len","compareByGeneratedPositionsInflated","encode","indexOf","aSources","aSourceRoot","map","key","prototype","hasOwnProperty","call","version","_version","names","_serializeMappings","sourcesContent","_generateSourcesContent","toJSON","generator","eachMapping","newMapping","addMapping","sourceRelative","exports"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/node_modules/source-map/lib/source-map-generator.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst util = require(\"./util\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nclass SourceMapGenerator {\n  constructor(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  static fromSourceMap(aSourceMapConsumer) {\n    const sourceRoot = aSourceMapConsumer.sourceRoot;\n    const generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      const newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      let sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  addMapping(aArgs) {\n    const generated = util.getArg(aArgs, \"generated\");\n    const original = util.getArg(aArgs, \"original\", null);\n    let source = util.getArg(aArgs, \"source\", null);\n    let name = util.getArg(aArgs, \"name\", null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source,\n      name\n    });\n  }\n\n  /**\n   * Set the source content for a source file.\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    let source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  }\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    let sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          \"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    const sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    const newSources = this._mappings.toArray().length > 0\n      ? new ArraySet()\n      : this._sources;\n    const newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function(mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        const original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      const source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      const name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function(srcFile) {\n      const content = aSourceMapConsumer.sourceContentFor(srcFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          srcFile = util.join(aSourceMapPath, srcFile);\n        }\n        if (sourceRoot != null) {\n          srcFile = util.relative(sourceRoot, srcFile);\n        }\n        this.setSourceContent(srcFile, content);\n      }\n    }, this);\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  _validateMapping(aGenerated, aOriginal, aSource, aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\n            \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n        );\n    }\n\n    if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n\n    } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n             && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0;\n    let previousGeneratedLine = 1;\n    let previousOriginalColumn = 0;\n    let previousOriginalLine = 0;\n    let previousName = 0;\n    let previousSource = 0;\n    let result = \"\";\n    let next;\n    let mapping;\n    let nameIdx;\n    let sourceIdx;\n\n    const mappings = this._mappings.toArray();\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = \"\";\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\";\n          previousGeneratedLine++;\n        }\n      } else if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += \",\";\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  }\n\n  _generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      const key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}