{"ast":null,"code":"import _objectSpread from \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n  var _super = _createSuper(App);\n  function App() {\n    var _this;\n    _classCallCheck(this, App);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n    _this.addFish = function (fish) {\n      // take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes);\n      //add our new fish from the AddFishForm component to the fishes variable\n      fishes[\"fish\".concat(Date.now())] = fish;\n      // set the new fishes object to state with the existing setState API\n      _this.setState({\n        fishes: fishes\n      });\n      // could pass fishes: fishes Since they are the same we can write it this way\n    };\n    _this.updateFish = function (key, updatedFish) {\n      // take copy of current state\n      var fishes = _objectSpread({}, _this.state.fishes);\n      // update that state\n      fishes[key] = updatedFish;\n      // set thtat to state\n      _this.setState({\n        fishes: fishes\n      });\n    };\n    _this.deleteFish = function (key) {\n      // take a copy of state\n      var fishes = _objectSpread({}, _this.state.fishes);\n      // update the state\n      fishes[key] = null;\n      // update state\n      _this.setState({\n        fishes: fishes\n      });\n    };\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n    _this.addToOrder = function (key) {\n      // take a copy of state\n      var order = _objectSpread({}, _this.state.order);\n      // either add to the order or update the number in order\n      order[key] = order[key] + 1 || 1;\n      // call setState to update our state object\n      _this.setState({\n        order: order\n      });\n    };\n    _this.removeFromOrder = function (key) {\n      // take a copy of state\n      var order = _objectSpread({}, _this.state.order);\n      // either add to the order or update the number in order\n      delete order[key];\n      // call setState to update our state object\n      _this.setState({\n        order: order\n      });\n    };\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      // first reinstate our local storage\n      var localStorageRef = localStorage.getItem(params.storeId);\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catch-of-the-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            tagline: \"Fresh Seafood Market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"fishes\",\n            children: Object.keys(this.state.fishes).map(function (key) {\n              return /*#__PURE__*/_jsxDEV(Fish, {\n                index: key,\n                details: _this2.state.fishes[key],\n                addToOrder: _this2.addToOrder\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, _this2);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Order, {\n          fishes: this.state.fishes,\n          order: this.state.order,\n          removeFromOrder: this.removeFromOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Inventory, {\n          addFish: this.addFish,\n          updateFish: this.updateFish,\n          deleteFish: this.deleteFish,\n          loadSampleFishes: this.loadSampleFishes,\n          fishes: this.state.fishes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return App;\n}(React.Component);\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component","propTypes","PropTypes","object"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  // use a property for state instead of a contructor\n  // start with what state is when the app starts\n  state = {\n    fishes: {},\n    order: {}\n  };\n  static propTypes = {\n    match: PropTypes.object\n  }\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef)})\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n  addFish = (fish) => {\n    // take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    //add our new fish from the AddFishForm component to the fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // set the new fishes object to state with the existing setState API\n    this.setState({ fishes });\n    // could pass fishes: fishes Since they are the same we can write it this way\n  };\n  updateFish = (key, updatedFish) => {\n    // take copy of current state\n    const fishes = { ...this.state.fishes };\n    // update that state\n    fishes[key] = updatedFish;\n    // set thtat to state\n    this.setState({ fishes});\n  };\n  deleteFish = key => {\n    // take a copy of state\n    const fishes = { ...this.state.fishes };\n    // update the state\n    fishes[key] = null;\n    // update state\n    this.setState({ fishes });\n  };\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n  addToOrder = key => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // either add to the order or update the number in order\n    order[key] = order[key] + 1 || 1;\n    // call setState to update our state object\n    this.setState({ order });\n  }\n  removeFromOrder = key => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // either add to the order or update the number in order\n    delete order[key]; \n    // call setState to update our state object\n    this.setState({ order });\n  }\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}