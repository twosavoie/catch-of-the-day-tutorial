{"ast":null,"code":"/*!\n * Stylus - Unit\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  nodes = require('./');\n\n/**\n * Unit conversion table.\n */\n\nvar FACTOR_TABLE = {\n  'mm': {\n    val: 1,\n    label: 'mm'\n  },\n  'cm': {\n    val: 10,\n    label: 'mm'\n  },\n  'in': {\n    val: 25.4,\n    label: 'mm'\n  },\n  'pt': {\n    val: 25.4 / 72,\n    label: 'mm'\n  },\n  'ms': {\n    val: 1,\n    label: 'ms'\n  },\n  's': {\n    val: 1000,\n    label: 'ms'\n  },\n  'Hz': {\n    val: 1,\n    label: 'Hz'\n  },\n  'kHz': {\n    val: 1000,\n    label: 'Hz'\n  }\n};\n\n/**\n * Initialize a new `Unit` with the given `val` and unit `type`\n * such as \"px\", \"pt\", \"in\", etc.\n *\n * @param {String} val\n * @param {String} type\n * @api public\n */\n\nvar Unit = module.exports = function Unit(val, type) {\n  Node.call(this);\n  this.val = val;\n  this.type = type;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nUnit.prototype.__proto__ = Node.prototype;\n\n/**\n * Return Boolean based on the unit value.\n *\n * @return {Boolean}\n * @api public\n */\n\nUnit.prototype.toBoolean = function () {\n  return nodes.Boolean(this.type ? true : this.val);\n};\n\n/**\n * Return unit string.\n *\n * @return {String}\n * @api public\n */\n\nUnit.prototype.toString = function () {\n  return this.val + (this.type || '');\n};\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nUnit.prototype.clone = function () {\n  var clone = new Unit(this.val, this.type);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nUnit.prototype.toJSON = function () {\n  return {\n    __type: 'Unit',\n    val: this.val,\n    type: this.type,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nUnit.prototype.operate = function (op, right) {\n  var type = this.type || right.first.type;\n\n  // swap color\n  if ('rgba' == right.nodeName || 'hsla' == right.nodeName) {\n    return right.operate(op, this);\n  }\n\n  // operate\n  if (this.shouldCoerce(op)) {\n    right = right.first;\n    // percentages\n    if ('%' != this.type && ('-' == op || '+' == op) && '%' == right.type) {\n      right = new Unit(this.val * (right.val / 100), '%');\n    } else {\n      right = this.coerce(right);\n    }\n    switch (op) {\n      case '-':\n        return new Unit(this.val - right.val, type);\n      case '+':\n        // keyframes interpolation\n        type = type || right.type == '%' && right.type;\n        return new Unit(this.val + right.val, type);\n      case '/':\n        return new Unit(this.val / right.val, type);\n      case '*':\n        return new Unit(this.val * right.val, type);\n      case '%':\n        return new Unit(this.val % right.val, type);\n      case '**':\n        return new Unit(Math.pow(this.val, right.val), type);\n      case '..':\n      case '...':\n        var start = this.val,\n          end = right.val,\n          expr = new nodes.Expression(),\n          inclusive = '..' == op;\n        if (start < end) {\n          do {\n            expr.push(new nodes.Unit(start));\n          } while (inclusive ? ++start <= end : ++start < end);\n        } else {\n          do {\n            expr.push(new nodes.Unit(start));\n          } while (inclusive ? --start >= end : --start > end);\n        }\n        return expr;\n    }\n  }\n  return Node.prototype.operate.call(this, op, right);\n};\n\n/**\n * Coerce `other` unit to the same type as `this` unit.\n *\n * Supports:\n *\n *    mm -> cm | in\n *    cm -> mm | in\n *    in -> mm | cm\n *\n *    ms -> s\n *    s  -> ms\n *\n *    Hz  -> kHz\n *    kHz -> Hz\n *\n * @param {Unit} other\n * @return {Unit}\n * @api public\n */\n\nUnit.prototype.coerce = function (other) {\n  if ('unit' == other.nodeName) {\n    var a = this,\n      b = other,\n      factorA = FACTOR_TABLE[a.type],\n      factorB = FACTOR_TABLE[b.type];\n    if (factorA && factorB && factorA.label == factorB.label) {\n      var bVal = b.val * (factorB.val / factorA.val);\n      return new nodes.Unit(bVal, a.type);\n    } else {\n      return new nodes.Unit(b.val, a.type);\n    }\n  } else if ('string' == other.nodeName) {\n    // keyframes interpolation\n    if ('%' == other.val) return new nodes.Unit(0, '%');\n    var val = parseFloat(other.val);\n    if (isNaN(val)) Node.prototype.coerce.call(this, other);\n    return new nodes.Unit(val);\n  } else {\n    return Node.prototype.coerce.call(this, other);\n  }\n};","map":{"version":3,"names":["Node","require","nodes","FACTOR_TABLE","val","label","Unit","module","exports","type","call","prototype","__proto__","toBoolean","Boolean","toString","clone","lineno","column","filename","toJSON","__type","operate","op","right","first","nodeName","shouldCoerce","coerce","Math","pow","start","end","expr","Expression","inclusive","push","other","a","b","factorA","factorB","bVal","parseFloat","isNaN"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/unit.js"],"sourcesContent":["\n/*!\n * Stylus - Unit\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Unit conversion table.\n */\n\nvar FACTOR_TABLE = {\n  'mm': {val: 1, label: 'mm'},\n  'cm': {val: 10, label: 'mm'},\n  'in': {val: 25.4, label: 'mm'},\n  'pt': {val: 25.4/72, label: 'mm'},\n  'ms': {val: 1, label: 'ms'},\n  's': {val: 1000, label: 'ms'},\n  'Hz': {val: 1, label: 'Hz'},\n  'kHz': {val: 1000, label: 'Hz'}\n};\n\n/**\n * Initialize a new `Unit` with the given `val` and unit `type`\n * such as \"px\", \"pt\", \"in\", etc.\n *\n * @param {String} val\n * @param {String} type\n * @api public\n */\n\nvar Unit = module.exports = function Unit(val, type){\n  Node.call(this);\n  this.val = val;\n  this.type = type;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nUnit.prototype.__proto__ = Node.prototype;\n\n/**\n * Return Boolean based on the unit value.\n *\n * @return {Boolean}\n * @api public\n */\n\nUnit.prototype.toBoolean = function(){\n  return nodes.Boolean(this.type\n      ? true\n      : this.val);\n};\n\n/**\n * Return unit string.\n *\n * @return {String}\n * @api public\n */\n\nUnit.prototype.toString = function(){\n  return this.val + (this.type || '');\n};\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nUnit.prototype.clone = function(){\n  var clone = new Unit(this.val, this.type);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nUnit.prototype.toJSON = function(){\n  return {\n    __type: 'Unit',\n    val: this.val,\n    type: this.type,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nUnit.prototype.operate = function(op, right){\n  var type = this.type || right.first.type;\n\n  // swap color\n  if ('rgba' == right.nodeName || 'hsla' == right.nodeName) {\n    return right.operate(op, this);\n  }\n\n  // operate\n  if (this.shouldCoerce(op)) {\n    right = right.first;\n    // percentages\n    if ('%' != this.type && ('-' == op || '+' == op) && '%' == right.type) {\n      right = new Unit(this.val * (right.val / 100), '%');\n    } else {\n      right = this.coerce(right);\n    }\n\n    switch (op) {\n      case '-':\n        return new Unit(this.val - right.val, type);\n      case '+':\n        // keyframes interpolation\n        type = type || (right.type == '%' && right.type);\n        return new Unit(this.val + right.val, type);\n      case '/':\n        return new Unit(this.val / right.val, type);\n      case '*':\n        return new Unit(this.val * right.val, type);\n      case '%':\n        return new Unit(this.val % right.val, type);\n      case '**':\n        return new Unit(Math.pow(this.val, right.val), type);\n      case '..':\n      case '...':\n        var start = this.val\n          , end = right.val\n          , expr = new nodes.Expression\n          , inclusive = '..' == op;\n        if (start < end) {\n          do {\n            expr.push(new nodes.Unit(start));\n          } while (inclusive ? ++start <= end : ++start < end);\n        } else {\n          do {\n            expr.push(new nodes.Unit(start));\n          } while (inclusive ? --start >= end : --start > end);\n        }\n        return expr;\n    }\n  }\n\n  return Node.prototype.operate.call(this, op, right);\n};\n\n/**\n * Coerce `other` unit to the same type as `this` unit.\n *\n * Supports:\n *\n *    mm -> cm | in\n *    cm -> mm | in\n *    in -> mm | cm\n *\n *    ms -> s\n *    s  -> ms\n *\n *    Hz  -> kHz\n *    kHz -> Hz\n *\n * @param {Unit} other\n * @return {Unit}\n * @api public\n */\n\nUnit.prototype.coerce = function(other){\n  if ('unit' == other.nodeName) {\n    var a = this\n      , b = other\n      , factorA = FACTOR_TABLE[a.type]\n      , factorB = FACTOR_TABLE[b.type];\n\n    if (factorA && factorB && (factorA.label == factorB.label)) {\n      var bVal = b.val * (factorB.val / factorA.val);\n      return new nodes.Unit(bVal, a.type);\n    } else {\n      return new nodes.Unit(b.val, a.type);\n    }\n  } else if ('string' == other.nodeName) {\n    // keyframes interpolation\n    if ('%' == other.val) return new nodes.Unit(0, '%');\n    var val = parseFloat(other.val);\n    if (isNaN(val)) Node.prototype.coerce.call(this, other);\n    return new nodes.Unit(val);\n  } else {\n    return Node.prototype.coerce.call(this, other);\n  }\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACxBC,KAAK,GAAGD,OAAO,CAAC,IAAI,CAAC;;AAEzB;AACA;AACA;;AAEA,IAAIE,YAAY,GAAG;EACjB,IAAI,EAAE;IAACC,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC3B,IAAI,EAAE;IAACD,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC5B,IAAI,EAAE;IAACD,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC9B,IAAI,EAAE;IAACD,GAAG,EAAE,IAAI,GAAC,EAAE;IAAEC,KAAK,EAAE;EAAI,CAAC;EACjC,IAAI,EAAE;IAACD,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC3B,GAAG,EAAE;IAACD,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC7B,IAAI,EAAE;IAACD,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAI,CAAC;EAC3B,KAAK,EAAE;IAACD,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,IAAI,CAACF,GAAG,EAAEK,IAAI,EAAC;EAClDT,IAAI,CAACU,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACN,GAAG,GAAGA,GAAG;EACd,IAAI,CAACK,IAAI,GAAGA,IAAI;AAClB,CAAC;;AAED;AACA;AACA;;AAEAH,IAAI,CAACK,SAAS,CAACC,SAAS,GAAGZ,IAAI,CAACW,SAAS;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEAL,IAAI,CAACK,SAAS,CAACE,SAAS,GAAG,YAAU;EACnC,OAAOX,KAAK,CAACY,OAAO,CAAC,IAAI,CAACL,IAAI,GACxB,IAAI,GACJ,IAAI,CAACL,GAAG,CAAC;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAE,IAAI,CAACK,SAAS,CAACI,QAAQ,GAAG,YAAU;EAClC,OAAO,IAAI,CAACX,GAAG,IAAI,IAAI,CAACK,IAAI,IAAI,EAAE,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAH,IAAI,CAACK,SAAS,CAACK,KAAK,GAAG,YAAU;EAC/B,IAAIA,KAAK,GAAG,IAAIV,IAAI,CAAC,IAAI,CAACF,GAAG,EAAE,IAAI,CAACK,IAAI,CAAC;EACzCO,KAAK,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BD,KAAK,CAACE,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BF,KAAK,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC9B,OAAOH,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAV,IAAI,CAACK,SAAS,CAACS,MAAM,GAAG,YAAU;EAChC,OAAO;IACLC,MAAM,EAAE,MAAM;IACdjB,GAAG,EAAE,IAAI,CAACA,GAAG;IACbK,IAAI,EAAE,IAAI,CAACA,IAAI;IACfQ,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,QAAQ,EAAE,IAAI,CAACA;EACjB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAb,IAAI,CAACK,SAAS,CAACW,OAAO,GAAG,UAASC,EAAE,EAAEC,KAAK,EAAC;EAC1C,IAAIf,IAAI,GAAG,IAAI,CAACA,IAAI,IAAIe,KAAK,CAACC,KAAK,CAAChB,IAAI;;EAExC;EACA,IAAI,MAAM,IAAIe,KAAK,CAACE,QAAQ,IAAI,MAAM,IAAIF,KAAK,CAACE,QAAQ,EAAE;IACxD,OAAOF,KAAK,CAACF,OAAO,CAACC,EAAE,EAAE,IAAI,CAAC;EAChC;;EAEA;EACA,IAAI,IAAI,CAACI,YAAY,CAACJ,EAAE,CAAC,EAAE;IACzBC,KAAK,GAAGA,KAAK,CAACC,KAAK;IACnB;IACA,IAAI,GAAG,IAAI,IAAI,CAAChB,IAAI,KAAK,GAAG,IAAIc,EAAE,IAAI,GAAG,IAAIA,EAAE,CAAC,IAAI,GAAG,IAAIC,KAAK,CAACf,IAAI,EAAE;MACrEe,KAAK,GAAG,IAAIlB,IAAI,CAAC,IAAI,CAACF,GAAG,IAAIoB,KAAK,CAACpB,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC;IACrD,CAAC,MAAM;MACLoB,KAAK,GAAG,IAAI,CAACI,MAAM,CAACJ,KAAK,CAAC;IAC5B;IAEA,QAAQD,EAAE;MACR,KAAK,GAAG;QACN,OAAO,IAAIjB,IAAI,CAAC,IAAI,CAACF,GAAG,GAAGoB,KAAK,CAACpB,GAAG,EAAEK,IAAI,CAAC;MAC7C,KAAK,GAAG;QACN;QACAA,IAAI,GAAGA,IAAI,IAAKe,KAAK,CAACf,IAAI,IAAI,GAAG,IAAIe,KAAK,CAACf,IAAK;QAChD,OAAO,IAAIH,IAAI,CAAC,IAAI,CAACF,GAAG,GAAGoB,KAAK,CAACpB,GAAG,EAAEK,IAAI,CAAC;MAC7C,KAAK,GAAG;QACN,OAAO,IAAIH,IAAI,CAAC,IAAI,CAACF,GAAG,GAAGoB,KAAK,CAACpB,GAAG,EAAEK,IAAI,CAAC;MAC7C,KAAK,GAAG;QACN,OAAO,IAAIH,IAAI,CAAC,IAAI,CAACF,GAAG,GAAGoB,KAAK,CAACpB,GAAG,EAAEK,IAAI,CAAC;MAC7C,KAAK,GAAG;QACN,OAAO,IAAIH,IAAI,CAAC,IAAI,CAACF,GAAG,GAAGoB,KAAK,CAACpB,GAAG,EAAEK,IAAI,CAAC;MAC7C,KAAK,IAAI;QACP,OAAO,IAAIH,IAAI,CAACuB,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC1B,GAAG,EAAEoB,KAAK,CAACpB,GAAG,CAAC,EAAEK,IAAI,CAAC;MACtD,KAAK,IAAI;MACT,KAAK,KAAK;QACR,IAAIsB,KAAK,GAAG,IAAI,CAAC3B,GAAG;UAChB4B,GAAG,GAAGR,KAAK,CAACpB,GAAG;UACf6B,IAAI,GAAG,IAAI/B,KAAK,CAACgC,UAAU;UAC3BC,SAAS,GAAG,IAAI,IAAIZ,EAAE;QAC1B,IAAIQ,KAAK,GAAGC,GAAG,EAAE;UACf,GAAG;YACDC,IAAI,CAACG,IAAI,CAAC,IAAIlC,KAAK,CAACI,IAAI,CAACyB,KAAK,CAAC,CAAC;UAClC,CAAC,QAAQI,SAAS,GAAG,EAAEJ,KAAK,IAAIC,GAAG,GAAG,EAAED,KAAK,GAAGC,GAAG;QACrD,CAAC,MAAM;UACL,GAAG;YACDC,IAAI,CAACG,IAAI,CAAC,IAAIlC,KAAK,CAACI,IAAI,CAACyB,KAAK,CAAC,CAAC;UAClC,CAAC,QAAQI,SAAS,GAAG,EAAEJ,KAAK,IAAIC,GAAG,GAAG,EAAED,KAAK,GAAGC,GAAG;QACrD;QACA,OAAOC,IAAI;IAAC;EAElB;EAEA,OAAOjC,IAAI,CAACW,SAAS,CAACW,OAAO,CAACZ,IAAI,CAAC,IAAI,EAAEa,EAAE,EAAEC,KAAK,CAAC;AACrD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlB,IAAI,CAACK,SAAS,CAACiB,MAAM,GAAG,UAASS,KAAK,EAAC;EACrC,IAAI,MAAM,IAAIA,KAAK,CAACX,QAAQ,EAAE;IAC5B,IAAIY,CAAC,GAAG,IAAI;MACRC,CAAC,GAAGF,KAAK;MACTG,OAAO,GAAGrC,YAAY,CAACmC,CAAC,CAAC7B,IAAI,CAAC;MAC9BgC,OAAO,GAAGtC,YAAY,CAACoC,CAAC,CAAC9B,IAAI,CAAC;IAElC,IAAI+B,OAAO,IAAIC,OAAO,IAAKD,OAAO,CAACnC,KAAK,IAAIoC,OAAO,CAACpC,KAAM,EAAE;MAC1D,IAAIqC,IAAI,GAAGH,CAAC,CAACnC,GAAG,IAAIqC,OAAO,CAACrC,GAAG,GAAGoC,OAAO,CAACpC,GAAG,CAAC;MAC9C,OAAO,IAAIF,KAAK,CAACI,IAAI,CAACoC,IAAI,EAAEJ,CAAC,CAAC7B,IAAI,CAAC;IACrC,CAAC,MAAM;MACL,OAAO,IAAIP,KAAK,CAACI,IAAI,CAACiC,CAAC,CAACnC,GAAG,EAAEkC,CAAC,CAAC7B,IAAI,CAAC;IACtC;EACF,CAAC,MAAM,IAAI,QAAQ,IAAI4B,KAAK,CAACX,QAAQ,EAAE;IACrC;IACA,IAAI,GAAG,IAAIW,KAAK,CAACjC,GAAG,EAAE,OAAO,IAAIF,KAAK,CAACI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,IAAIF,GAAG,GAAGuC,UAAU,CAACN,KAAK,CAACjC,GAAG,CAAC;IAC/B,IAAIwC,KAAK,CAACxC,GAAG,CAAC,EAAEJ,IAAI,CAACW,SAAS,CAACiB,MAAM,CAAClB,IAAI,CAAC,IAAI,EAAE2B,KAAK,CAAC;IACvD,OAAO,IAAInC,KAAK,CAACI,IAAI,CAACF,GAAG,CAAC;EAC5B,CAAC,MAAM;IACL,OAAOJ,IAAI,CAACW,SAAS,CAACiB,MAAM,CAAClB,IAAI,CAAC,IAAI,EAAE2B,KAAK,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"script"}