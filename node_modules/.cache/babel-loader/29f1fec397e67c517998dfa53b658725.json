{"ast":null,"code":"/*!\n * Stylus - String\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  sprintf = require('../functions').s,\n  utils = require('../utils'),\n  nodes = require('./');\n\n/**\n * Initialize a new `String` with the given `val`.\n *\n * @param {String} val\n * @param {String} quote\n * @api public\n */\n\nvar String = module.exports = function String(val, quote) {\n  Node.call(this);\n  this.val = val;\n  this.string = val;\n  this.prefixed = false;\n  if (typeof quote !== 'string') {\n    this.quote = \"'\";\n  } else {\n    this.quote = quote;\n  }\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nString.prototype.__proto__ = Node.prototype;\n\n/**\n * Return quoted string.\n *\n * @return {String}\n * @api public\n */\n\nString.prototype.toString = function () {\n  return this.quote + this.val + this.quote;\n};\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nString.prototype.clone = function () {\n  var clone = new String(this.val, this.quote);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nString.prototype.toJSON = function () {\n  return {\n    __type: 'String',\n    val: this.val,\n    quote: this.quote,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return Boolean based on the length of this string.\n *\n * @return {Boolean}\n * @api public\n */\n\nString.prototype.toBoolean = function () {\n  return nodes.Boolean(this.val.length);\n};\n\n/**\n * Coerce `other` to a string.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nString.prototype.coerce = function (other) {\n  switch (other.nodeName) {\n    case 'string':\n      return other;\n    case 'expression':\n      return new String(other.nodes.map(function (node) {\n        return this.coerce(node).val;\n      }, this).join(' '));\n    default:\n      return new String(other.toString());\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nString.prototype.operate = function (op, right) {\n  switch (op) {\n    case '%':\n      var expr = new nodes.Expression();\n      expr.push(this);\n\n      // constructargs\n      var args = 'expression' == right.nodeName ? utils.unwrap(right).nodes : [right];\n\n      // apply\n      return sprintf.apply(null, [expr].concat(args));\n    case '+':\n      var expr = new nodes.Expression();\n      expr.push(new String(this.val + this.coerce(right).val));\n      return expr;\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};","map":{"version":3,"names":["Node","require","sprintf","s","utils","nodes","String","module","exports","val","quote","call","string","prefixed","prototype","__proto__","toString","clone","lineno","column","filename","toJSON","__type","toBoolean","Boolean","length","coerce","other","nodeName","map","node","join","operate","op","right","expr","Expression","push","args","unwrap","apply","concat"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/string.js"],"sourcesContent":["/*!\n * Stylus - String\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , sprintf = require('../functions').s\n  , utils = require('../utils')\n  , nodes = require('./');\n\n/**\n * Initialize a new `String` with the given `val`.\n *\n * @param {String} val\n * @param {String} quote\n * @api public\n */\n\nvar String = module.exports = function String(val, quote){\n  Node.call(this);\n  this.val = val;\n  this.string = val;\n  this.prefixed = false;\n  if (typeof quote !== 'string') {\n    this.quote = \"'\";\n  } else {\n    this.quote = quote;\n  }\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nString.prototype.__proto__ = Node.prototype;\n\n/**\n * Return quoted string.\n *\n * @return {String}\n * @api public\n */\n\nString.prototype.toString = function(){\n  return this.quote + this.val + this.quote;\n};\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nString.prototype.clone = function(){\n  var clone = new String(this.val, this.quote);\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nString.prototype.toJSON = function(){\n  return {\n    __type: 'String',\n    val: this.val,\n    quote: this.quote,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return Boolean based on the length of this string.\n *\n * @return {Boolean}\n * @api public\n */\n\nString.prototype.toBoolean = function(){\n  return nodes.Boolean(this.val.length);\n};\n\n/**\n * Coerce `other` to a string.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nString.prototype.coerce = function(other){\n  switch (other.nodeName) {\n    case 'string':\n      return other;\n    case 'expression':\n      return new String(other.nodes.map(function(node){\n        return this.coerce(node).val;\n      }, this).join(' '));\n    default:\n      return new String(other.toString());\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nString.prototype.operate = function(op, right){\n  switch (op) {\n    case '%':\n      var expr = new nodes.Expression;\n      expr.push(this);\n\n      // constructargs\n      var args = 'expression' == right.nodeName\n        ? utils.unwrap(right).nodes\n        : [right];\n\n      // apply\n      return sprintf.apply(null, [expr].concat(args));\n    case '+':\n      var expr = new nodes.Expression;\n      expr.push(new String(this.val + this.coerce(right).val));\n      return expr;\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}