{"ast":null,"code":"/*!\n * Stylus - Stack\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Initialize a new `Stack`.\n *\n * @api private\n */\n\nvar Stack = module.exports = function Stack() {\n  Array.apply(this, arguments);\n};\n\n/**\n * Inherit from `Array.prototype`.\n */\n\nStack.prototype.__proto__ = Array.prototype;\n\n/**\n * Push the given `frame`.\n *\n * @param {Frame} frame\n * @api public\n */\n\nStack.prototype.push = function (frame) {\n  frame.stack = this;\n  frame.parent = this.currentFrame;\n  return [].push.apply(this, arguments);\n};\n\n/**\n * Return the current stack `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\nStack.prototype.__defineGetter__('currentFrame', function () {\n  return this[this.length - 1];\n});\n\n/**\n * Lookup stack frame for the given `block`.\n *\n * @param {Block} block\n * @return {Frame}\n * @api private\n */\n\nStack.prototype.getBlockFrame = function (block) {\n  for (var i = 0; i < this.length; ++i) {\n    if (block == this[i].block) {\n      return this[i];\n    }\n  }\n};\n\n/**\n * Lookup the given local variable `name`, relative\n * to the lexical scope of the current frame's `Block`.\n *\n * When the result of a lookup is an identifier\n * a recursive lookup is performed, defaulting to\n * returning the identifier itself.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nStack.prototype.lookup = function (name) {\n  var block = this.currentFrame.block,\n    val,\n    ret;\n  do {\n    var frame = this.getBlockFrame(block);\n    if (frame && (val = frame.lookup(name))) {\n      return val;\n    }\n  } while (block = block.parent);\n};\n\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api private\n */\n\nStack.prototype.inspect = function () {\n  return this.reverse().map(function (frame) {\n    return frame.inspect();\n  }).join('\\n');\n};\n\n/**\n * Return stack string formatted as:\n *\n *   at <context> (<filename>:<lineno>:<column>)\n *\n * @return {String}\n * @api private\n */\n\nStack.prototype.toString = function () {\n  var block,\n    node,\n    buf = [],\n    location,\n    len = this.length;\n  while (len--) {\n    block = this[len].block;\n    if (node = block.node) {\n      location = '(' + node.filename + ':' + (node.lineno + 1) + ':' + node.column + ')';\n      switch (node.nodeName) {\n        case 'function':\n          buf.push('    at ' + node.name + '() ' + location);\n          break;\n        case 'group':\n          buf.push('    at \"' + node.nodes[0].val + '\" ' + location);\n          break;\n      }\n    }\n  }\n  return buf.join('\\n');\n};","map":{"version":3,"names":["Stack","module","exports","Array","apply","arguments","prototype","__proto__","push","frame","stack","parent","currentFrame","__defineGetter__","length","getBlockFrame","block","i","lookup","name","val","ret","inspect","reverse","map","join","toString","node","buf","location","len","filename","lineno","column","nodeName","nodes"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/stack/index.js"],"sourcesContent":["\n/*!\n * Stylus - Stack\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Initialize a new `Stack`.\n *\n * @api private\n */\n\nvar Stack = module.exports = function Stack() {\n  Array.apply(this, arguments);\n};\n\n/**\n * Inherit from `Array.prototype`.\n */\n\nStack.prototype.__proto__ = Array.prototype;\n\n/**\n * Push the given `frame`.\n *\n * @param {Frame} frame\n * @api public\n */\n\nStack.prototype.push = function(frame){\n  frame.stack = this;\n  frame.parent = this.currentFrame;\n  return [].push.apply(this, arguments);\n};\n\n/**\n * Return the current stack `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\nStack.prototype.__defineGetter__('currentFrame', function(){\n  return this[this.length - 1];\n});\n\n/**\n * Lookup stack frame for the given `block`.\n *\n * @param {Block} block\n * @return {Frame}\n * @api private\n */\n\nStack.prototype.getBlockFrame = function(block){\n  for (var i = 0; i < this.length; ++i) {\n    if (block == this[i].block) {\n      return this[i];\n    }\n  }\n};\n\n/**\n * Lookup the given local variable `name`, relative\n * to the lexical scope of the current frame's `Block`.\n *\n * When the result of a lookup is an identifier\n * a recursive lookup is performed, defaulting to\n * returning the identifier itself.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nStack.prototype.lookup = function(name){\n  var block = this.currentFrame.block\n    , val\n    , ret;\n\n  do {\n    var frame = this.getBlockFrame(block);\n    if (frame && (val = frame.lookup(name))) {\n      return val;\n    }\n  } while (block = block.parent);\n};\n\n/**\n * Custom inspect.\n *\n * @return {String}\n * @api private\n */\n\nStack.prototype.inspect = function(){\n  return this.reverse().map(function(frame){\n    return frame.inspect();\n  }).join('\\n');\n};\n\n/**\n * Return stack string formatted as:\n *\n *   at <context> (<filename>:<lineno>:<column>)\n *\n * @return {String}\n * @api private\n */\n\nStack.prototype.toString = function(){\n  var block\n    , node\n    , buf = []\n    , location\n    , len = this.length;\n\n  while (len--) {\n    block = this[len].block;\n    if (node = block.node) {\n      location = '(' + node.filename + ':' + (node.lineno + 1) + ':' + node.column + ')';\n      switch (node.nodeName) {\n        case 'function':\n          buf.push('    at ' + node.name + '() ' + location);\n          break;\n        case 'group':\n          buf.push('    at \"' + node.nodes[0].val + '\" ' + location);\n          break;\n      }\n    }\n  }\n\n  return buf.join('\\n');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}