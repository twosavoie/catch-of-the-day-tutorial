{"ast":null,"code":"/*!\n * Stylus - Ident\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  nodes = require('./');\n\n/**\n * Initialize a new `Ident` by `name` with the given `val` node.\n *\n * @param {String} name\n * @param {Node} val\n * @api public\n */\n\nvar Ident = module.exports = function Ident(name, val, mixin) {\n  Node.call(this);\n  this.name = name;\n  this.string = name;\n  this.val = val || nodes.null;\n  this.mixin = !!mixin;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('isEmpty', function () {\n  return undefined == this.val;\n});\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('hash', function () {\n  return this.name;\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nIdent.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nIdent.prototype.clone = function (parent) {\n  var clone = new Ident(this.name);\n  clone.val = this.val.clone(parent, clone);\n  clone.mixin = this.mixin;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.property = this.property;\n  clone.rest = this.rest;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nIdent.prototype.toJSON = function () {\n  return {\n    __type: 'Ident',\n    name: this.name,\n    val: this.val,\n    mixin: this.mixin,\n    property: this.property,\n    rest: this.rest,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return <name>.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.toString = function () {\n  return this.name;\n};\n\n/**\n * Coerce `other` to an ident.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nIdent.prototype.coerce = function (other) {\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Ident(other.string);\n    case 'unit':\n      return new Ident(other.toString());\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nIdent.prototype.operate = function (op, right) {\n  var val = right.first;\n  switch (op) {\n    case '-':\n      if ('unit' == val.nodeName) {\n        var expr = new nodes.Expression();\n        val = val.clone();\n        val.val = -val.val;\n        expr.push(this);\n        expr.push(val);\n        return expr;\n      }\n    case '+':\n      return new nodes.Ident(this.string + this.coerce(val).string);\n  }\n  return Node.prototype.operate.call(this, op, right);\n};","map":{"version":3,"names":["Node","require","nodes","Ident","module","exports","name","val","mixin","call","string","null","prototype","__defineGetter__","undefined","__proto__","clone","parent","lineno","column","filename","property","rest","toJSON","__type","toString","coerce","other","nodeName","operate","op","right","first","expr","Expression","push"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/ident.js"],"sourcesContent":["\n/*!\n * Stylus - Ident\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `Ident` by `name` with the given `val` node.\n *\n * @param {String} name\n * @param {Node} val\n * @api public\n */\n\nvar Ident = module.exports = function Ident(name, val, mixin){\n  Node.call(this);\n  this.name = name;\n  this.string = name;\n  this.val = val || nodes.null;\n  this.mixin = !!mixin;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('isEmpty', function(){\n  return undefined == this.val;\n});\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.__defineGetter__('hash', function(){\n  return this.name;\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nIdent.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nIdent.prototype.clone = function(parent){\n  var clone = new Ident(this.name);\n  clone.val = this.val.clone(parent, clone);\n  clone.mixin = this.mixin;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.property = this.property;\n  clone.rest = this.rest;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nIdent.prototype.toJSON = function(){\n  return {\n    __type: 'Ident',\n    name: this.name,\n    val: this.val,\n    mixin: this.mixin,\n    property: this.property,\n    rest: this.rest,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n\n/**\n * Return <name>.\n *\n * @return {String}\n * @api public\n */\n\nIdent.prototype.toString = function(){\n  return this.name;\n};\n\n/**\n * Coerce `other` to an ident.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nIdent.prototype.coerce = function(other){\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Ident(other.string);\n    case 'unit':\n      return new Ident(other.toString());\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nIdent.prototype.operate = function(op, right){\n  var val = right.first;\n  switch (op) {\n    case '-':\n      if ('unit' == val.nodeName) {\n        var expr = new nodes.Expression;\n        val = val.clone();\n        val.val = -val.val;\n        expr.push(this);\n        expr.push(val);\n        return expr;\n      }\n    case '+':\n      return new nodes.Ident(this.string + this.coerce(val).string);\n  }\n  return Node.prototype.operate.call(this, op, right);\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACxBC,KAAK,GAAGD,OAAO,CAAC,IAAI,CAAC;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,KAAK,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,KAAK,CAACG,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAC;EAC3DR,IAAI,CAACS,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACH,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACI,MAAM,GAAGJ,IAAI;EAClB,IAAI,CAACC,GAAG,GAAGA,GAAG,IAAIL,KAAK,CAACS,IAAI;EAC5B,IAAI,CAACH,KAAK,GAAG,CAAC,CAACA,KAAK;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAL,KAAK,CAACS,SAAS,CAACC,gBAAgB,CAAC,SAAS,EAAE,YAAU;EACpD,OAAOC,SAAS,IAAI,IAAI,CAACP,GAAG;AAC9B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEAJ,KAAK,CAACS,SAAS,CAACC,gBAAgB,CAAC,MAAM,EAAE,YAAU;EACjD,OAAO,IAAI,CAACP,IAAI;AAClB,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAH,KAAK,CAACS,SAAS,CAACG,SAAS,GAAGf,IAAI,CAACY,SAAS;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEAT,KAAK,CAACS,SAAS,CAACI,KAAK,GAAG,UAASC,MAAM,EAAC;EACtC,IAAID,KAAK,GAAG,IAAIb,KAAK,CAAC,IAAI,CAACG,IAAI,CAAC;EAChCU,KAAK,CAACT,GAAG,GAAG,IAAI,CAACA,GAAG,CAACS,KAAK,CAACC,MAAM,EAAED,KAAK,CAAC;EACzCA,KAAK,CAACR,KAAK,GAAG,IAAI,CAACA,KAAK;EACxBQ,KAAK,CAACE,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BF,KAAK,CAACG,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BH,KAAK,CAACI,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC9BJ,KAAK,CAACK,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC9BL,KAAK,CAACM,IAAI,GAAG,IAAI,CAACA,IAAI;EACtB,OAAON,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAb,KAAK,CAACS,SAAS,CAACW,MAAM,GAAG,YAAU;EACjC,OAAO;IACLC,MAAM,EAAE,OAAO;IACflB,IAAI,EAAE,IAAI,CAACA,IAAI;IACfC,GAAG,EAAE,IAAI,CAACA,GAAG;IACbC,KAAK,EAAE,IAAI,CAACA,KAAK;IACjBa,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBC,IAAI,EAAE,IAAI,CAACA,IAAI;IACfJ,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,QAAQ,EAAE,IAAI,CAACA;EACjB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAjB,KAAK,CAACS,SAAS,CAACa,QAAQ,GAAG,YAAU;EACnC,OAAO,IAAI,CAACnB,IAAI;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,KAAK,CAACS,SAAS,CAACc,MAAM,GAAG,UAASC,KAAK,EAAC;EACtC,QAAQA,KAAK,CAACC,QAAQ;IACpB,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,SAAS;MACZ,OAAO,IAAIzB,KAAK,CAACwB,KAAK,CAACjB,MAAM,CAAC;IAChC,KAAK,MAAM;MACT,OAAO,IAAIP,KAAK,CAACwB,KAAK,CAACF,QAAQ,EAAE,CAAC;IACpC;MACE,OAAOzB,IAAI,CAACY,SAAS,CAACc,MAAM,CAACjB,IAAI,CAAC,IAAI,EAAEkB,KAAK,CAAC;EAAC;AAErD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAxB,KAAK,CAACS,SAAS,CAACiB,OAAO,GAAG,UAASC,EAAE,EAAEC,KAAK,EAAC;EAC3C,IAAIxB,GAAG,GAAGwB,KAAK,CAACC,KAAK;EACrB,QAAQF,EAAE;IACR,KAAK,GAAG;MACN,IAAI,MAAM,IAAIvB,GAAG,CAACqB,QAAQ,EAAE;QAC1B,IAAIK,IAAI,GAAG,IAAI/B,KAAK,CAACgC,UAAU;QAC/B3B,GAAG,GAAGA,GAAG,CAACS,KAAK,EAAE;QACjBT,GAAG,CAACA,GAAG,GAAG,CAACA,GAAG,CAACA,GAAG;QAClB0B,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC;QACfF,IAAI,CAACE,IAAI,CAAC5B,GAAG,CAAC;QACd,OAAO0B,IAAI;MACb;IACF,KAAK,GAAG;MACN,OAAO,IAAI/B,KAAK,CAACC,KAAK,CAAC,IAAI,CAACO,MAAM,GAAG,IAAI,CAACgB,MAAM,CAACnB,GAAG,CAAC,CAACG,MAAM,CAAC;EAAC;EAElE,OAAOV,IAAI,CAACY,SAAS,CAACiB,OAAO,CAACpB,IAAI,CAAC,IAAI,EAAEqB,EAAE,EAAEC,KAAK,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"script"}