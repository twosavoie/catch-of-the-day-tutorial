{"ast":null,"code":"var utils = require('../utils'),\n  nodes = require('../nodes'),\n  Compiler = require('../visitor/compiler');\n\n/**\n * Return a `Literal` with the given `fmt`, and\n * variable number of arguments.\n *\n * @param {String} fmt\n * @param {Node} ...\n * @return {Literal}\n * @api public\n */\n\n(module.exports = function s(fmt) {\n  fmt = utils.unwrap(fmt).nodes[0];\n  utils.assertString(fmt);\n  var self = this,\n    str = fmt.string,\n    args = arguments,\n    i = 1;\n\n  // format\n  str = str.replace(/%(s|d)/g, function (_, specifier) {\n    var arg = args[i++] || nodes.null;\n    switch (specifier) {\n      case 's':\n        return new Compiler(arg, self.options).compile();\n      case 'd':\n        arg = utils.unwrap(arg).first;\n        if ('unit' != arg.nodeName) throw new Error('%d requires a unit');\n        return arg.val;\n    }\n  });\n  return new nodes.Literal(str);\n}).raw = true;","map":{"version":3,"names":["utils","require","nodes","Compiler","module","exports","s","fmt","unwrap","assertString","self","str","string","args","arguments","i","replace","_","specifier","arg","null","options","compile","first","nodeName","Error","val","Literal","raw"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/s.js"],"sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes')\n  , Compiler = require('../visitor/compiler');\n\n/**\n * Return a `Literal` with the given `fmt`, and\n * variable number of arguments.\n *\n * @param {String} fmt\n * @param {Node} ...\n * @return {Literal}\n * @api public\n */\n\n(module.exports = function s(fmt){\n  fmt = utils.unwrap(fmt).nodes[0];\n  utils.assertString(fmt);\n  var self = this\n    , str = fmt.string\n    , args = arguments\n    , i = 1;\n\n  // format\n  str = str.replace(/%(s|d)/g, function(_, specifier){\n    var arg = args[i++] || nodes.null;\n    switch (specifier) {\n      case 's':\n        return new Compiler(arg, self.options).compile();\n      case 'd':\n        arg = utils.unwrap(arg).first;\n        if ('unit' != arg.nodeName) throw new Error('%d requires a unit');\n        return arg.val;\n    }\n  });\n\n  return new nodes.Literal(str);\n}).raw = true;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC3BC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;EAC3BE,QAAQ,GAAGF,OAAO,CAAC,qBAAqB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAACG,MAAM,CAACC,OAAO,GAAG,SAASC,CAAC,CAACC,GAAG,EAAC;EAC/BA,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAACD,GAAG,CAAC,CAACL,KAAK,CAAC,CAAC,CAAC;EAChCF,KAAK,CAACS,YAAY,CAACF,GAAG,CAAC;EACvB,IAAIG,IAAI,GAAG,IAAI;IACXC,GAAG,GAAGJ,GAAG,CAACK,MAAM;IAChBC,IAAI,GAAGC,SAAS;IAChBC,CAAC,GAAG,CAAC;;EAET;EACAJ,GAAG,GAAGA,GAAG,CAACK,OAAO,CAAC,SAAS,EAAE,UAASC,CAAC,EAAEC,SAAS,EAAC;IACjD,IAAIC,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAE,CAAC,IAAIb,KAAK,CAACkB,IAAI;IACjC,QAAQF,SAAS;MACf,KAAK,GAAG;QACN,OAAO,IAAIf,QAAQ,CAACgB,GAAG,EAAET,IAAI,CAACW,OAAO,CAAC,CAACC,OAAO,EAAE;MAClD,KAAK,GAAG;QACNH,GAAG,GAAGnB,KAAK,CAACQ,MAAM,CAACW,GAAG,CAAC,CAACI,KAAK;QAC7B,IAAI,MAAM,IAAIJ,GAAG,CAACK,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACjE,OAAON,GAAG,CAACO,GAAG;IAAC;EAErB,CAAC,CAAC;EAEF,OAAO,IAAIxB,KAAK,CAACyB,OAAO,CAAChB,GAAG,CAAC;AAC/B,CAAC,EAAEiB,GAAG,GAAG,IAAI"},"metadata":{},"sourceType":"script"}