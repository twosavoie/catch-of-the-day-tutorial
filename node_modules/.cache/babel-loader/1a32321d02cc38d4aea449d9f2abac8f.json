{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar Visitor = require('./'),\n  Parser = require('../parser'),\n  nodes = require('../nodes'),\n  utils = require('../utils'),\n  dirname = require('path').dirname,\n  fs = require('fs');\n\n/**\n * Initialize a new `DepsResolver` with the given `root` Node\n * and the `options`.\n *\n * @param {Node} root\n * @param {Object} options\n * @api private\n */\n\nvar DepsResolver = module.exports = function DepsResolver(root, options) {\n  this.root = root;\n  this.filename = options.filename;\n  this.paths = options.paths || [];\n  this.paths.push(dirname(options.filename || '.'));\n  this.options = options;\n  this.functions = {};\n  this.deps = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nDepsResolver.prototype.__proto__ = Visitor.prototype;\nvar visit = DepsResolver.prototype.visit;\nDepsResolver.prototype.visit = function (node) {\n  switch (node.nodeName) {\n    case 'root':\n    case 'block':\n    case 'expression':\n      this.visitRoot(node);\n      break;\n    case 'group':\n    case 'media':\n    case 'atblock':\n    case 'atrule':\n    case 'keyframes':\n    case 'each':\n    case 'supports':\n      this.visit(node.block);\n      break;\n    default:\n      visit.call(this, node);\n  }\n};\n\n/**\n * Visit Root.\n */\n\nDepsResolver.prototype.visitRoot = function (block) {\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    this.visit(block.nodes[i]);\n  }\n};\n\n/**\n * Visit Ident.\n */\n\nDepsResolver.prototype.visitIdent = function (ident) {\n  this.visit(ident.val);\n};\n\n/**\n * Visit If.\n */\n\nDepsResolver.prototype.visitIf = function (node) {\n  this.visit(node.block);\n  this.visit(node.cond);\n  for (var i = 0, len = node.elses.length; i < len; ++i) {\n    this.visit(node.elses[i]);\n  }\n};\n\n/**\n * Visit Function.\n */\n\nDepsResolver.prototype.visitFunction = function (fn) {\n  this.functions[fn.name] = fn.block;\n};\n\n/**\n * Visit Call.\n */\n\nDepsResolver.prototype.visitCall = function (call) {\n  if (call.name in this.functions) this.visit(this.functions[call.name]);\n  if (call.block) this.visit(call.block);\n};\n\n/**\n * Visit Import.\n */\n\nDepsResolver.prototype.visitImport = function (node) {\n  var path = !node.path.first.val.isNull && node.path.first.val || node.path.first.name,\n    literal,\n    found,\n    oldPath;\n  if (!path) return;\n  literal = /\\.css(?:\"|$)/.test(path);\n\n  // support optional .styl\n  if (!literal && !/\\.styl$/i.test(path)) {\n    oldPath = path;\n    path += '.styl';\n  }\n\n  // Lookup\n  found = utils.find(path, this.paths, this.filename);\n\n  // support optional index\n  if (!found && oldPath) found = utils.lookupIndex(oldPath, this.paths, this.filename);\n  if (!found) return;\n  this.deps = this.deps.concat(found);\n  if (literal) return;\n\n  // nested imports\n  for (var i = 0, len = found.length; i < len; ++i) {\n    var file = found[i],\n      dir = dirname(file),\n      str = fs.readFileSync(file, 'utf-8'),\n      block = new nodes.Block(),\n      parser = new Parser(str, utils.merge({\n        root: block\n      }, this.options));\n    if (!~this.paths.indexOf(dir)) this.paths.push(dir);\n    try {\n      block = parser.parse();\n    } catch (err) {\n      err.filename = file;\n      err.lineno = parser.lexer.lineno;\n      err.column = parser.lexer.column;\n      err.input = str;\n      throw err;\n    }\n    this.visit(block);\n  }\n};\n\n/**\n * Get dependencies.\n */\n\nDepsResolver.prototype.resolve = function () {\n  this.visit(this.root);\n  return utils.uniq(this.deps);\n};","map":{"version":3,"names":["Visitor","require","Parser","nodes","utils","dirname","fs","DepsResolver","module","exports","root","options","filename","paths","push","functions","deps","prototype","__proto__","visit","node","nodeName","visitRoot","block","call","i","len","length","visitIdent","ident","val","visitIf","cond","elses","visitFunction","fn","name","visitCall","visitImport","path","first","isNull","literal","found","oldPath","test","find","lookupIndex","concat","file","dir","str","readFileSync","Block","parser","merge","indexOf","parse","err","lineno","lexer","column","input","resolve","uniq"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/visitor/deps-resolver.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , Parser = require('../parser')\n  , nodes = require('../nodes')\n  , utils = require('../utils')\n  , dirname = require('path').dirname\n  , fs = require('fs');\n\n/**\n * Initialize a new `DepsResolver` with the given `root` Node\n * and the `options`.\n *\n * @param {Node} root\n * @param {Object} options\n * @api private\n */\n\nvar DepsResolver = module.exports = function DepsResolver(root, options) {\n  this.root = root;\n  this.filename = options.filename;\n  this.paths = options.paths || [];\n  this.paths.push(dirname(options.filename || '.'));\n  this.options = options;\n  this.functions = {};\n  this.deps = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nDepsResolver.prototype.__proto__ = Visitor.prototype;\n\nvar visit = DepsResolver.prototype.visit;\n\nDepsResolver.prototype.visit = function(node) {\n  switch (node.nodeName) {\n    case 'root':\n    case 'block':\n    case 'expression':\n      this.visitRoot(node);\n      break;\n    case 'group':\n    case 'media':\n    case 'atblock':\n    case 'atrule':\n    case 'keyframes':\n    case 'each':\n    case 'supports':\n      this.visit(node.block);\n      break;\n    default:\n      visit.call(this, node);\n  }\n};\n\n/**\n * Visit Root.\n */\n\nDepsResolver.prototype.visitRoot = function(block) {\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    this.visit(block.nodes[i]);\n  }\n};\n\n/**\n * Visit Ident.\n */\n\nDepsResolver.prototype.visitIdent = function(ident) {\n  this.visit(ident.val);\n};\n\n/**\n * Visit If.\n */\n\nDepsResolver.prototype.visitIf = function(node) {\n  this.visit(node.block);\n  this.visit(node.cond);\n  for (var i = 0, len = node.elses.length; i < len; ++i) {\n    this.visit(node.elses[i]);\n  }\n};\n\n/**\n * Visit Function.\n */\n\nDepsResolver.prototype.visitFunction = function(fn) {\n  this.functions[fn.name] = fn.block;\n};\n\n/**\n * Visit Call.\n */\n\nDepsResolver.prototype.visitCall = function(call) {\n  if (call.name in this.functions) this.visit(this.functions[call.name]);\n  if (call.block) this.visit(call.block);\n};\n\n/**\n * Visit Import.\n */\n\nDepsResolver.prototype.visitImport = function(node) {\n  var path = !node.path.first.val.isNull && node.path.first.val || node.path.first.name\n    , literal, found, oldPath;\n\n  if (!path) return;\n\n  literal = /\\.css(?:\"|$)/.test(path);\n\n  // support optional .styl\n  if (!literal && !/\\.styl$/i.test(path)) {\n    oldPath = path;\n    path += '.styl';\n  }\n\n  // Lookup\n  found = utils.find(path, this.paths, this.filename);\n\n  // support optional index\n  if (!found && oldPath) found = utils.lookupIndex(oldPath, this.paths, this.filename);\n\n  if (!found) return;\n\n  this.deps = this.deps.concat(found);\n\n  if (literal) return;\n\n  // nested imports\n  for (var i = 0, len = found.length; i < len; ++i) {\n    var file = found[i]\n      , dir = dirname(file)\n      , str = fs.readFileSync(file, 'utf-8')\n      , block = new nodes.Block\n      , parser = new Parser(str, utils.merge({ root: block }, this.options));\n\n    if (!~this.paths.indexOf(dir)) this.paths.push(dir);\n\n    try {\n      block = parser.parse();\n    } catch (err) {\n      err.filename = file;\n      err.lineno = parser.lexer.lineno;\n      err.column = parser.lexer.column;\n      err.input = str;\n      throw err;\n    }\n\n    this.visit(block);\n  }\n};\n\n/**\n * Get dependencies.\n */\n\nDepsResolver.prototype.resolve = function() {\n  this.visit(this.root);\n  return utils.uniq(this.deps);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}