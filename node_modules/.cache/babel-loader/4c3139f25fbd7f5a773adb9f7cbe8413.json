{"ast":null,"code":"/*!\n * Stylus - Normalizer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./'),\n  nodes = require('../nodes'),\n  utils = require('../utils');\n\n/**\n * Initialize a new `Normalizer` with the given `root` Node.\n *\n * This visitor implements the first stage of the duel-stage\n * compiler, tasked with stripping the \"garbage\" from\n * the evaluated nodes, ditching null rules, resolving\n * ruleset selectors etc. This step performs the logic\n * necessary to facilitate the \"@extend\" functionality,\n * as these must be resolved _before_ buffering output.\n *\n * @param {Node} root\n * @api public\n */\n\nvar Normalizer = module.exports = function Normalizer(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  this.hoist = options['hoist atrules'];\n  this.stack = [];\n  this.map = {};\n  this.imports = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nNormalizer.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Normalize the node tree.\n *\n * @return {Node}\n * @api private\n */\n\nNormalizer.prototype.normalize = function () {\n  var ret = this.visit(this.root);\n  if (this.hoist) {\n    // hoist @import\n    if (this.imports.length) ret.nodes = this.imports.concat(ret.nodes);\n\n    // hoist @charset\n    if (this.charset) ret.nodes = [this.charset].concat(ret.nodes);\n  }\n  return ret;\n};\n\n/**\n * Bubble up the given `node`.\n *\n * @param {Node} node\n * @api private\n */\n\nNormalizer.prototype.bubble = function (node) {\n  var props = [],\n    other = [],\n    self = this;\n  function filterProps(block) {\n    block.nodes.forEach(function (node) {\n      node = self.visit(node);\n      switch (node.nodeName) {\n        case 'property':\n          props.push(node);\n          break;\n        case 'block':\n          filterProps(node);\n          break;\n        default:\n          other.push(node);\n      }\n    });\n  }\n  filterProps(node.block);\n  if (props.length) {\n    var selector = new nodes.Selector([new nodes.Literal('&')]);\n    selector.lineno = node.lineno;\n    selector.column = node.column;\n    selector.filename = node.filename;\n    selector.val = '&';\n    var group = new nodes.Group();\n    group.lineno = node.lineno;\n    group.column = node.column;\n    group.filename = node.filename;\n    var block = new nodes.Block(node.block, group);\n    block.lineno = node.lineno;\n    block.column = node.column;\n    block.filename = node.filename;\n    props.forEach(function (prop) {\n      block.push(prop);\n    });\n    group.push(selector);\n    group.block = block;\n    node.block.nodes = [];\n    node.block.push(group);\n    other.forEach(function (n) {\n      node.block.push(n);\n    });\n    var group = this.closestGroup(node.block);\n    if (group) node.group = group.clone();\n    node.bubbled = true;\n  }\n};\n\n/**\n * Return group closest to the given `block`.\n *\n * @param {Block} block\n * @return {Group}\n * @api private\n */\n\nNormalizer.prototype.closestGroup = function (block) {\n  var parent = block.parent,\n    node;\n  while (parent && (node = parent.node)) {\n    if ('group' == node.nodeName) return node;\n    parent = node.block && node.block.parent;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nNormalizer.prototype.visitRoot = function (block) {\n  var ret = new nodes.Root(),\n    node;\n  for (var i = 0; i < block.nodes.length; ++i) {\n    node = block.nodes[i];\n    switch (node.nodeName) {\n      case 'null':\n      case 'expression':\n      case 'function':\n      case 'unit':\n      case 'atblock':\n        continue;\n      default:\n        this.rootIndex = i;\n        ret.push(this.visit(node));\n    }\n  }\n  return ret;\n};\n\n/**\n * Visit Property.\n */\n\nNormalizer.prototype.visitProperty = function (prop) {\n  this.visit(prop.expr);\n  return prop;\n};\n\n/**\n * Visit Expression.\n */\n\nNormalizer.prototype.visitExpression = function (expr) {\n  expr.nodes = expr.nodes.map(function (node) {\n    // returns `block` literal if mixin's block\n    // is used as part of a property value\n    if ('block' == node.nodeName) {\n      var literal = new nodes.Literal('block');\n      literal.lineno = expr.lineno;\n      literal.column = expr.column;\n      return literal;\n    }\n    return node;\n  });\n  return expr;\n};\n\n/**\n * Visit Block.\n */\n\nNormalizer.prototype.visitBlock = function (block) {\n  var node;\n  if (block.hasProperties) {\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      node = block.nodes[i];\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'unit':\n        case 'atblock':\n          continue;\n        default:\n          block.nodes[i] = this.visit(node);\n      }\n    }\n  }\n\n  // nesting\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n    block.nodes[i] = this.visit(node);\n  }\n  return block;\n};\n\n/**\n * Visit Group.\n */\n\nNormalizer.prototype.visitGroup = function (group) {\n  var stack = this.stack,\n    map = this.map,\n    parts;\n\n  // normalize interpolated selectors with comma\n  group.nodes.forEach(function (selector, i) {\n    if (!~selector.val.indexOf(',')) return;\n    if (~selector.val.indexOf('\\\\,')) {\n      selector.val = selector.val.replace(/\\\\,/g, ',');\n      return;\n    }\n    parts = selector.val.split(',');\n    var root = '/' == selector.val.charAt(0),\n      part,\n      s;\n    for (var k = 0, len = parts.length; k < len; ++k) {\n      part = parts[k].trim();\n      if (root && k > 0 && !~part.indexOf('&')) {\n        part = '/' + part;\n      }\n      s = new nodes.Selector([new nodes.Literal(part)]);\n      s.val = part;\n      s.block = group.block;\n      group.nodes[i++] = s;\n    }\n  });\n  stack.push(group.nodes);\n  var selectors = utils.compileSelectors(stack, true);\n\n  // map for extension lookup\n  selectors.forEach(function (selector) {\n    map[selector] = map[selector] || [];\n    map[selector].push(group);\n  });\n\n  // extensions\n  this.extend(group, selectors);\n  stack.pop();\n  return group;\n};\n\n/**\n * Visit Function.\n */\n\nNormalizer.prototype.visitFunction = function () {\n  return nodes.null;\n};\n\n/**\n * Visit Media.\n */\n\nNormalizer.prototype.visitMedia = function (media) {\n  var medias = [],\n    group = this.closestGroup(media.block),\n    parent;\n  function mergeQueries(block) {\n    block.nodes.forEach(function (node, i) {\n      switch (node.nodeName) {\n        case 'media':\n          node.val = media.val.merge(node.val);\n          medias.push(node);\n          block.nodes[i] = nodes.null;\n          break;\n        case 'block':\n          mergeQueries(node);\n          break;\n        default:\n          if (node.block && node.block.nodes) mergeQueries(node.block);\n      }\n    });\n  }\n  mergeQueries(media.block);\n  this.bubble(media);\n  if (medias.length) {\n    medias.forEach(function (node) {\n      if (group) {\n        group.block.push(node);\n      } else {\n        this.root.nodes.splice(++this.rootIndex, 0, node);\n      }\n      node = this.visit(node);\n      parent = node.block.parent;\n      if (node.bubbled && (!group || 'group' == parent.node.nodeName)) {\n        node.group.block = node.block.nodes[0].block;\n        node.block.nodes[0] = node.group;\n      }\n    }, this);\n  }\n  return media;\n};\n\n/**\n * Visit Supports.\n */\n\nNormalizer.prototype.visitSupports = function (node) {\n  this.bubble(node);\n  return node;\n};\n\n/**\n * Visit Atrule.\n */\n\nNormalizer.prototype.visitAtrule = function (node) {\n  if (node.block) node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit Keyframes.\n */\n\nNormalizer.prototype.visitKeyframes = function (node) {\n  var frames = node.block.nodes.filter(function (frame) {\n    return frame.block && frame.block.hasProperties;\n  });\n  node.frames = frames.length;\n  return node;\n};\n\n/**\n * Visit Import.\n */\n\nNormalizer.prototype.visitImport = function (node) {\n  this.imports.push(node);\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Visit Charset.\n */\n\nNormalizer.prototype.visitCharset = function (node) {\n  this.charset = node;\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Apply `group` extensions.\n *\n * @param {Group} group\n * @param {Array} selectors\n * @api private\n */\n\nNormalizer.prototype.extend = function (group, selectors) {\n  var map = this.map,\n    self = this,\n    parent = this.closestGroup(group.block);\n  group.extends.forEach(function (extend) {\n    var groups = map[extend.selector];\n    if (!groups) {\n      if (extend.optional) return;\n      groups = self._checkForPrefixedGroups(extend.selector);\n      if (!groups) {\n        var err = new Error('Failed to @extend \"' + extend.selector + '\"');\n        err.lineno = extend.lineno;\n        err.column = extend.column;\n        throw err;\n      }\n    }\n    selectors.forEach(function (selector) {\n      var node = new nodes.Selector();\n      node.val = selector;\n      node.inherits = false;\n      groups.forEach(function (group) {\n        // prevent recursive extend\n        if (!parent || parent != group) self.extend(group, selectors);\n        group.push(node);\n      });\n    });\n  });\n  group.block = this.visit(group.block);\n};\nNormalizer.prototype._checkForPrefixedGroups = function (selector) {\n  var prefix = [];\n  var map = this.map;\n  var result = null;\n  for (var i = 0; i < this.stack.length; i++) {\n    var stackElementArray = this.stack[i];\n    var stackElement = stackElementArray[0];\n    prefix.push(stackElement.val);\n    var fullSelector = prefix.join(\" \") + \" \" + selector;\n    result = map[fullSelector];\n    if (result) break;\n  }\n  return result;\n};","map":{"version":3,"names":["Visitor","require","nodes","utils","Normalizer","module","exports","root","options","call","hoist","stack","map","imports","prototype","__proto__","normalize","ret","visit","length","concat","charset","bubble","node","props","other","self","filterProps","block","forEach","nodeName","push","selector","Selector","Literal","lineno","column","filename","val","group","Group","Block","prop","n","closestGroup","clone","bubbled","parent","visitRoot","Root","i","rootIndex","visitProperty","expr","visitExpression","literal","visitBlock","hasProperties","len","visitGroup","parts","indexOf","replace","split","charAt","part","s","k","trim","selectors","compileSelectors","extend","pop","visitFunction","null","visitMedia","media","medias","mergeQueries","merge","splice","visitSupports","visitAtrule","visitKeyframes","frames","filter","frame","visitImport","visitCharset","extends","groups","optional","_checkForPrefixedGroups","err","Error","inherits","prefix","result","stackElementArray","stackElement","fullSelector","join"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/visitor/normalizer.js"],"sourcesContent":["\n/*!\n * Stylus - Normalizer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , nodes = require('../nodes')\n  , utils = require('../utils');\n\n/**\n * Initialize a new `Normalizer` with the given `root` Node.\n *\n * This visitor implements the first stage of the duel-stage\n * compiler, tasked with stripping the \"garbage\" from\n * the evaluated nodes, ditching null rules, resolving\n * ruleset selectors etc. This step performs the logic\n * necessary to facilitate the \"@extend\" functionality,\n * as these must be resolved _before_ buffering output.\n *\n * @param {Node} root\n * @api public\n */\n\nvar Normalizer = module.exports = function Normalizer(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  this.hoist = options['hoist atrules'];\n  this.stack = [];\n  this.map = {};\n  this.imports = [];\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nNormalizer.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Normalize the node tree.\n *\n * @return {Node}\n * @api private\n */\n\nNormalizer.prototype.normalize = function(){\n  var ret = this.visit(this.root);\n\n  if (this.hoist) {\n    // hoist @import\n    if (this.imports.length) ret.nodes = this.imports.concat(ret.nodes);\n\n    // hoist @charset\n    if (this.charset) ret.nodes = [this.charset].concat(ret.nodes);\n  }\n\n  return ret;\n};\n\n/**\n * Bubble up the given `node`.\n *\n * @param {Node} node\n * @api private\n */\n\nNormalizer.prototype.bubble = function(node){\n  var props = []\n    , other = []\n    , self = this;\n\n  function filterProps(block) {\n    block.nodes.forEach(function(node) {\n      node = self.visit(node);\n\n      switch (node.nodeName) {\n        case 'property':\n          props.push(node);\n          break;\n        case 'block':\n          filterProps(node);\n          break;\n        default:\n          other.push(node);\n      }\n    });\n  }\n\n  filterProps(node.block);\n\n  if (props.length) {\n    var selector = new nodes.Selector([new nodes.Literal('&')]);\n    selector.lineno = node.lineno;\n    selector.column = node.column;\n    selector.filename = node.filename;\n    selector.val = '&';\n\n    var group = new nodes.Group;\n    group.lineno = node.lineno;\n    group.column = node.column;\n    group.filename = node.filename;\n\n    var block = new nodes.Block(node.block, group);\n    block.lineno = node.lineno;\n    block.column = node.column;\n    block.filename = node.filename;\n\n    props.forEach(function(prop){\n      block.push(prop);\n    });\n\n    group.push(selector);\n    group.block = block;\n\n    node.block.nodes = [];\n    node.block.push(group);\n    other.forEach(function(n){\n      node.block.push(n);\n    });\n\n    var group = this.closestGroup(node.block);\n    if (group) node.group = group.clone();\n\n    node.bubbled = true;\n  }\n};\n\n/**\n * Return group closest to the given `block`.\n *\n * @param {Block} block\n * @return {Group}\n * @api private\n */\n\nNormalizer.prototype.closestGroup = function(block){\n  var parent = block.parent\n    , node;\n  while (parent && (node = parent.node)) {\n    if ('group' == node.nodeName) return node;\n    parent = node.block && node.block.parent;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nNormalizer.prototype.visitRoot = function(block){\n  var ret = new nodes.Root\n    , node;\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    node = block.nodes[i];\n    switch (node.nodeName) {\n      case 'null':\n      case 'expression':\n      case 'function':\n      case 'unit':\n      case 'atblock':\n        continue;\n      default:\n        this.rootIndex = i;\n        ret.push(this.visit(node));\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Visit Property.\n */\n\nNormalizer.prototype.visitProperty = function(prop){\n  this.visit(prop.expr);\n  return prop;\n};\n\n/**\n * Visit Expression.\n */\n\nNormalizer.prototype.visitExpression = function(expr){\n  expr.nodes = expr.nodes.map(function(node){\n    // returns `block` literal if mixin's block\n    // is used as part of a property value\n    if ('block' == node.nodeName) {\n      var literal = new nodes.Literal('block');\n      literal.lineno = expr.lineno;\n      literal.column = expr.column;\n      return literal;\n    }\n    return node;\n  });\n  return expr;\n};\n\n/**\n * Visit Block.\n */\n\nNormalizer.prototype.visitBlock = function(block){\n  var node;\n\n  if (block.hasProperties) {\n    for (var i = 0, len = block.nodes.length; i < len; ++i) {\n      node = block.nodes[i];\n      switch (node.nodeName) {\n        case 'null':\n        case 'expression':\n        case 'function':\n        case 'group':\n        case 'unit':\n        case 'atblock':\n          continue;\n        default:\n          block.nodes[i] = this.visit(node);\n      }\n    }\n  }\n\n  // nesting\n  for (var i = 0, len = block.nodes.length; i < len; ++i) {\n    node = block.nodes[i];\n    block.nodes[i] = this.visit(node);\n  }\n\n  return block;\n};\n\n/**\n * Visit Group.\n */\n\nNormalizer.prototype.visitGroup = function(group){\n  var stack = this.stack\n    , map = this.map\n    , parts;\n\n  // normalize interpolated selectors with comma\n  group.nodes.forEach(function(selector, i){\n    if (!~selector.val.indexOf(',')) return;\n    if (~selector.val.indexOf('\\\\,')) {\n      selector.val = selector.val.replace(/\\\\,/g, ',');\n      return;\n    }\n    parts = selector.val.split(',');\n    var root = '/' == selector.val.charAt(0)\n      , part, s;\n    for (var k = 0, len = parts.length; k < len; ++k){\n      part = parts[k].trim();\n      if (root && k > 0 && !~part.indexOf('&')) {\n        part = '/' + part;\n      }\n      s = new nodes.Selector([new nodes.Literal(part)]);\n      s.val = part;\n      s.block = group.block;\n      group.nodes[i++] = s;\n    }\n  });\n  stack.push(group.nodes);\n\n  var selectors = utils.compileSelectors(stack, true);\n\n  // map for extension lookup\n  selectors.forEach(function(selector){\n    map[selector] = map[selector] || [];\n    map[selector].push(group);\n  });\n\n  // extensions\n  this.extend(group, selectors);\n\n  stack.pop();\n  return group;\n};\n\n/**\n * Visit Function.\n */\n\nNormalizer.prototype.visitFunction = function(){\n  return nodes.null;\n};\n\n/**\n * Visit Media.\n */\n\nNormalizer.prototype.visitMedia = function(media){\n  var medias = []\n    , group = this.closestGroup(media.block)\n    , parent;\n\n  function mergeQueries(block) {\n    block.nodes.forEach(function(node, i){\n      switch (node.nodeName) {\n        case 'media':\n          node.val = media.val.merge(node.val);\n          medias.push(node);\n          block.nodes[i] = nodes.null;\n          break;\n        case 'block':\n          mergeQueries(node);\n          break;\n        default:\n          if (node.block && node.block.nodes)\n            mergeQueries(node.block);\n      }\n    });\n  }\n\n  mergeQueries(media.block);\n  this.bubble(media);\n\n  if (medias.length) {\n    medias.forEach(function(node){\n      if (group) {\n        group.block.push(node);\n      } else {\n        this.root.nodes.splice(++this.rootIndex, 0, node);\n      }\n      node = this.visit(node);\n      parent = node.block.parent;\n      if (node.bubbled && (!group || 'group' == parent.node.nodeName)) {\n        node.group.block = node.block.nodes[0].block;\n        node.block.nodes[0] = node.group;\n      }\n    }, this);\n  }\n  return media;\n};\n\n/**\n * Visit Supports.\n */\n\nNormalizer.prototype.visitSupports = function(node){\n  this.bubble(node);\n  return node;\n};\n\n/**\n * Visit Atrule.\n */\n\nNormalizer.prototype.visitAtrule = function(node){\n  if (node.block) node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit Keyframes.\n */\n\nNormalizer.prototype.visitKeyframes = function(node){\n  var frames = node.block.nodes.filter(function(frame){\n    return frame.block && frame.block.hasProperties;\n  });\n  node.frames = frames.length;\n  return node;\n};\n\n/**\n * Visit Import.\n */\n\nNormalizer.prototype.visitImport = function(node){\n  this.imports.push(node);\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Visit Charset.\n */\n\nNormalizer.prototype.visitCharset = function(node){\n  this.charset = node;\n  return this.hoist ? nodes.null : node;\n};\n\n/**\n * Apply `group` extensions.\n *\n * @param {Group} group\n * @param {Array} selectors\n * @api private\n */\n\nNormalizer.prototype.extend = function(group, selectors){\n  var map = this.map\n    , self = this\n    , parent = this.closestGroup(group.block);\n\n  group.extends.forEach(function(extend){\n    var groups = map[extend.selector];\n    if (!groups) {\n      if (extend.optional) return;\n      groups = self._checkForPrefixedGroups(extend.selector);\n      if(!groups) {\n        var err = new Error('Failed to @extend \"' + extend.selector + '\"');\n        err.lineno = extend.lineno;\n        err.column = extend.column;\n        throw err;\n      }\n    }\n    selectors.forEach(function(selector){\n      var node = new nodes.Selector;\n      node.val = selector;\n      node.inherits = false;\n      groups.forEach(function(group){\n        // prevent recursive extend\n        if (!parent || (parent != group)) self.extend(group, selectors);\n        group.push(node);\n      });\n    });\n  });\n\n  group.block = this.visit(group.block);\n};\n\nNormalizer.prototype._checkForPrefixedGroups = function (selector) {\n  var prefix = [];\n  var map = this.map;\n  var result = null;\n  for (var i = 0; i < this.stack.length; i++) {\n    var stackElementArray=this.stack[i];\n    var stackElement = stackElementArray[0];\n    prefix.push(stackElement.val);\n    var fullSelector = prefix.join(\" \") + \" \" + selector;\n    result = map[fullSelector];\n    if (result)\n      break;\n  }\n  return result;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}