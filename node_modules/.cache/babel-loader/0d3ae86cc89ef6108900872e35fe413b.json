{"ast":null,"code":"/*!\n * Stylus - Lexer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Token = require('./token'),\n  nodes = require('./nodes'),\n  errors = require('./errors');\n\n/**\n * Expose `Lexer`.\n */\n\nexports = module.exports = Lexer;\n\n/**\n * Operator aliases.\n */\n\nvar alias = {\n  'and': '&&',\n  'or': '||',\n  'is': '==',\n  'isnt': '!=',\n  'is not': '!=',\n  ':=': '?='\n};\n\n/**\n * Initialize a new `Lexer` with the given `str` and `options`.\n *\n * @param {String} str\n * @param {Object} options\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  this.stash = [];\n  this.indentStack = [];\n  this.indentRe = null;\n  this.lineno = 1;\n  this.column = 1;\n\n  // HACK!\n  function comment(str, val, offset, s) {\n    var inComment = s.lastIndexOf('/*', offset) > s.lastIndexOf('*/', offset),\n      commentIdx = s.lastIndexOf('//', offset),\n      i = s.lastIndexOf('\\n', offset),\n      double = 0,\n      single = 0;\n    if (~commentIdx && commentIdx > i) {\n      while (i != offset) {\n        if (\"'\" == s[i]) single ? single-- : single++;\n        if ('\"' == s[i]) double ? double-- : double++;\n        if ('/' == s[i] && '/' == s[i + 1]) {\n          inComment = !single && !double;\n          break;\n        }\n        ++i;\n      }\n    }\n    return inComment ? str : val === ',' && /^[,\\t\\n]+$/.test(str) ? str.replace(/\\n/, '\\r') : val + '\\r';\n  }\n  ;\n\n  // Remove UTF-8 BOM.\n  if (\"\\uFEFF\" == str.charAt(0)) str = str.slice(1);\n  this.str = str.replace(/\\s+$/, '\\n').replace(/\\r\\n?/g, '\\n').replace(/\\\\ *\\n/g, '\\r').replace(/([,(:](?!\\/\\/[^ ])) *(?:\\/\\/[^\\n]*|\\/\\*.*?\\*\\/)?\\n\\s*/g, comment).replace(/\\s*\\n[ \\t]*([,)])/g, comment);\n}\n;\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n  /**\n   * Custom inspect.\n   */\n\n  inspect: function inspect() {\n    var tok,\n      tmp = this.str,\n      buf = [];\n    while ('eos' != (tok = this.next()).type) {\n      buf.push(tok.inspect());\n    }\n    this.str = tmp;\n    return buf.concat(tok.inspect()).join('\\n');\n  },\n  /**\n   * Lookahead `n` tokens.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n\n  lookahead: function lookahead(n) {\n    var fetch = n - this.stash.length;\n    while (fetch-- > 0) this.stash.push(this.advance());\n    return this.stash[--n];\n  },\n  /**\n   * Consume the given `len`.\n   *\n   * @param {Number|Array} len\n   * @api private\n   */\n\n  skip: function skip(len) {\n    var chunk = len[0];\n    len = chunk ? chunk.length : len;\n    this.str = this.str.substr(len);\n    if (chunk) {\n      this.move(chunk);\n    } else {\n      this.column += len;\n    }\n  },\n  /**\n   * Move current line and column position.\n   *\n   * @param {String} str\n   * @api private\n   */\n\n  move: function move(str) {\n    var lines = str.match(/\\n/g),\n      idx = str.lastIndexOf('\\n');\n    if (lines) this.lineno += lines.length;\n    this.column = ~idx ? str.length - idx : this.column + str.length;\n  },\n  /**\n   * Fetch next token including those stashed by peek.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  next: function next() {\n    var tok = this.stashed() || this.advance();\n    this.prev = tok;\n    return tok;\n  },\n  /**\n   * Check if the current token is a part of selector.\n   *\n   * @return {Boolean}\n   * @api private\n   */\n\n  isPartOfSelector: function isPartOfSelector() {\n    var tok = this.stash[this.stash.length - 1] || this.prev;\n    switch (tok && tok.type) {\n      // #for\n      case 'color':\n        return 2 == tok.val.raw.length;\n      // .or\n      case '.':\n      // [is]\n      case '[':\n        return true;\n    }\n    return false;\n  },\n  /**\n   * Fetch next token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  advance: function advance() {\n    var column = this.column,\n      line = this.lineno,\n      tok = this.eos() || this.null() || this.sep() || this.keyword() || this.urlchars() || this.comment() || this.newline() || this.escaped() || this.important() || this.literal() || this.anonFunc() || this.atrule() || this.function() || this.brace() || this.paren() || this.color() || this.string() || this.unit() || this.namedop() || this.boolean() || this.unicode() || this.ident() || this.op() || function () {\n        var token = this.eol();\n        if (token) {\n          column = token.column;\n          line = token.lineno;\n        }\n        return token;\n      }.call(this) || this.space() || this.selector();\n    tok.lineno = line;\n    tok.column = column;\n    return tok;\n  },\n  /**\n   * Lookahead a single token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  peek: function peek() {\n    return this.lookahead(1);\n  },\n  /**\n   * Return the next possibly stashed token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  stashed: function stashed() {\n    return this.stash.shift();\n  },\n  /**\n   * EOS | trailing outdents.\n   */\n\n  eos: function eos() {\n    if (this.str.length) return;\n    if (this.indentStack.length) {\n      this.indentStack.shift();\n      return new Token('outdent');\n    } else {\n      return new Token('eos');\n    }\n  },\n  /**\n   * url char\n   */\n\n  urlchars: function urlchars() {\n    var captures;\n    if (!this.isURL) return;\n    if (captures = /^[\\/:@.;?&=*!,<>#%0-9]+/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n  /**\n   * ';' [ \\t]*\n   */\n\n  sep: function sep() {\n    var captures;\n    if (captures = /^;[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token(';');\n    }\n  },\n  /**\n   * '\\r'\n   */\n\n  eol: function eol() {\n    if ('\\r' == this.str[0]) {\n      ++this.lineno;\n      this.skip(1);\n      this.column = 1;\n      while (this.space());\n      return this.advance();\n    }\n  },\n  /**\n   * ' '+\n   */\n\n  space: function space() {\n    var captures;\n    if (captures = /^([ \\t]+)/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('space');\n    }\n  },\n  /**\n   * '\\\\' . ' '*\n   */\n\n  escaped: function escaped() {\n    var captures;\n    if (captures = /^\\\\(.)[ \\t]*/.exec(this.str)) {\n      var c = captures[1];\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal(c));\n    }\n  },\n  /**\n   * '@css' ' '* '{' .* '}' ' '*\n   */\n\n  literal: function literal() {\n    // HACK attack !!!\n    var captures;\n    if (captures = /^@css[ \\t]*\\{/.exec(this.str)) {\n      this.skip(captures);\n      var c,\n        braces = 1,\n        css = '',\n        node;\n      while (c = this.str[0]) {\n        this.str = this.str.substr(1);\n        switch (c) {\n          case '{':\n            ++braces;\n            break;\n          case '}':\n            --braces;\n            break;\n          case '\\n':\n          case '\\r':\n            ++this.lineno;\n            break;\n        }\n        css += c;\n        if (!braces) break;\n      }\n      css = css.replace(/\\s*}$/, '');\n      node = new nodes.Literal(css);\n      node.css = true;\n      return new Token('literal', node);\n    }\n  },\n  /**\n   * '!important' ' '*\n   */\n\n  important: function important() {\n    var captures;\n    if (captures = /^!important[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal('!important'));\n    }\n  },\n  /**\n   * '{' | '}'\n   */\n\n  brace: function brace() {\n    var captures;\n    if (captures = /^([{}])/.exec(this.str)) {\n      this.skip(1);\n      var brace = captures[1];\n      return new Token(brace, brace);\n    }\n  },\n  /**\n   * '(' | ')' ' '*\n   */\n\n  paren: function paren() {\n    var captures;\n    if (captures = /^([()])([ \\t]*)/.exec(this.str)) {\n      var paren = captures[1];\n      this.skip(captures);\n      if (')' == paren) this.isURL = false;\n      var tok = new Token(paren, paren);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n  /**\n   * 'null'\n   */\n\n  null: function _null() {\n    var captures, tok;\n    if (captures = /^(null)\\b[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token('null', nodes.null);\n      }\n      return tok;\n    }\n  },\n  /**\n   *   'if'\n   * | 'else'\n   * | 'unless'\n   * | 'return'\n   * | 'for'\n   * | 'in'\n   */\n\n  keyword: function keyword() {\n    var captures, tok;\n    if (captures = /^(return|if|else|unless|for|in)\\b[ \\t]*/.exec(this.str)) {\n      var keyword = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token(keyword, keyword);\n      }\n      return tok;\n    }\n  },\n  /**\n   *   'not'\n   * | 'and'\n   * | 'or'\n   * | 'is'\n   * | 'is not'\n   * | 'isnt'\n   * | 'is a'\n   * | 'is defined'\n   */\n\n  namedop: function namedop() {\n    var captures, tok;\n    if (captures = /^(not|and|or|is a|is defined|isnt|is not|is)(?!-)\\b([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        op = alias[op] || op;\n        tok = new Token(op, op);\n      }\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n  /**\n   *   ','\n   * | '+'\n   * | '+='\n   * | '-'\n   * | '-='\n   * | '*'\n   * | '*='\n   * | '/'\n   * | '/='\n   * | '%'\n   * | '%='\n   * | '**'\n   * | '!'\n   * | '&'\n   * | '&&'\n   * | '||'\n   * | '>'\n   * | '>='\n   * | '<'\n   * | '<='\n   * | '='\n   * | '=='\n   * | '!='\n   * | '!'\n   * | '~'\n   * | '?='\n   * | ':='\n   * | '?'\n   * | ':'\n   * | '['\n   * | ']'\n   * | '.'\n   * | '..'\n   * | '...'\n   */\n\n  op: function op() {\n    var captures;\n    if (captures = /^([.]{1,3}|&&|\\|\\||[!<>=?:]=|\\*\\*|[-+*\\/%]=?|[,=?:!~<>&\\[\\]])([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      op = alias[op] || op;\n      var tok = new Token(op, op);\n      tok.space = captures[2];\n      this.isURL = false;\n      return tok;\n    }\n  },\n  /**\n   * '@('\n   */\n\n  anonFunc: function anonFunc() {\n    var tok;\n    if ('@' == this.str[0] && '(' == this.str[1]) {\n      this.skip(2);\n      tok = new Token('function', new nodes.Ident('anonymous'));\n      tok.anonymous = true;\n      return tok;\n    }\n  },\n  /**\n   * '@' (-(\\w+)-)?[a-zA-Z0-9-_]+\n   */\n\n  atrule: function atrule() {\n    var captures;\n    if (captures = /^@(?!apply)(?:-(\\w+)-)?([a-zA-Z0-9-_]+)[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var vendor = captures[1],\n        type = captures[2],\n        tok;\n      switch (type) {\n        case 'require':\n        case 'import':\n        case 'charset':\n        case 'namespace':\n        case 'media':\n        case 'scope':\n        case 'supports':\n          return new Token(type);\n        case 'document':\n          return new Token('-moz-document');\n        case 'block':\n          return new Token('atblock');\n        case 'extend':\n        case 'extends':\n          return new Token('extend');\n        case 'keyframes':\n          return new Token(type, vendor);\n        default:\n          return new Token('atrule', vendor ? '-' + vendor + '-' + type : type);\n      }\n    }\n  },\n  /**\n   * '//' *\n   */\n\n  comment: function comment() {\n    // Single line\n    if ('/' == this.str[0] && '/' == this.str[1]) {\n      var end = this.str.indexOf('\\n');\n      if (-1 == end) end = this.str.length;\n      this.skip(end);\n      return this.advance();\n    }\n\n    // Multi-line\n    if ('/' == this.str[0] && '*' == this.str[1]) {\n      var end = this.str.indexOf('*/');\n      if (-1 == end) end = this.str.length;\n      var str = this.str.substr(0, end + 2),\n        lines = str.split(/\\n|\\r/).length - 1,\n        suppress = true,\n        inline = false;\n      this.lineno += lines;\n      this.skip(end + 2);\n      // output\n      if ('!' == str[2]) {\n        str = str.replace('*!', '*');\n        suppress = false;\n      }\n      if (this.prev && ';' == this.prev.type) inline = true;\n      return new Token('comment', new nodes.Comment(str, suppress, inline));\n    }\n  },\n  /**\n   * 'true' | 'false'\n   */\n\n  boolean: function boolean() {\n    var captures;\n    if (captures = /^(true|false)\\b([ \\t]*)/.exec(this.str)) {\n      var val = nodes.Boolean('true' == captures[1]);\n      this.skip(captures);\n      var tok = new Token('boolean', val);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n  /**\n   * 'U+' [0-9A-Fa-f?]{1,6}(?:-[0-9A-Fa-f]{1,6})?\n   */\n\n  unicode: function unicode() {\n    var captures;\n    if (captures = /^u\\+[0-9a-f?]{1,6}(?:-[0-9a-f]{1,6})?/i.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]* '('\n   */\n\n  function: function _function() {\n    var captures;\n    if (captures = /^(-*[_a-zA-Z$][-\\w\\d$]*)\\(([ \\t]*)/.exec(this.str)) {\n      var name = captures[1];\n      this.skip(captures);\n      this.isURL = 'url' == name;\n      var tok = new Token('function', new nodes.Ident(name));\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]*\n   */\n\n  ident: function ident() {\n    var captures;\n    if (captures = /^-*([_a-zA-Z$]|@apply)[-\\w\\d$]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Ident(captures[0]));\n    }\n  },\n  /**\n   * '\\n' ' '+\n   */\n\n  newline: function newline() {\n    var captures, re;\n\n    // we have established the indentation regexp\n    if (this.indentRe) {\n      captures = this.indentRe.exec(this.str);\n      // figure out if we are using tabs or spaces\n    } else {\n      // try tabs\n      re = /^\\n([\\t]*)[ \\t]*/;\n      captures = re.exec(this.str);\n\n      // nope, try spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n([ \\t]*)/;\n        captures = re.exec(this.str);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n    if (captures) {\n      var tok,\n        indents = captures[1].length;\n      this.skip(captures);\n      if (this.str[0] === ' ' || this.str[0] === '\\t') {\n        throw new errors.SyntaxError('Invalid indentation. You can use tabs or spaces to indent, but not both.');\n      }\n\n      // Blank line\n      if ('\\n' == this.str[0]) return this.advance();\n\n      // Outdent\n      if (this.indentStack.length && indents < this.indentStack[0]) {\n        while (this.indentStack.length && this.indentStack[0] > indents) {\n          this.stash.push(new Token('outdent'));\n          this.indentStack.shift();\n        }\n        tok = this.stash.pop();\n        // Indent\n      } else if (indents && indents != this.indentStack[0]) {\n        this.indentStack.unshift(indents);\n        tok = new Token('indent');\n        // Newline\n      } else {\n        tok = new Token('newline');\n      }\n      return tok;\n    }\n  },\n  /**\n   * '-'? (digit+ | digit* '.' digit+) unit\n   */\n\n  unit: function unit() {\n    var captures;\n    if (captures = /^(-)?(\\d+\\.\\d+|\\d+|\\.\\d+)(%|[a-zA-Z]+)?[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseFloat(captures[2]);\n      if ('-' == captures[1]) n = -n;\n      var node = new nodes.Unit(n, captures[3]);\n      node.raw = captures[0];\n      return new Token('unit', node);\n    }\n  },\n  /**\n   * '\"' [^\"]+ '\"' | \"'\"\" [^']+ \"'\"\n   */\n\n  string: function string() {\n    var captures;\n    if (captures = /^(\"[^\"]*\"|'[^']*')[ \\t]*/.exec(this.str)) {\n      var str = captures[1],\n        quote = captures[0][0];\n      this.skip(captures);\n      str = str.slice(1, -1).replace(/\\\\n/g, '\\n');\n      return new Token('string', new nodes.String(str, quote));\n    }\n  },\n  /**\n   * #rrggbbaa | #rrggbb | #rgba | #rgb | #nn | #n\n   */\n\n  color: function color() {\n    return this.rrggbbaa() || this.rrggbb() || this.rgba() || this.rgb() || this.nn() || this.n();\n  },\n  /**\n   * #n\n   */\n\n  n: function n() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{1})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1] + captures[1], 16),\n        color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * #nn\n   */\n\n  nn: function nn() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{2})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1], 16),\n        color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * #rgb\n   */\n\n  rgb: function rgb() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{3})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n        r = parseInt(rgb[0] + rgb[0], 16),\n        g = parseInt(rgb[1] + rgb[1], 16),\n        b = parseInt(rgb[2] + rgb[2], 16),\n        color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * #rgba\n   */\n\n  rgba: function rgba() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{4})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n        r = parseInt(rgb[0] + rgb[0], 16),\n        g = parseInt(rgb[1] + rgb[1], 16),\n        b = parseInt(rgb[2] + rgb[2], 16),\n        a = parseInt(rgb[3] + rgb[3], 16),\n        color = new nodes.RGBA(r, g, b, a / 255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * #rrggbb\n   */\n\n  rrggbb: function rrggbb() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{6})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n        r = parseInt(rgb.substr(0, 2), 16),\n        g = parseInt(rgb.substr(2, 2), 16),\n        b = parseInt(rgb.substr(4, 2), 16),\n        color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * #rrggbbaa\n   */\n\n  rrggbbaa: function rrggbbaa() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{8})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1],\n        r = parseInt(rgb.substr(0, 2), 16),\n        g = parseInt(rgb.substr(2, 2), 16),\n        b = parseInt(rgb.substr(4, 2), 16),\n        a = parseInt(rgb.substr(6, 2), 16),\n        color = new nodes.RGBA(r, g, b, a / 255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n  /**\n   * ^|[^\\n,;]+\n   */\n\n  selector: function selector() {\n    var captures;\n    if (captures = /^\\^|.*?(?=\\/\\/(?![^\\[]*\\])|[,\\n{])/.exec(this.str)) {\n      var selector = captures[0];\n      this.skip(captures);\n      return new Token('selector', selector);\n    }\n  }\n};","map":{"version":3,"names":["Token","require","nodes","errors","exports","module","Lexer","alias","str","options","stash","indentStack","indentRe","lineno","column","comment","val","offset","s","inComment","lastIndexOf","commentIdx","i","double","single","test","replace","charAt","slice","prototype","inspect","tok","tmp","buf","next","type","push","concat","join","lookahead","n","fetch","length","advance","skip","len","chunk","substr","move","lines","match","idx","stashed","prev","isPartOfSelector","raw","line","eos","null","sep","keyword","urlchars","newline","escaped","important","literal","anonFunc","atrule","function","brace","paren","color","string","unit","namedop","boolean","unicode","ident","op","token","eol","call","space","selector","peek","shift","captures","isURL","exec","Literal","c","braces","css","node","Ident","anonymous","vendor","end","indexOf","split","suppress","inline","Comment","Boolean","name","re","indents","SyntaxError","pop","unshift","parseFloat","Unit","quote","String","rrggbbaa","rrggbb","rgba","rgb","nn","parseInt","RGBA","r","g","b","a"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/lexer.js"],"sourcesContent":["\n/*!\n * Stylus - Lexer\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Token = require('./token')\n  , nodes = require('./nodes')\n  , errors = require('./errors');\n\n/**\n * Expose `Lexer`.\n */\n\nexports = module.exports = Lexer;\n\n/**\n * Operator aliases.\n */\n\nvar alias = {\n    'and': '&&'\n  , 'or': '||'\n  , 'is': '=='\n  , 'isnt': '!='\n  , 'is not': '!='\n  , ':=': '?='\n};\n\n/**\n * Initialize a new `Lexer` with the given `str` and `options`.\n *\n * @param {String} str\n * @param {Object} options\n * @api private\n */\n\nfunction Lexer(str, options) {\n  options = options || {};\n  this.stash = [];\n  this.indentStack = [];\n  this.indentRe = null;\n  this.lineno = 1;\n  this.column = 1;\n\n  // HACK!\n  function comment(str, val, offset, s) {\n    var inComment = s.lastIndexOf('/*', offset) > s.lastIndexOf('*/', offset)\n      , commentIdx = s.lastIndexOf('//', offset)\n      , i = s.lastIndexOf('\\n', offset)\n      , double = 0\n      , single = 0;\n\n    if (~commentIdx && commentIdx > i) {\n      while (i != offset) {\n        if (\"'\" == s[i]) single ? single-- : single++;\n        if ('\"' == s[i]) double ? double-- : double++;\n\n        if ('/' == s[i] && '/' == s[i + 1]) {\n          inComment = !single && !double;\n          break;\n        }\n        ++i;\n      }\n    }\n\n    return inComment\n      ? str\n      : ((val === ',' && /^[,\\t\\n]+$/.test(str)) ? str.replace(/\\n/, '\\r') : val + '\\r');\n  };\n\n  // Remove UTF-8 BOM.\n  if ('\\uFEFF' == str.charAt(0)) str = str.slice(1);\n\n  this.str = str\n    .replace(/\\s+$/, '\\n')\n    .replace(/\\r\\n?/g, '\\n')\n    .replace(/\\\\ *\\n/g, '\\r')\n    .replace(/([,(:](?!\\/\\/[^ ])) *(?:\\/\\/[^\\n]*|\\/\\*.*?\\*\\/)?\\n\\s*/g, comment)\n    .replace(/\\s*\\n[ \\t]*([,)])/g, comment);\n};\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n\n  /**\n   * Custom inspect.\n   */\n\n  inspect: function(){\n    var tok\n      , tmp = this.str\n      , buf = [];\n    while ('eos' != (tok = this.next()).type) {\n      buf.push(tok.inspect());\n    }\n    this.str = tmp;\n    return buf.concat(tok.inspect()).join('\\n');\n  },\n\n  /**\n   * Lookahead `n` tokens.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n\n  lookahead: function(n){\n    var fetch = n - this.stash.length;\n    while (fetch-- > 0) this.stash.push(this.advance());\n    return this.stash[--n];\n  },\n\n  /**\n   * Consume the given `len`.\n   *\n   * @param {Number|Array} len\n   * @api private\n   */\n\n  skip: function(len){\n    var chunk = len[0];\n    len = chunk ? chunk.length : len;\n    this.str = this.str.substr(len);\n    if (chunk) {\n      this.move(chunk);\n    } else {\n      this.column += len;\n    }\n  },\n\n  /**\n   * Move current line and column position.\n   *\n   * @param {String} str\n   * @api private\n   */\n\n  move: function(str){\n    var lines = str.match(/\\n/g)\n      , idx = str.lastIndexOf('\\n');\n\n    if (lines) this.lineno += lines.length;\n    this.column = ~idx\n      ? str.length - idx\n      : this.column + str.length;\n  },\n\n  /**\n   * Fetch next token including those stashed by peek.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  next: function() {\n    var tok = this.stashed() || this.advance();\n    this.prev = tok;\n    return tok;\n  },\n\n  /**\n   * Check if the current token is a part of selector.\n   *\n   * @return {Boolean}\n   * @api private\n   */\n\n  isPartOfSelector: function() {\n    var tok = this.stash[this.stash.length - 1] || this.prev;\n    switch (tok && tok.type) {\n      // #for\n      case 'color':\n        return 2 == tok.val.raw.length;\n      // .or\n      case '.':\n      // [is]\n      case '[':\n        return true;\n    }\n    return false;\n  },\n\n  /**\n   * Fetch next token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  advance: function() {\n    var column = this.column\n      , line = this.lineno\n      , tok = this.eos()\n      || this.null()\n      || this.sep()\n      || this.keyword()\n      || this.urlchars()\n      || this.comment()\n      || this.newline()\n      || this.escaped()\n      || this.important()\n      || this.literal()\n      || this.anonFunc()\n      || this.atrule()\n      || this.function()\n      || this.brace()\n      || this.paren()\n      || this.color()\n      || this.string()\n      || this.unit()\n      || this.namedop()\n      || this.boolean()\n      || this.unicode()\n      || this.ident()\n      || this.op()\n      || (function () {\n        var token = this.eol();\n\n        if (token) {\n          column = token.column;\n          line = token.lineno;\n        }\n\n        return token;\n      }).call(this)\n      || this.space()\n      || this.selector();\n\n    tok.lineno = line;\n    tok.column = column;\n\n    return tok;\n  },\n\n  /**\n   * Lookahead a single token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  peek: function() {\n    return this.lookahead(1);\n  },\n\n  /**\n   * Return the next possibly stashed token.\n   *\n   * @return {Token}\n   * @api private\n   */\n\n  stashed: function() {\n    return this.stash.shift();\n  },\n\n  /**\n   * EOS | trailing outdents.\n   */\n\n  eos: function() {\n    if (this.str.length) return;\n    if (this.indentStack.length) {\n      this.indentStack.shift();\n      return new Token('outdent');\n    } else {\n      return new Token('eos');\n    }\n  },\n\n  /**\n   * url char\n   */\n\n  urlchars: function() {\n    var captures;\n    if (!this.isURL) return;\n    if (captures = /^[\\/:@.;?&=*!,<>#%0-9]+/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * ';' [ \\t]*\n   */\n\n  sep: function() {\n    var captures;\n    if (captures = /^;[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token(';');\n    }\n  },\n\n  /**\n   * '\\r'\n   */\n\n  eol: function() {\n    if ('\\r' == this.str[0]) {\n      ++this.lineno;\n      this.skip(1);\n\n      this.column = 1;\n      while(this.space());\n\n      return this.advance();\n    }\n  },\n\n  /**\n   * ' '+\n   */\n\n  space: function() {\n    var captures;\n    if (captures = /^([ \\t]+)/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('space');\n    }\n  },\n\n  /**\n   * '\\\\' . ' '*\n   */\n\n  escaped: function() {\n    var captures;\n    if (captures = /^\\\\(.)[ \\t]*/.exec(this.str)) {\n      var c = captures[1];\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal(c));\n    }\n  },\n\n  /**\n   * '@css' ' '* '{' .* '}' ' '*\n   */\n\n  literal: function() {\n    // HACK attack !!!\n    var captures;\n    if (captures = /^@css[ \\t]*\\{/.exec(this.str)) {\n      this.skip(captures);\n      var c\n        , braces = 1\n        , css = ''\n        , node;\n      while (c = this.str[0]) {\n        this.str = this.str.substr(1);\n        switch (c) {\n          case '{': ++braces; break;\n          case '}': --braces; break;\n          case '\\n':\n          case '\\r':\n            ++this.lineno;\n            break;\n        }\n        css += c;\n        if (!braces) break;\n      }\n      css = css.replace(/\\s*}$/, '');\n      node = new nodes.Literal(css);\n      node.css = true;\n      return new Token('literal', node);\n    }\n  },\n\n  /**\n   * '!important' ' '*\n   */\n\n  important: function() {\n    var captures;\n    if (captures = /^!important[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Literal('!important'));\n    }\n  },\n\n  /**\n   * '{' | '}'\n   */\n\n  brace: function() {\n    var captures;\n    if (captures = /^([{}])/.exec(this.str)) {\n      this.skip(1);\n      var brace = captures[1];\n      return new Token(brace, brace);\n    }\n  },\n\n  /**\n   * '(' | ')' ' '*\n   */\n\n  paren: function() {\n    var captures;\n    if (captures = /^([()])([ \\t]*)/.exec(this.str)) {\n      var paren = captures[1];\n      this.skip(captures);\n      if (')' == paren) this.isURL = false;\n      var tok = new Token(paren, paren);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'null'\n   */\n\n  null: function() {\n    var captures\n      , tok;\n    if (captures = /^(null)\\b[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token('null', nodes.null);\n      }\n      return tok;\n    }\n  },\n\n  /**\n   *   'if'\n   * | 'else'\n   * | 'unless'\n   * | 'return'\n   * | 'for'\n   * | 'in'\n   */\n\n  keyword: function() {\n    var captures\n      , tok;\n    if (captures = /^(return|if|else|unless|for|in)\\b[ \\t]*/.exec(this.str)) {\n      var keyword = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        tok = new Token(keyword, keyword);\n      }\n      return tok;\n    }\n  },\n\n  /**\n   *   'not'\n   * | 'and'\n   * | 'or'\n   * | 'is'\n   * | 'is not'\n   * | 'isnt'\n   * | 'is a'\n   * | 'is defined'\n   */\n\n  namedop: function() {\n    var captures\n      , tok;\n    if (captures = /^(not|and|or|is a|is defined|isnt|is not|is)(?!-)\\b([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      if (this.isPartOfSelector()) {\n        tok = new Token('ident', new nodes.Ident(captures[0]));\n      } else {\n        op = alias[op] || op;\n        tok = new Token(op, op);\n      }\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   *   ','\n   * | '+'\n   * | '+='\n   * | '-'\n   * | '-='\n   * | '*'\n   * | '*='\n   * | '/'\n   * | '/='\n   * | '%'\n   * | '%='\n   * | '**'\n   * | '!'\n   * | '&'\n   * | '&&'\n   * | '||'\n   * | '>'\n   * | '>='\n   * | '<'\n   * | '<='\n   * | '='\n   * | '=='\n   * | '!='\n   * | '!'\n   * | '~'\n   * | '?='\n   * | ':='\n   * | '?'\n   * | ':'\n   * | '['\n   * | ']'\n   * | '.'\n   * | '..'\n   * | '...'\n   */\n\n  op: function() {\n    var captures;\n    if (captures = /^([.]{1,3}|&&|\\|\\||[!<>=?:]=|\\*\\*|[-+*\\/%]=?|[,=?:!~<>&\\[\\]])([ \\t]*)/.exec(this.str)) {\n      var op = captures[1];\n      this.skip(captures);\n      op = alias[op] || op;\n      var tok = new Token(op, op);\n      tok.space = captures[2];\n      this.isURL = false;\n      return tok;\n    }\n  },\n\n  /**\n   * '@('\n   */\n\n  anonFunc: function() {\n    var tok;\n    if ('@' == this.str[0] && '(' == this.str[1]) {\n      this.skip(2);\n      tok = new Token('function', new nodes.Ident('anonymous'));\n      tok.anonymous = true;\n      return tok;\n    }\n  },\n\n  /**\n   * '@' (-(\\w+)-)?[a-zA-Z0-9-_]+\n   */\n\n  atrule: function() {\n    var captures;\n    if (captures = /^@(?!apply)(?:-(\\w+)-)?([a-zA-Z0-9-_]+)[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var vendor = captures[1]\n        , type = captures[2]\n        , tok;\n      switch (type) {\n        case 'require':\n        case 'import':\n        case 'charset':\n        case 'namespace':\n        case 'media':\n        case 'scope':\n        case 'supports':\n          return new Token(type);\n        case 'document':\n          return new Token('-moz-document');\n        case 'block':\n          return new Token('atblock');\n        case 'extend':\n        case 'extends':\n          return new Token('extend');\n        case 'keyframes':\n          return new Token(type, vendor);\n        default:\n          return new Token('atrule', (vendor ? '-' + vendor + '-' + type : type));\n      }\n    }\n  },\n\n  /**\n   * '//' *\n   */\n\n  comment: function() {\n    // Single line\n    if ('/' == this.str[0] && '/' == this.str[1]) {\n      var end = this.str.indexOf('\\n');\n      if (-1 == end) end = this.str.length;\n      this.skip(end);\n      return this.advance();\n    }\n\n    // Multi-line\n    if ('/' == this.str[0] && '*' == this.str[1]) {\n      var end = this.str.indexOf('*/');\n      if (-1 == end) end = this.str.length;\n      var str = this.str.substr(0, end + 2)\n        , lines = str.split(/\\n|\\r/).length - 1\n        , suppress = true\n        , inline = false;\n      this.lineno += lines;\n      this.skip(end + 2);\n      // output\n      if ('!' == str[2]) {\n        str = str.replace('*!', '*');\n        suppress = false;\n      }\n      if (this.prev && ';' == this.prev.type) inline = true;\n      return new Token('comment', new nodes.Comment(str, suppress, inline));\n    }\n  },\n\n  /**\n   * 'true' | 'false'\n   */\n\n  boolean: function() {\n    var captures;\n    if (captures = /^(true|false)\\b([ \\t]*)/.exec(this.str)) {\n      var val = nodes.Boolean('true' == captures[1]);\n      this.skip(captures);\n      var tok = new Token('boolean', val);\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * 'U+' [0-9A-Fa-f?]{1,6}(?:-[0-9A-Fa-f]{1,6})?\n   */\n\n  unicode: function() {\n    var captures;\n    if (captures = /^u\\+[0-9a-f?]{1,6}(?:-[0-9a-f]{1,6})?/i.exec(this.str)) {\n      this.skip(captures);\n      return new Token('literal', new nodes.Literal(captures[0]));\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]* '('\n   */\n\n  function: function() {\n    var captures;\n    if (captures = /^(-*[_a-zA-Z$][-\\w\\d$]*)\\(([ \\t]*)/.exec(this.str)) {\n      var name = captures[1];\n      this.skip(captures);\n      this.isURL = 'url' == name;\n      var tok = new Token('function', new nodes.Ident(name));\n      tok.space = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * -*[_a-zA-Z$] [-\\w\\d$]*\n   */\n\n  ident: function() {\n    var captures;\n    if (captures = /^-*([_a-zA-Z$]|@apply)[-\\w\\d$]*/.exec(this.str)) {\n      this.skip(captures);\n      return new Token('ident', new nodes.Ident(captures[0]));\n    }\n  },\n\n  /**\n   * '\\n' ' '+\n   */\n\n  newline: function() {\n    var captures, re;\n\n    // we have established the indentation regexp\n    if (this.indentRe){\n      captures = this.indentRe.exec(this.str);\n    // figure out if we are using tabs or spaces\n    } else {\n      // try tabs\n      re = /^\\n([\\t]*)[ \\t]*/;\n      captures = re.exec(this.str);\n\n      // nope, try spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n([ \\t]*)/;\n        captures = re.exec(this.str);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n\n    if (captures) {\n      var tok\n        , indents = captures[1].length;\n\n      this.skip(captures);\n      if (this.str[0] === ' ' || this.str[0] === '\\t') {\n        throw new errors.SyntaxError('Invalid indentation. You can use tabs or spaces to indent, but not both.');\n      }\n\n      // Blank line\n      if ('\\n' == this.str[0]) return this.advance();\n\n      // Outdent\n      if (this.indentStack.length && indents < this.indentStack[0]) {\n        while (this.indentStack.length && this.indentStack[0] > indents) {\n          this.stash.push(new Token('outdent'));\n          this.indentStack.shift();\n        }\n        tok = this.stash.pop();\n      // Indent\n      } else if (indents && indents != this.indentStack[0]) {\n        this.indentStack.unshift(indents);\n        tok = new Token('indent');\n      // Newline\n      } else {\n        tok = new Token('newline');\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   * '-'? (digit+ | digit* '.' digit+) unit\n   */\n\n  unit: function() {\n    var captures;\n    if (captures = /^(-)?(\\d+\\.\\d+|\\d+|\\.\\d+)(%|[a-zA-Z]+)?[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseFloat(captures[2]);\n      if ('-' == captures[1]) n = -n;\n      var node = new nodes.Unit(n, captures[3]);\n      node.raw = captures[0];\n      return new Token('unit', node);\n    }\n  },\n\n  /**\n   * '\"' [^\"]+ '\"' | \"'\"\" [^']+ \"'\"\n   */\n\n  string: function() {\n    var captures;\n    if (captures = /^(\"[^\"]*\"|'[^']*')[ \\t]*/.exec(this.str)) {\n      var str = captures[1]\n        , quote = captures[0][0];\n      this.skip(captures);\n      str = str.slice(1,-1).replace(/\\\\n/g, '\\n');\n      return new Token('string', new nodes.String(str, quote));\n    }\n  },\n\n  /**\n   * #rrggbbaa | #rrggbb | #rgba | #rgb | #nn | #n\n   */\n\n  color: function() {\n    return this.rrggbbaa()\n      || this.rrggbb()\n      || this.rgba()\n      || this.rgb()\n      || this.nn()\n      || this.n()\n  },\n\n  /**\n   * #n\n   */\n\n  n: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{1})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1] + captures[1], 16)\n        , color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #nn\n   */\n\n  nn: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{2})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var n = parseInt(captures[1], 16)\n        , color = new nodes.RGBA(n, n, n, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgb\n   */\n\n  rgb: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{3})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb[0] + rgb[0], 16)\n        , g = parseInt(rgb[1] + rgb[1], 16)\n        , b = parseInt(rgb[2] + rgb[2], 16)\n        , color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rgba\n   */\n\n  rgba: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{4})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb[0] + rgb[0], 16)\n        , g = parseInt(rgb[1] + rgb[1], 16)\n        , b = parseInt(rgb[2] + rgb[2], 16)\n        , a = parseInt(rgb[3] + rgb[3], 16)\n        , color = new nodes.RGBA(r, g, b, a/255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbb\n   */\n\n  rrggbb: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{6})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb.substr(0, 2), 16)\n        , g = parseInt(rgb.substr(2, 2), 16)\n        , b = parseInt(rgb.substr(4, 2), 16)\n        , color = new nodes.RGBA(r, g, b, 1);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * #rrggbbaa\n   */\n\n  rrggbbaa: function() {\n    var captures;\n    if (captures = /^#([a-fA-F0-9]{8})[ \\t]*/.exec(this.str)) {\n      this.skip(captures);\n      var rgb = captures[1]\n        , r = parseInt(rgb.substr(0, 2), 16)\n        , g = parseInt(rgb.substr(2, 2), 16)\n        , b = parseInt(rgb.substr(4, 2), 16)\n        , a = parseInt(rgb.substr(6, 2), 16)\n        , color = new nodes.RGBA(r, g, b, a/255);\n      color.raw = captures[0];\n      return new Token('color', color);\n    }\n  },\n\n  /**\n   * ^|[^\\n,;]+\n   */\n\n  selector: function() {\n    var captures;\n    if (captures = /^\\^|.*?(?=\\/\\/(?![^\\[]*\\])|[,\\n{])/.exec(this.str)) {\n      var selector = captures[0];\n      this.skip(captures);\n      return new Token('selector', selector);\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}