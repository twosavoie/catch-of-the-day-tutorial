{"ast":null,"code":"/*!\n * Stylus - Literal\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  nodes = require('./');\n\n/**\n * Initialize a new `Literal` with the given `str`.\n *\n * @param {String} str\n * @api public\n */\n\nvar Literal = module.exports = function Literal(str) {\n  Node.call(this);\n  this.val = str;\n  this.string = str;\n  this.prefixed = false;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nLiteral.prototype.__proto__ = Node.prototype;\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.__defineGetter__('hash', function () {\n  return this.val;\n});\n\n/**\n * Return literal value.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.toString = function () {\n  return this.val.toString();\n};\n\n/**\n * Coerce `other` to a literal.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.coerce = function (other) {\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Literal(other.string);\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nLiteral.prototype.operate = function (op, right) {\n  var val = right.first;\n  switch (op) {\n    case '+':\n      return new nodes.Literal(this.string + this.coerce(val).string);\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nLiteral.prototype.toJSON = function () {\n  return {\n    __type: 'Literal',\n    val: this.val,\n    string: this.string,\n    prefixed: this.prefixed,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"names":["Node","require","nodes","Literal","module","exports","str","call","val","string","prefixed","prototype","__proto__","__defineGetter__","toString","coerce","other","nodeName","operate","op","right","first","toJSON","__type","lineno","column","filename"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/literal.js"],"sourcesContent":["\n/*!\n * Stylus - Literal\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('./');\n\n/**\n * Initialize a new `Literal` with the given `str`.\n *\n * @param {String} str\n * @api public\n */\n\nvar Literal = module.exports = function Literal(str){\n  Node.call(this);\n  this.val = str;\n  this.string = str;\n  this.prefixed = false;\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nLiteral.prototype.__proto__ = Node.prototype;\n\n/**\n * Return hash.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.__defineGetter__('hash', function(){\n  return this.val;\n});\n\n/**\n * Return literal value.\n *\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.toString = function(){\n  return this.val.toString();\n};\n\n/**\n * Coerce `other` to a literal.\n *\n * @param {Node} other\n * @return {String}\n * @api public\n */\n\nLiteral.prototype.coerce = function(other){\n  switch (other.nodeName) {\n    case 'ident':\n    case 'string':\n    case 'literal':\n      return new Literal(other.string);\n    default:\n      return Node.prototype.coerce.call(this, other);\n  }\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nLiteral.prototype.operate = function(op, right){\n  var val = right.first;\n  switch (op) {\n    case '+':\n      return new nodes.Literal(this.string + this.coerce(val).string);\n    default:\n      return Node.prototype.operate.call(this, op, right);\n  }\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nLiteral.prototype.toJSON = function(){\n  return {\n    __type: 'Literal',\n    val: this.val,\n    string: this.string,\n    prefixed: this.prefixed,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACxBC,KAAK,GAAGD,OAAO,CAAC,IAAI,CAAC;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,OAAO,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,OAAO,CAACG,GAAG,EAAC;EAClDN,IAAI,CAACO,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACC,GAAG,GAAGF,GAAG;EACd,IAAI,CAACG,MAAM,GAAGH,GAAG;EACjB,IAAI,CAACI,QAAQ,GAAG,KAAK;AACvB,CAAC;;AAED;AACA;AACA;;AAEAP,OAAO,CAACQ,SAAS,CAACC,SAAS,GAAGZ,IAAI,CAACW,SAAS;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEAR,OAAO,CAACQ,SAAS,CAACE,gBAAgB,CAAC,MAAM,EAAE,YAAU;EACnD,OAAO,IAAI,CAACL,GAAG;AACjB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEAL,OAAO,CAACQ,SAAS,CAACG,QAAQ,GAAG,YAAU;EACrC,OAAO,IAAI,CAACN,GAAG,CAACM,QAAQ,EAAE;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,OAAO,CAACQ,SAAS,CAACI,MAAM,GAAG,UAASC,KAAK,EAAC;EACxC,QAAQA,KAAK,CAACC,QAAQ;IACpB,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,SAAS;MACZ,OAAO,IAAId,OAAO,CAACa,KAAK,CAACP,MAAM,CAAC;IAClC;MACE,OAAOT,IAAI,CAACW,SAAS,CAACI,MAAM,CAACR,IAAI,CAAC,IAAI,EAAES,KAAK,CAAC;EAAC;AAErD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAb,OAAO,CAACQ,SAAS,CAACO,OAAO,GAAG,UAASC,EAAE,EAAEC,KAAK,EAAC;EAC7C,IAAIZ,GAAG,GAAGY,KAAK,CAACC,KAAK;EACrB,QAAQF,EAAE;IACR,KAAK,GAAG;MACN,OAAO,IAAIjB,KAAK,CAACC,OAAO,CAAC,IAAI,CAACM,MAAM,GAAG,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC,CAACC,MAAM,CAAC;IACjE;MACE,OAAOT,IAAI,CAACW,SAAS,CAACO,OAAO,CAACX,IAAI,CAAC,IAAI,EAAEY,EAAE,EAAEC,KAAK,CAAC;EAAC;AAE1D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAjB,OAAO,CAACQ,SAAS,CAACW,MAAM,GAAG,YAAU;EACnC,OAAO;IACLC,MAAM,EAAE,SAAS;IACjBf,GAAG,EAAE,IAAI,CAACA,GAAG;IACbC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBc,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,QAAQ,EAAE,IAAI,CAACA;EACjB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}