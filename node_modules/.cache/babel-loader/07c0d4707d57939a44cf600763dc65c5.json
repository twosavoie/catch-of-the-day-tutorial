{"ast":null,"code":"/*!\n * Stylus - Evaluator\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./'),\n  units = require('../units'),\n  nodes = require('../nodes'),\n  Stack = require('../stack'),\n  Frame = require('../stack/frame'),\n  utils = require('../utils'),\n  bifs = require('../functions'),\n  dirname = require('path').dirname,\n  colors = require('../colors'),\n  debug = require('debug')('stylus:evaluator'),\n  fs = require('fs');\n\n/**\n * Import `file` and return Block node.\n *\n * @api private\n */\nfunction importFile(node, file, literal) {\n  var importStack = this.importStack,\n    Parser = require('../parser'),\n    stat;\n\n  // Handling the `require`\n  if (node.once) {\n    if (this.requireHistory[file]) return nodes.null;\n    this.requireHistory[file] = true;\n    if (literal && !this.includeCSS) {\n      return node;\n    }\n  }\n\n  // Avoid overflows from importing the same file over again\n  if (~importStack.indexOf(file)) throw new Error('import loop has been found');\n  var str = fs.readFileSync(file, 'utf8');\n\n  // shortcut for empty files\n  if (!str.trim()) return nodes.null;\n\n  // Expose imports\n  node.path = file;\n  node.dirname = dirname(file);\n  // Store the modified time\n  stat = fs.statSync(file);\n  node.mtime = stat.mtime;\n  this.paths.push(node.dirname);\n  if (this.options._imports) this.options._imports.push(node.clone());\n\n  // Parse the file\n  importStack.push(file);\n  nodes.filename = file;\n  if (literal) {\n    literal = new nodes.Literal(str.replace(/\\r\\n?/g, '\\n'));\n    literal.lineno = literal.column = 1;\n    if (!this.resolveURL) return literal;\n  }\n\n  // parse\n  var block = new nodes.Block(),\n    parser = new Parser(str, utils.merge({\n      root: block\n    }, this.options));\n  try {\n    block = parser.parse();\n  } catch (err) {\n    var line = parser.lexer.lineno,\n      column = parser.lexer.column;\n    if (literal && this.includeCSS && this.resolveURL) {\n      this.warn('ParseError: ' + file + ':' + line + ':' + column + '. This file included as-is');\n      return literal;\n    } else {\n      err.filename = file;\n      err.lineno = line;\n      err.column = column;\n      err.input = str;\n      throw err;\n    }\n  }\n\n  // Evaluate imported \"root\"\n  block = block.clone(this.currentBlock);\n  block.parent = this.currentBlock;\n  block.scope = false;\n  var ret = this.visit(block);\n  importStack.pop();\n  if (!this.resolveURL || this.resolveURL.nocheck) this.paths.pop();\n  return ret;\n}\n\n/**\n * Initialize a new `Evaluator` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the css output, defaults to false\n *   - `warn`  Warn the user of duplicate function definitions etc\n *\n * @param {Node} root\n * @api private\n */\n\nvar Evaluator = module.exports = function Evaluator(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  var functions = this.functions = options.functions || {};\n  this.stack = new Stack();\n  this.imports = options.imports || [];\n  this.globals = options.globals || {};\n  this.paths = options.paths || [];\n  this.prefix = options.prefix || '';\n  this.filename = options.filename;\n  this.includeCSS = options['include css'];\n  this.resolveURL = functions.url && 'resolver' == functions.url.name && functions.url.options;\n  this.paths.push(dirname(options.filename || '.'));\n  this.stack.push(this.global = new Frame(root));\n  this.warnings = options.warn;\n  this.options = options;\n  this.calling = []; // TODO: remove, use stack\n  this.importStack = [];\n  this.requireHistory = {};\n  this.return = 0;\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nEvaluator.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Proxy visit to expose node line numbers.\n *\n * @param {Node} node\n * @return {Node}\n * @api private\n */\n\nvar visit = Visitor.prototype.visit;\nEvaluator.prototype.visit = function (node) {\n  try {\n    return visit.call(this, node);\n  } catch (err) {\n    if (err.filename) throw err;\n    err.lineno = node.lineno;\n    err.column = node.column;\n    err.filename = node.filename;\n    err.stylusStack = this.stack.toString();\n    try {\n      err.input = fs.readFileSync(err.filename, 'utf8');\n    } catch (err) {\n      // ignore\n    }\n    throw err;\n  }\n};\n\n/**\n * Perform evaluation setup:\n *\n *   - populate global scope\n *   - iterate imports\n *\n * @api private\n */\n\nEvaluator.prototype.setup = function () {\n  var root = this.root;\n  var imports = [];\n  this.populateGlobalScope();\n  this.imports.forEach(function (file) {\n    var expr = new nodes.Expression();\n    expr.push(new nodes.String(file));\n    imports.push(new nodes.Import(expr));\n  }, this);\n  root.nodes = imports.concat(root.nodes);\n};\n\n/**\n * Populate the global scope with:\n *\n *   - css colors\n *   - user-defined globals\n *\n * @api private\n */\n\nEvaluator.prototype.populateGlobalScope = function () {\n  var scope = this.global.scope;\n\n  // colors\n  Object.keys(colors).forEach(function (name) {\n    var color = colors[name],\n      rgba = new nodes.RGBA(color[0], color[1], color[2], color[3]),\n      node = new nodes.Ident(name, rgba);\n    rgba.name = name;\n    scope.add(node);\n  });\n\n  // expose url function\n  scope.add(new nodes.Ident('embedurl', new nodes.Function('embedurl', require('../functions/url')({\n    limit: false\n  }))));\n\n  // user-defined globals\n  var globals = this.globals;\n  Object.keys(globals).forEach(function (name) {\n    var val = globals[name];\n    if (!val.nodeName) val = new nodes.Literal(val);\n    scope.add(new nodes.Ident(name, val));\n  });\n};\n\n/**\n * Evaluate the tree.\n *\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.evaluate = function () {\n  debug('eval %s', this.filename);\n  this.setup();\n  return this.visit(this.root);\n};\n\n/**\n * Visit Group.\n */\n\nEvaluator.prototype.visitGroup = function (group) {\n  group.nodes = group.nodes.map(function (selector) {\n    selector.val = this.interpolate(selector);\n    debug('ruleset %s', selector.val);\n    return selector;\n  }, this);\n  group.block = this.visit(group.block);\n  return group;\n};\n\n/**\n * Visit Return.\n */\n\nEvaluator.prototype.visitReturn = function (ret) {\n  ret.expr = this.visit(ret.expr);\n  throw ret;\n};\n\n/**\n * Visit Media.\n */\n\nEvaluator.prototype.visitMedia = function (media) {\n  media.block = this.visit(media.block);\n  media.val = this.visit(media.val);\n  return media;\n};\n\n/**\n * Visit QueryList.\n */\n\nEvaluator.prototype.visitQueryList = function (queries) {\n  var val, query;\n  queries.nodes.forEach(this.visit, this);\n  if (1 == queries.nodes.length) {\n    query = queries.nodes[0];\n    if (val = this.lookup(query.type)) {\n      val = val.first.string;\n      if (!val) return queries;\n      var Parser = require('../parser'),\n        parser = new Parser(val, this.options);\n      queries = this.visit(parser.queries());\n    }\n  }\n  return queries;\n};\n\n/**\n * Visit Query.\n */\n\nEvaluator.prototype.visitQuery = function (node) {\n  node.predicate = this.visit(node.predicate);\n  node.type = this.visit(node.type);\n  node.nodes.forEach(this.visit, this);\n  return node;\n};\n\n/**\n * Visit Feature.\n */\n\nEvaluator.prototype.visitFeature = function (node) {\n  node.name = this.interpolate(node);\n  if (node.expr) {\n    this.return++;\n    node.expr = this.visit(node.expr);\n    this.return--;\n  }\n  return node;\n};\n\n/**\n * Visit Object.\n */\n\nEvaluator.prototype.visitObject = function (obj) {\n  for (var key in obj.vals) {\n    obj.vals[key] = this.visit(obj.vals[key]);\n  }\n  return obj;\n};\n\n/**\n * Visit Member.\n */\n\nEvaluator.prototype.visitMember = function (node) {\n  var left = node.left,\n    right = node.right,\n    obj = this.visit(left).first;\n  if ('object' != obj.nodeName) {\n    throw new Error(left.toString() + ' has no property .' + right);\n  }\n  if (node.val) {\n    this.return++;\n    obj.set(right.name, this.visit(node.val));\n    this.return--;\n  }\n  return obj.get(right.name);\n};\n\n/**\n * Visit Keyframes.\n */\n\nEvaluator.prototype.visitKeyframes = function (keyframes) {\n  var val;\n  if (keyframes.fabricated) return keyframes;\n  keyframes.val = this.interpolate(keyframes).trim();\n  if (val = this.lookup(keyframes.val)) {\n    keyframes.val = val.first.string || val.first.name;\n  }\n  keyframes.block = this.visit(keyframes.block);\n  if ('official' != keyframes.prefix) return keyframes;\n  this.vendors.forEach(function (prefix) {\n    // IE never had prefixes for keyframes\n    if ('ms' == prefix) return;\n    var node = keyframes.clone();\n    node.val = keyframes.val;\n    node.prefix = prefix;\n    node.block = keyframes.block;\n    node.fabricated = true;\n    this.currentBlock.push(node);\n  }, this);\n  return nodes.null;\n};\n\n/**\n * Visit Function.\n */\n\nEvaluator.prototype.visitFunction = function (fn) {\n  // check local\n  var local = this.stack.currentFrame.scope.lookup(fn.name);\n  if (local) this.warn('local ' + local.nodeName + ' \"' + fn.name + '\" previously defined in this scope');\n\n  // user-defined\n  var user = this.functions[fn.name];\n  if (user) this.warn('user-defined function \"' + fn.name + '\" is already defined');\n\n  // BIF\n  var bif = bifs[fn.name];\n  if (bif) this.warn('built-in function \"' + fn.name + '\" is already defined');\n  return fn;\n};\n\n/**\n * Visit Each.\n */\n\nEvaluator.prototype.visitEach = function (each) {\n  this.return++;\n  var expr = utils.unwrap(this.visit(each.expr)),\n    len = expr.nodes.length,\n    val = new nodes.Ident(each.val),\n    key = new nodes.Ident(each.key || '__index__'),\n    scope = this.currentScope,\n    block = this.currentBlock,\n    vals = [],\n    self = this,\n    body,\n    obj;\n  this.return--;\n  each.block.scope = false;\n  function visitBody(key, val) {\n    scope.add(val);\n    scope.add(key);\n    body = self.visit(each.block.clone());\n    vals = vals.concat(body.nodes);\n  }\n\n  // for prop in obj\n  if (1 == len && 'object' == expr.nodes[0].nodeName) {\n    obj = expr.nodes[0];\n    for (var prop in obj.vals) {\n      val.val = new nodes.String(prop);\n      key.val = obj.get(prop);\n      visitBody(key, val);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      val.val = expr.nodes[i];\n      key.val = new nodes.Unit(i);\n      visitBody(key, val);\n    }\n  }\n  this.mixin(vals, block);\n  return vals[vals.length - 1] || nodes.null;\n};\n\n/**\n * Visit Call.\n */\n\nEvaluator.prototype.visitCall = function (call) {\n  debug('call %s', call);\n  var fn = this.lookup(call.name),\n    literal,\n    ret;\n\n  // url()\n  this.ignoreColors = 'url' == call.name;\n\n  // Variable function\n  if (fn && 'expression' == fn.nodeName) {\n    fn = fn.nodes[0];\n  }\n\n  // Not a function? try user-defined or built-ins\n  if (fn && 'function' != fn.nodeName) {\n    fn = this.lookupFunction(call.name);\n  }\n\n  // Undefined function? render literal CSS\n  if (!fn || fn.nodeName != 'function') {\n    debug('%s is undefined', call);\n    // Special case for `calc`\n    if ('calc' == this.unvendorize(call.name)) {\n      literal = call.args.nodes && call.args.nodes[0];\n      if (literal) ret = new nodes.Literal(call.name + literal);\n    } else {\n      ret = this.literalCall(call);\n    }\n    this.ignoreColors = false;\n    return ret;\n  }\n  this.calling.push(call.name);\n\n  // Massive stack\n  if (this.calling.length > 200) {\n    throw new RangeError('Maximum stylus call stack size exceeded');\n  }\n\n  // First node in expression\n  if ('expression' == fn.nodeName) fn = fn.first;\n\n  // Evaluate arguments\n  this.return++;\n  var args = this.visit(call.args);\n  for (var key in args.map) {\n    args.map[key] = this.visit(args.map[key].clone());\n  }\n  this.return--;\n\n  // Built-in\n  if (fn.fn) {\n    debug('%s is built-in', call);\n    ret = this.invokeBuiltin(fn.fn, args);\n    // User-defined\n  } else if ('function' == fn.nodeName) {\n    debug('%s is user-defined', call);\n    // Evaluate mixin block\n    if (call.block) call.block = this.visit(call.block);\n    ret = this.invokeFunction(fn, args, call.block);\n  }\n  this.calling.pop();\n  this.ignoreColors = false;\n  return ret;\n};\n\n/**\n * Visit Ident.\n */\n\nEvaluator.prototype.visitIdent = function (ident) {\n  var prop;\n  // Property lookup\n  if (ident.property) {\n    if (prop = this.lookupProperty(ident.name)) {\n      return this.visit(prop.expr.clone());\n    }\n    return nodes.null;\n    // Lookup\n  } else if (ident.val.isNull) {\n    var val = this.lookup(ident.name);\n    // Object or Block mixin\n    if (val && ident.mixin) this.mixinNode(val);\n    return val ? this.visit(val) : ident;\n    // Assign\n  } else {\n    this.return++;\n    ident.val = this.visit(ident.val);\n    this.return--;\n    this.currentScope.add(ident);\n    return ident.val;\n  }\n};\n\n/**\n * Visit BinOp.\n */\n\nEvaluator.prototype.visitBinOp = function (binop) {\n  // Special-case \"is defined\" pseudo binop\n  if ('is defined' == binop.op) return this.isDefined(binop.left);\n  this.return++;\n  // Visit operands\n  var op = binop.op,\n    left = this.visit(binop.left),\n    right = '||' == op || '&&' == op ? binop.right : this.visit(binop.right);\n\n  // HACK: ternary\n  var val = binop.val ? this.visit(binop.val) : null;\n  this.return--;\n\n  // Operate\n  try {\n    return this.visit(left.operate(op, right, val));\n  } catch (err) {\n    // disregard coercion issues in equality\n    // checks, and simply return false\n    if ('CoercionError' == err.name) {\n      switch (op) {\n        case '==':\n          return nodes.false;\n        case '!=':\n          return nodes.true;\n      }\n    }\n    throw err;\n  }\n};\n\n/**\n * Visit UnaryOp.\n */\n\nEvaluator.prototype.visitUnaryOp = function (unary) {\n  var op = unary.op,\n    node = this.visit(unary.expr);\n  if ('!' != op) {\n    node = node.first.clone();\n    utils.assertType(node, 'unit');\n  }\n  switch (op) {\n    case '-':\n      node.val = -node.val;\n      break;\n    case '+':\n      node.val = +node.val;\n      break;\n    case '~':\n      node.val = ~node.val;\n      break;\n    case '!':\n      return node.toBoolean().negate();\n  }\n  return node;\n};\n\n/**\n * Visit TernaryOp.\n */\n\nEvaluator.prototype.visitTernary = function (ternary) {\n  var ok = this.visit(ternary.cond).toBoolean();\n  return ok.isTrue ? this.visit(ternary.trueExpr) : this.visit(ternary.falseExpr);\n};\n\n/**\n * Visit Expression.\n */\n\nEvaluator.prototype.visitExpression = function (expr) {\n  for (var i = 0, len = expr.nodes.length; i < len; ++i) {\n    expr.nodes[i] = this.visit(expr.nodes[i]);\n  }\n\n  // support (n * 5)px etc\n  if (this.castable(expr)) expr = this.cast(expr);\n  return expr;\n};\n\n/**\n * Visit Arguments.\n */\n\nEvaluator.prototype.visitArguments = Evaluator.prototype.visitExpression;\n\n/**\n * Visit Property.\n */\n\nEvaluator.prototype.visitProperty = function (prop) {\n  var name = this.interpolate(prop),\n    fn = this.lookup(name),\n    call = fn && 'function' == fn.first.nodeName,\n    literal = ~this.calling.indexOf(name),\n    _prop = this.property;\n\n  // Function of the same name\n  if (call && !literal && !prop.literal) {\n    var args = nodes.Arguments.fromExpression(utils.unwrap(prop.expr.clone()));\n    prop.name = name;\n    this.property = prop;\n    this.return++;\n    this.property.expr = this.visit(prop.expr);\n    this.return--;\n    var ret = this.visit(new nodes.Call(name, args));\n    this.property = _prop;\n    return ret;\n    // Regular property\n  } else {\n    this.return++;\n    prop.name = name;\n    prop.literal = true;\n    this.property = prop;\n    prop.expr = this.visit(prop.expr);\n    this.property = _prop;\n    this.return--;\n    return prop;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nEvaluator.prototype.visitRoot = function (block) {\n  // normalize cached imports\n  if (block != this.root) {\n    block.constructor = nodes.Block;\n    return this.visit(block);\n  }\n  for (var i = 0; i < block.nodes.length; ++i) {\n    block.index = i;\n    block.nodes[i] = this.visit(block.nodes[i]);\n  }\n  return block;\n};\n\n/**\n * Visit Block.\n */\n\nEvaluator.prototype.visitBlock = function (block) {\n  this.stack.push(new Frame(block));\n  for (block.index = 0; block.index < block.nodes.length; ++block.index) {\n    try {\n      block.nodes[block.index] = this.visit(block.nodes[block.index]);\n    } catch (err) {\n      if ('return' == err.nodeName) {\n        if (this.return) {\n          this.stack.pop();\n          throw err;\n        } else {\n          block.nodes[block.index] = err;\n          break;\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n  this.stack.pop();\n  return block;\n};\n\n/**\n * Visit Atblock.\n */\n\nEvaluator.prototype.visitAtblock = function (atblock) {\n  atblock.block = this.visit(atblock.block);\n  return atblock;\n};\n\n/**\n * Visit Atrule.\n */\n\nEvaluator.prototype.visitAtrule = function (atrule) {\n  atrule.val = this.interpolate(atrule);\n  if (atrule.block) atrule.block = this.visit(atrule.block);\n  return atrule;\n};\n\n/**\n * Visit Supports.\n */\n\nEvaluator.prototype.visitSupports = function (node) {\n  var condition = node.condition,\n    val;\n  this.return++;\n  node.condition = this.visit(condition);\n  this.return--;\n  val = condition.first;\n  if (1 == condition.nodes.length && 'string' == val.nodeName) {\n    node.condition = val.string;\n  }\n  node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit If.\n */\n\nEvaluator.prototype.visitIf = function (node) {\n  var ret,\n    block = this.currentBlock,\n    negate = node.negate;\n  this.return++;\n  var ok = this.visit(node.cond).first.toBoolean();\n  this.return--;\n  node.block.scope = node.block.hasMedia;\n\n  // Evaluate body\n  if (negate) {\n    // unless\n    if (ok.isFalse) {\n      ret = this.visit(node.block);\n    }\n  } else {\n    // if\n    if (ok.isTrue) {\n      ret = this.visit(node.block);\n      // else\n    } else if (node.elses.length) {\n      var elses = node.elses,\n        len = elses.length,\n        cond;\n      for (var i = 0; i < len; ++i) {\n        // else if\n        if (elses[i].cond) {\n          elses[i].block.scope = elses[i].block.hasMedia;\n          this.return++;\n          cond = this.visit(elses[i].cond).first.toBoolean();\n          this.return--;\n          if (cond.isTrue) {\n            ret = this.visit(elses[i].block);\n            break;\n          }\n          // else\n        } else {\n          elses[i].scope = elses[i].hasMedia;\n          ret = this.visit(elses[i]);\n        }\n      }\n    }\n  }\n\n  // mixin conditional statements within\n  // a selector group or at-rule\n  if (ret && !node.postfix && block.node && ~['group', 'atrule', 'media', 'supports', 'keyframes'].indexOf(block.node.nodeName)) {\n    this.mixin(ret.nodes, block);\n    return nodes.null;\n  }\n  return ret || nodes.null;\n};\n\n/**\n * Visit Extend.\n */\n\nEvaluator.prototype.visitExtend = function (extend) {\n  var block = this.currentBlock;\n  if ('group' != block.node.nodeName) block = this.closestGroup;\n  extend.selectors.forEach(function (selector) {\n    block.node.extends.push({\n      // Cloning the selector for when we are in a loop and don't want it to affect\n      // the selector nodes and cause the values to be different to expected\n      selector: this.interpolate(selector.clone()).trim(),\n      optional: selector.optional,\n      lineno: selector.lineno,\n      column: selector.column\n    });\n  }, this);\n  return nodes.null;\n};\n\n/**\n * Visit Import.\n */\n\nEvaluator.prototype.visitImport = function (imported) {\n  this.return++;\n  var path = this.visit(imported.path).first,\n    nodeName = imported.once ? 'require' : 'import',\n    found,\n    literal;\n  this.return--;\n  debug('import %s', path);\n\n  // url() passed\n  if ('url' == path.name) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  }\n\n  // Ensure string\n  if (!path.string) throw new Error('@' + nodeName + ' string expected');\n  var name = path = path.string;\n\n  // Absolute URL or hash\n  if (/(?:url\\s*\\(\\s*)?['\"]?(?:#|(?:https?:)?\\/\\/)/i.test(path)) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  }\n\n  // Literal\n  if (/\\.css(?:\"|$)/.test(path)) {\n    literal = true;\n    if (!imported.once && !this.includeCSS) {\n      return imported;\n    }\n  }\n\n  // support optional .styl\n  if (!literal && !/\\.styl$/i.test(path)) path += '.styl';\n\n  // Lookup\n  found = utils.find(path, this.paths, this.filename);\n  if (!found) {\n    found = utils.lookupIndex(name, this.paths, this.filename);\n  }\n\n  // Throw if import failed\n  if (!found) throw new Error('failed to locate @' + nodeName + ' file ' + path);\n  var block = new nodes.Block();\n  for (var i = 0, len = found.length; i < len; ++i) {\n    block.push(importFile.call(this, imported, found[i], literal));\n  }\n  return block;\n};\n\n/**\n * Invoke `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeFunction = function (fn, args, content) {\n  var block = new nodes.Block(fn.block.parent);\n\n  // Clone the function body\n  // to prevent mutation of subsequent calls\n  var body = fn.block.clone(block);\n\n  // mixin block\n  var mixinBlock = this.stack.currentFrame.block;\n\n  // new block scope\n  this.stack.push(new Frame(block));\n  var scope = this.currentScope;\n\n  // normalize arguments\n  if ('arguments' != args.nodeName) {\n    var expr = new nodes.Expression();\n    expr.push(args);\n    args = nodes.Arguments.fromExpression(expr);\n  }\n\n  // arguments local\n  scope.add(new nodes.Ident('arguments', args));\n\n  // mixin scope introspection\n  scope.add(new nodes.Ident('mixin', this.return ? nodes.false : new nodes.String(mixinBlock.nodeName)));\n\n  // current property\n  if (this.property) {\n    var prop = this.propertyExpression(this.property, fn.name);\n    scope.add(new nodes.Ident('current-property', prop));\n  } else {\n    scope.add(new nodes.Ident('current-property', nodes.null));\n  }\n\n  // current call stack\n  var expr = new nodes.Expression();\n  for (var i = this.calling.length - 1; i--;) {\n    expr.push(new nodes.Literal(this.calling[i]));\n  }\n  ;\n  scope.add(new nodes.Ident('called-from', expr));\n\n  // inject arguments as locals\n  var i = 0,\n    len = args.nodes.length;\n  fn.params.nodes.forEach(function (node) {\n    // rest param support\n    if (node.rest) {\n      node.val = new nodes.Expression();\n      for (; i < len; ++i) node.val.push(args.nodes[i]);\n      node.val.preserve = true;\n      node.val.isList = args.isList;\n      // argument default support\n    } else {\n      var arg = args.map[node.name] || args.nodes[i++];\n      node = node.clone();\n      if (arg) {\n        arg.isEmpty ? args.nodes[i - 1] = this.visit(node) : node.val = arg;\n      } else {\n        args.push(node.val);\n      }\n\n      // required argument not satisfied\n      if (node.val.isNull) {\n        throw new Error('argument \"' + node + '\" required for ' + fn);\n      }\n    }\n    scope.add(node);\n  }, this);\n\n  // mixin block\n  if (content) scope.add(new nodes.Ident('block', content, true));\n\n  // invoke\n  return this.invoke(body, true, fn.filename);\n};\n\n/**\n * Invoke built-in `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeBuiltin = function (fn, args) {\n  // Map arguments to first node\n  // providing a nicer js api for\n  // BIFs. Functions may specify that\n  // they wish to accept full expressions\n  // via .raw\n  if (fn.raw) {\n    args = args.nodes;\n  } else {\n    if (!fn.params) {\n      fn.params = utils.params(fn);\n    }\n    args = fn.params.reduce(function (ret, param) {\n      var arg = args.map[param] || args.nodes.shift();\n      if (arg) {\n        arg = utils.unwrap(arg);\n        var len = arg.nodes.length;\n        if (len > 1) {\n          for (var i = 0; i < len; ++i) {\n            ret.push(utils.unwrap(arg.nodes[i].first));\n          }\n        } else {\n          ret.push(arg.first);\n        }\n      }\n      return ret;\n    }, []);\n  }\n\n  // Invoke the BIF\n  var body = utils.coerce(fn.apply(this, args));\n\n  // Always wrapping allows js functions\n  // to return several values with a single\n  // Expression node\n  var expr = new nodes.Expression();\n  expr.push(body);\n  body = expr;\n\n  // Invoke\n  return this.invoke(body);\n};\n\n/**\n * Invoke the given function `body`.\n *\n * @param {Block} body\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invoke = function (body, stack, filename) {\n  var self = this,\n    ret;\n  if (filename) this.paths.push(dirname(filename));\n\n  // Return\n  if (this.return) {\n    ret = this.eval(body.nodes);\n    if (stack) this.stack.pop();\n    // Mixin\n  } else {\n    body = this.visit(body);\n    if (stack) this.stack.pop();\n    this.mixin(body.nodes, this.currentBlock);\n    ret = nodes.null;\n  }\n  if (filename) this.paths.pop();\n  return ret;\n};\n\n/**\n * Mixin the given `nodes` to the given `block`.\n *\n * @param {Array} nodes\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype.mixin = function (nodes, block) {\n  if (!nodes.length) return;\n  var len = block.nodes.length,\n    head = block.nodes.slice(0, block.index),\n    tail = block.nodes.slice(block.index + 1, len);\n  this._mixin(nodes, head, block);\n  block.index = 0;\n  block.nodes = head.concat(tail);\n};\n\n/**\n * Mixin the given `items` to the `dest` array.\n *\n * @param {Array} items\n * @param {Array} dest\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype._mixin = function (items, dest, block) {\n  var node,\n    len = items.length;\n  for (var i = 0; i < len; ++i) {\n    switch ((node = items[i]).nodeName) {\n      case 'return':\n        return;\n      case 'block':\n        this._mixin(node.nodes, dest, block);\n        break;\n      case 'media':\n        // fix link to the parent block\n        var parentNode = node.block.parent.node;\n        if (parentNode && 'call' != parentNode.nodeName) {\n          node.block.parent = block;\n        }\n      case 'property':\n        var val = node.expr;\n        // prevent `block` mixin recursion\n        if (node.literal && 'block' == val.first.name) {\n          val = utils.unwrap(val);\n          val.nodes[0] = new nodes.Literal('block');\n        }\n      default:\n        dest.push(node);\n    }\n  }\n};\n\n/**\n * Mixin the given `node` to the current block.\n *\n * @param {Node} node\n * @api private\n */\n\nEvaluator.prototype.mixinNode = function (node) {\n  node = this.visit(node.first);\n  switch (node.nodeName) {\n    case 'object':\n      this.mixinObject(node);\n      return nodes.null;\n    case 'block':\n    case 'atblock':\n      this.mixin(node.nodes, this.currentBlock);\n      return nodes.null;\n  }\n};\n\n/**\n * Mixin the given `object` to the current block.\n *\n * @param {Object} object\n * @api private\n */\n\nEvaluator.prototype.mixinObject = function (object) {\n  var Parser = require('../parser'),\n    root = this.root,\n    str = '$block ' + object.toBlock(),\n    parser = new Parser(str, utils.merge({\n      root: block\n    }, this.options)),\n    block;\n  try {\n    block = parser.parse();\n  } catch (err) {\n    err.filename = this.filename;\n    err.lineno = parser.lexer.lineno;\n    err.column = parser.lexer.column;\n    err.input = str;\n    throw err;\n  }\n  block.parent = root;\n  block.scope = false;\n  var ret = this.visit(block),\n    vals = ret.first.nodes;\n  for (var i = 0, len = vals.length; i < len; ++i) {\n    if (vals[i].block) {\n      this.mixin(vals[i].block.nodes, this.currentBlock);\n      break;\n    }\n  }\n};\n\n/**\n * Evaluate the given `vals`.\n *\n * @param {Array} vals\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.eval = function (vals) {\n  if (!vals) return nodes.null;\n  var len = vals.length,\n    node = nodes.null;\n  try {\n    for (var i = 0; i < len; ++i) {\n      node = vals[i];\n      switch (node.nodeName) {\n        case 'if':\n          if ('block' != node.block.nodeName) {\n            node = this.visit(node);\n            break;\n          }\n        case 'each':\n        case 'block':\n          node = this.visit(node);\n          if (node.nodes) node = this.eval(node.nodes);\n          break;\n        default:\n          node = this.visit(node);\n      }\n    }\n  } catch (err) {\n    if ('return' == err.nodeName) {\n      return err.expr;\n    } else {\n      throw err;\n    }\n  }\n  return node;\n};\n\n/**\n * Literal function `call`.\n *\n * @param {Call} call\n * @return {call}\n * @api private\n */\n\nEvaluator.prototype.literalCall = function (call) {\n  call.args = this.visit(call.args);\n  return call;\n};\n\n/**\n * Lookup property `name`.\n *\n * @param {String} name\n * @return {Property}\n * @api private\n */\n\nEvaluator.prototype.lookupProperty = function (name) {\n  var i = this.stack.length,\n    index = this.currentBlock.index,\n    top = i,\n    nodes,\n    block,\n    len,\n    other;\n  while (i--) {\n    block = this.stack[i].block;\n    if (!block.node) continue;\n    switch (block.node.nodeName) {\n      case 'group':\n      case 'function':\n      case 'if':\n      case 'each':\n      case 'atrule':\n      case 'media':\n      case 'atblock':\n      case 'call':\n        nodes = block.nodes;\n        // scan siblings from the property index up\n        if (i + 1 == top) {\n          while (index--) {\n            // ignore current property\n            if (this.property == nodes[index]) continue;\n            other = this.interpolate(nodes[index]);\n            if (name == other) return nodes[index].clone();\n          }\n          // sequential lookup for non-siblings (for now)\n        } else {\n          len = nodes.length;\n          while (len--) {\n            if ('property' != nodes[len].nodeName || this.property == nodes[len]) continue;\n            other = this.interpolate(nodes[len]);\n            if (name == other) return nodes[len].clone();\n          }\n        }\n        break;\n    }\n  }\n  return nodes.null;\n};\n\n/**\n * Return the closest mixin-able `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestBlock', function () {\n  var i = this.stack.length,\n    block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node) {\n      switch (block.node.nodeName) {\n        case 'group':\n        case 'keyframes':\n        case 'atrule':\n        case 'atblock':\n        case 'media':\n        case 'call':\n          return block;\n      }\n    }\n  }\n});\n\n/**\n * Return the closest group block.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestGroup', function () {\n  var i = this.stack.length,\n    block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      return block;\n    }\n  }\n});\n\n/**\n * Return the current selectors stack.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('selectorStack', function () {\n  var block,\n    stack = [];\n  for (var i = 0, len = this.stack.length; i < len; ++i) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      block.node.nodes.forEach(function (selector) {\n        if (!selector.val) selector.val = this.interpolate(selector);\n      }, this);\n      stack.push(block.node.nodes);\n    }\n  }\n  return stack;\n});\n\n/**\n * Lookup `name`, with support for JavaScript\n * functions, and BIFs.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.lookup = function (name) {\n  var val;\n  if (this.ignoreColors && name in colors) return;\n  if (val = this.stack.lookup(name)) {\n    return utils.unwrap(val);\n  } else {\n    return this.lookupFunction(name);\n  }\n};\n\n/**\n * Map segments in `node` returning a string.\n *\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\nEvaluator.prototype.interpolate = function (node) {\n  var self = this,\n    isSelector = 'selector' == node.nodeName;\n  function toString(node) {\n    switch (node.nodeName) {\n      case 'function':\n      case 'ident':\n        return node.name;\n      case 'literal':\n      case 'string':\n        if (self.prefix && !node.prefixed && !node.val.nodeName) {\n          node.val = node.val.replace(/\\.(?=[\\w-])|^\\.$/g, '.' + self.prefix);\n          node.prefixed = true;\n        }\n        return node.val;\n      case 'unit':\n        // Interpolation inside keyframes\n        return '%' == node.type ? node.val + '%' : node.val;\n      case 'member':\n        return toString(self.visit(node));\n      case 'expression':\n        // Prevent cyclic `selector()` calls.\n        if (self.calling && ~self.calling.indexOf('selector') && self._selector) return self._selector;\n        self.return++;\n        var ret = toString(self.visit(node).first);\n        self.return--;\n        if (isSelector) self._selector = ret;\n        return ret;\n    }\n  }\n  if (node.segments) {\n    return node.segments.map(toString).join('');\n  } else {\n    return toString(node);\n  }\n};\n\n/**\n * Lookup JavaScript user-defined or built-in function.\n *\n * @param {String} name\n * @return {Function}\n * @api private\n */\n\nEvaluator.prototype.lookupFunction = function (name) {\n  var fn = this.functions[name] || bifs[name];\n  if (fn) return new nodes.Function(name, fn);\n};\n\n/**\n * Check if the given `node` is an ident, and if it is defined.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.isDefined = function (node) {\n  if ('ident' == node.nodeName) {\n    return nodes.Boolean(this.lookup(node.name));\n  } else {\n    throw new Error('invalid \"is defined\" check on non-variable ' + node);\n  }\n};\n\n/**\n * Return `Expression` based on the given `prop`,\n * replacing cyclic calls to the given function `name`\n * with \"__CALL__\".\n *\n * @param {Property} prop\n * @param {String} name\n * @return {Expression}\n * @api private\n */\n\nEvaluator.prototype.propertyExpression = function (prop, name) {\n  var expr = new nodes.Expression(),\n    val = prop.expr.clone();\n\n  // name\n  expr.push(new nodes.String(prop.name));\n\n  // replace cyclic call with __CALL__\n  function replace(node) {\n    if ('call' == node.nodeName && name == node.name) {\n      return new nodes.Literal('__CALL__');\n    }\n    if (node.nodes) node.nodes = node.nodes.map(replace);\n    return node;\n  }\n  replace(val);\n  expr.push(val);\n  return expr;\n};\n\n/**\n * Cast `expr` to the trailing ident.\n *\n * @param {Expression} expr\n * @return {Unit}\n * @api private\n */\n\nEvaluator.prototype.cast = function (expr) {\n  return new nodes.Unit(expr.first.val, expr.nodes[1].name);\n};\n\n/**\n * Check if `expr` is castable.\n *\n * @param {Expression} expr\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.castable = function (expr) {\n  return 2 == expr.nodes.length && 'unit' == expr.first.nodeName && ~units.indexOf(expr.nodes[1].name);\n};\n\n/**\n * Warn with the given `msg`.\n *\n * @param {String} msg\n * @api private\n */\n\nEvaluator.prototype.warn = function (msg) {\n  if (!this.warnings) return;\n  console.warn(\"\\x1B[33mWarning:\\x1B[0m \" + msg);\n};\n\n/**\n * Return the current `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentBlock', function () {\n  return this.stack.currentFrame.block;\n});\n\n/**\n * Return an array of vendor names.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('vendors', function () {\n  return this.lookup('vendors').nodes.map(function (node) {\n    return node.string;\n  });\n});\n\n/**\n * Return the property name without vendor prefix.\n *\n * @param {String} prop\n * @return {String}\n * @api public\n */\n\nEvaluator.prototype.unvendorize = function (prop) {\n  for (var i = 0, len = this.vendors.length; i < len; i++) {\n    if ('official' != this.vendors[i]) {\n      var vendor = '-' + this.vendors[i] + '-';\n      if (~prop.indexOf(vendor)) return prop.replace(vendor, '');\n    }\n  }\n  return prop;\n};\n\n/**\n * Return the current frame `Scope`.\n *\n * @return {Scope}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentScope', function () {\n  return this.stack.currentFrame.scope;\n});\n\n/**\n * Return the current `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentFrame', function () {\n  return this.stack.currentFrame;\n});","map":{"version":3,"names":["Visitor","require","units","nodes","Stack","Frame","utils","bifs","dirname","colors","debug","fs","importFile","node","file","literal","importStack","Parser","stat","once","requireHistory","null","includeCSS","indexOf","Error","str","readFileSync","trim","path","statSync","mtime","paths","push","options","_imports","clone","filename","Literal","replace","lineno","column","resolveURL","block","Block","parser","merge","root","parse","err","line","lexer","warn","input","currentBlock","parent","scope","ret","visit","pop","nocheck","Evaluator","module","exports","call","functions","stack","imports","globals","prefix","url","name","global","warnings","calling","return","prototype","__proto__","stylusStack","toString","setup","populateGlobalScope","forEach","expr","Expression","String","Import","concat","Object","keys","color","rgba","RGBA","Ident","add","Function","limit","val","nodeName","evaluate","visitGroup","group","map","selector","interpolate","visitReturn","visitMedia","media","visitQueryList","queries","query","length","lookup","type","first","string","visitQuery","predicate","visitFeature","visitObject","obj","key","vals","visitMember","left","right","set","get","visitKeyframes","keyframes","fabricated","vendors","visitFunction","fn","local","currentFrame","user","bif","visitEach","each","unwrap","len","currentScope","self","body","visitBody","prop","i","Unit","mixin","visitCall","ignoreColors","lookupFunction","unvendorize","args","literalCall","RangeError","invokeBuiltin","invokeFunction","visitIdent","ident","property","lookupProperty","isNull","mixinNode","visitBinOp","binop","op","isDefined","operate","false","true","visitUnaryOp","unary","assertType","toBoolean","negate","visitTernary","ternary","ok","cond","isTrue","trueExpr","falseExpr","visitExpression","castable","cast","visitArguments","visitProperty","_prop","Arguments","fromExpression","Call","visitRoot","constructor","index","visitBlock","visitAtblock","atblock","visitAtrule","atrule","visitSupports","condition","visitIf","hasMedia","isFalse","elses","postfix","visitExtend","extend","closestGroup","selectors","extends","optional","visitImport","imported","found","test","find","lookupIndex","content","mixinBlock","propertyExpression","params","rest","preserve","isList","arg","isEmpty","invoke","raw","reduce","param","shift","coerce","apply","eval","head","slice","tail","_mixin","items","dest","parentNode","mixinObject","object","toBlock","top","other","__defineGetter__","isSelector","prefixed","_selector","segments","join","Boolean","msg","console","vendor"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/visitor/evaluator.js"],"sourcesContent":["\n/*!\n * Stylus - Evaluator\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Visitor = require('./')\n  , units = require('../units')\n  , nodes = require('../nodes')\n  , Stack = require('../stack')\n  , Frame = require('../stack/frame')\n  , utils = require('../utils')\n  , bifs = require('../functions')\n  , dirname = require('path').dirname\n  , colors = require('../colors')\n  , debug = require('debug')('stylus:evaluator')\n  , fs = require('fs');\n\n/**\n * Import `file` and return Block node.\n *\n * @api private\n */\nfunction importFile(node, file, literal) {\n  var importStack = this.importStack\n    , Parser = require('../parser')\n    , stat;\n\n  // Handling the `require`\n  if (node.once) {\n    if (this.requireHistory[file]) return nodes.null;\n    this.requireHistory[file] = true;\n\n    if (literal && !this.includeCSS) {\n      return node;\n    }\n  }\n\n  // Avoid overflows from importing the same file over again\n  if (~importStack.indexOf(file))\n    throw new Error('import loop has been found');\n\n  var str = fs.readFileSync(file, 'utf8');\n\n  // shortcut for empty files\n  if (!str.trim()) return nodes.null;\n\n  // Expose imports\n  node.path = file;\n  node.dirname = dirname(file);\n  // Store the modified time\n  stat = fs.statSync(file);\n  node.mtime = stat.mtime;\n  this.paths.push(node.dirname);\n\n  if (this.options._imports) this.options._imports.push(node.clone());\n\n  // Parse the file\n  importStack.push(file);\n  nodes.filename = file;\n\n  if (literal) {\n    literal = new nodes.Literal(str.replace(/\\r\\n?/g, '\\n'));\n    literal.lineno = literal.column = 1;\n    if (!this.resolveURL) return literal;\n  }\n\n  // parse\n  var block = new nodes.Block\n    , parser = new Parser(str, utils.merge({ root: block }, this.options));\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    var line = parser.lexer.lineno\n      , column = parser.lexer.column;\n\n    if (literal && this.includeCSS && this.resolveURL) {\n      this.warn('ParseError: ' + file + ':' + line + ':' + column + '. This file included as-is');\n      return literal;\n    } else {\n      err.filename = file;\n      err.lineno = line;\n      err.column = column;\n      err.input = str;\n      throw err;\n    }\n  }\n\n  // Evaluate imported \"root\"\n  block = block.clone(this.currentBlock);\n  block.parent = this.currentBlock;\n  block.scope = false;\n  var ret = this.visit(block);\n  importStack.pop();\n  if (!this.resolveURL || this.resolveURL.nocheck) this.paths.pop();\n\n  return ret;\n}\n\n/**\n * Initialize a new `Evaluator` with the given `root` Node\n * and the following `options`.\n *\n * Options:\n *\n *   - `compress`  Compress the css output, defaults to false\n *   - `warn`  Warn the user of duplicate function definitions etc\n *\n * @param {Node} root\n * @api private\n */\n\nvar Evaluator = module.exports = function Evaluator(root, options) {\n  options = options || {};\n  Visitor.call(this, root);\n  var functions = this.functions = options.functions || {};\n  this.stack = new Stack;\n  this.imports = options.imports || [];\n  this.globals = options.globals || {};\n  this.paths = options.paths || [];\n  this.prefix = options.prefix || '';\n  this.filename = options.filename;\n  this.includeCSS = options['include css'];\n  this.resolveURL = functions.url\n    && 'resolver' == functions.url.name\n    && functions.url.options;\n  this.paths.push(dirname(options.filename || '.'));\n  this.stack.push(this.global = new Frame(root));\n  this.warnings = options.warn;\n  this.options = options;\n  this.calling = []; // TODO: remove, use stack\n  this.importStack = [];\n  this.requireHistory = {};\n  this.return = 0;\n};\n\n/**\n * Inherit from `Visitor.prototype`.\n */\n\nEvaluator.prototype.__proto__ = Visitor.prototype;\n\n/**\n * Proxy visit to expose node line numbers.\n *\n * @param {Node} node\n * @return {Node}\n * @api private\n */\n\nvar visit = Visitor.prototype.visit;\nEvaluator.prototype.visit = function(node){\n  try {\n    return visit.call(this, node);\n  } catch (err) {\n    if (err.filename) throw err;\n    err.lineno = node.lineno;\n    err.column = node.column;\n    err.filename = node.filename;\n    err.stylusStack = this.stack.toString();\n    try {\n      err.input = fs.readFileSync(err.filename, 'utf8');\n    } catch (err) {\n      // ignore\n    }\n    throw err;\n  }\n};\n\n/**\n * Perform evaluation setup:\n *\n *   - populate global scope\n *   - iterate imports\n *\n * @api private\n */\n\nEvaluator.prototype.setup = function(){\n  var root = this.root;\n  var imports = [];\n\n  this.populateGlobalScope();\n  this.imports.forEach(function(file){\n    var expr = new nodes.Expression;\n    expr.push(new nodes.String(file));\n    imports.push(new nodes.Import(expr));\n  }, this);\n\n  root.nodes = imports.concat(root.nodes);\n};\n\n/**\n * Populate the global scope with:\n *\n *   - css colors\n *   - user-defined globals\n *\n * @api private\n */\n\nEvaluator.prototype.populateGlobalScope = function(){\n  var scope = this.global.scope;\n\n  // colors\n  Object.keys(colors).forEach(function(name){\n    var color = colors[name]\n      , rgba = new nodes.RGBA(color[0], color[1], color[2], color[3])\n      , node = new nodes.Ident(name, rgba);\n    rgba.name = name;\n    scope.add(node);\n  });\n\n  // expose url function\n  scope.add(new nodes.Ident(\n    'embedurl',\n    new nodes.Function('embedurl', require('../functions/url')({\n      limit: false\n    }))\n  ));\n\n  // user-defined globals\n  var globals = this.globals;\n  Object.keys(globals).forEach(function(name){\n    var val = globals[name];\n    if (!val.nodeName) val = new nodes.Literal(val);\n    scope.add(new nodes.Ident(name, val));\n  });\n};\n\n/**\n * Evaluate the tree.\n *\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.evaluate = function(){\n  debug('eval %s', this.filename);\n  this.setup();\n  return this.visit(this.root);\n};\n\n/**\n * Visit Group.\n */\n\nEvaluator.prototype.visitGroup = function(group){\n  group.nodes = group.nodes.map(function(selector){\n    selector.val = this.interpolate(selector);\n    debug('ruleset %s', selector.val);\n    return selector;\n  }, this);\n\n  group.block = this.visit(group.block);\n  return group;\n};\n\n/**\n * Visit Return.\n */\n\nEvaluator.prototype.visitReturn = function(ret){\n  ret.expr = this.visit(ret.expr);\n  throw ret;\n};\n\n/**\n * Visit Media.\n */\n\nEvaluator.prototype.visitMedia = function(media){\n  media.block = this.visit(media.block);\n  media.val = this.visit(media.val);\n  return media;\n};\n\n/**\n * Visit QueryList.\n */\n\nEvaluator.prototype.visitQueryList = function(queries){\n  var val, query;\n  queries.nodes.forEach(this.visit, this);\n\n  if (1 == queries.nodes.length) {\n    query = queries.nodes[0];\n    if (val = this.lookup(query.type)) {\n      val = val.first.string;\n      if (!val) return queries;\n      var Parser = require('../parser')\n        , parser = new Parser(val, this.options);\n      queries = this.visit(parser.queries());\n    }\n  }\n  return queries;\n};\n\n/**\n * Visit Query.\n */\n\nEvaluator.prototype.visitQuery = function(node){\n  node.predicate = this.visit(node.predicate);\n  node.type = this.visit(node.type);\n  node.nodes.forEach(this.visit, this);\n  return node;\n};\n\n/**\n * Visit Feature.\n */\n\nEvaluator.prototype.visitFeature = function(node){\n  node.name = this.interpolate(node);\n  if (node.expr) {\n    this.return++;\n    node.expr = this.visit(node.expr);\n    this.return--;\n  }\n  return node;\n};\n\n/**\n * Visit Object.\n */\n\nEvaluator.prototype.visitObject = function(obj){\n  for (var key in obj.vals) {\n    obj.vals[key] = this.visit(obj.vals[key]);\n  }\n  return obj;\n};\n\n/**\n * Visit Member.\n */\n\nEvaluator.prototype.visitMember = function(node){\n  var left = node.left\n    , right = node.right\n    , obj = this.visit(left).first;\n\n  if ('object' != obj.nodeName) {\n    throw new Error(left.toString() + ' has no property .' + right);\n  }\n  if (node.val) {\n    this.return++;\n    obj.set(right.name, this.visit(node.val));\n    this.return--;\n  }\n  return obj.get(right.name);\n};\n\n/**\n * Visit Keyframes.\n */\n\nEvaluator.prototype.visitKeyframes = function(keyframes){\n  var val;\n  if (keyframes.fabricated) return keyframes;\n  keyframes.val = this.interpolate(keyframes).trim();\n  if (val = this.lookup(keyframes.val)) {\n    keyframes.val = val.first.string || val.first.name;\n  }\n  keyframes.block = this.visit(keyframes.block);\n\n  if ('official' != keyframes.prefix) return keyframes;\n\n  this.vendors.forEach(function(prefix){\n    // IE never had prefixes for keyframes\n    if ('ms' == prefix) return;\n    var node = keyframes.clone();\n    node.val = keyframes.val;\n    node.prefix = prefix;\n    node.block = keyframes.block;\n    node.fabricated = true;\n    this.currentBlock.push(node);\n  }, this);\n\n  return nodes.null;\n};\n\n/**\n * Visit Function.\n */\n\nEvaluator.prototype.visitFunction = function(fn){\n  // check local\n  var local = this.stack.currentFrame.scope.lookup(fn.name);\n  if (local) this.warn('local ' + local.nodeName + ' \"' + fn.name + '\" previously defined in this scope');\n\n  // user-defined\n  var user = this.functions[fn.name];\n  if (user) this.warn('user-defined function \"' + fn.name + '\" is already defined');\n\n  // BIF\n  var bif = bifs[fn.name];\n  if (bif) this.warn('built-in function \"' + fn.name + '\" is already defined');\n\n  return fn;\n};\n\n/**\n * Visit Each.\n */\n\nEvaluator.prototype.visitEach = function(each){\n  this.return++;\n  var expr = utils.unwrap(this.visit(each.expr))\n    , len = expr.nodes.length\n    , val = new nodes.Ident(each.val)\n    , key = new nodes.Ident(each.key || '__index__')\n    , scope = this.currentScope\n    , block = this.currentBlock\n    , vals = []\n    , self = this\n    , body\n    , obj;\n  this.return--;\n\n  each.block.scope = false;\n\n  function visitBody(key, val) {\n    scope.add(val);\n    scope.add(key);\n    body = self.visit(each.block.clone());\n    vals = vals.concat(body.nodes);\n  }\n\n  // for prop in obj\n  if (1 == len && 'object' == expr.nodes[0].nodeName) {\n    obj = expr.nodes[0];\n    for (var prop in obj.vals) {\n      val.val = new nodes.String(prop);\n      key.val = obj.get(prop);\n      visitBody(key, val);\n    }\n  } else {\n    for (var i = 0; i < len; ++i) {\n      val.val = expr.nodes[i];\n      key.val = new nodes.Unit(i);\n      visitBody(key, val);\n    }\n  }\n\n  this.mixin(vals, block);\n  return vals[vals.length - 1] || nodes.null;\n};\n\n/**\n * Visit Call.\n */\n\nEvaluator.prototype.visitCall = function(call){\n  debug('call %s', call);\n  var fn = this.lookup(call.name)\n    , literal\n    , ret;\n\n  // url()\n  this.ignoreColors = 'url' == call.name;\n\n  // Variable function\n  if (fn && 'expression' == fn.nodeName) {\n    fn = fn.nodes[0];\n  }\n\n  // Not a function? try user-defined or built-ins\n  if (fn && 'function' != fn.nodeName) {\n    fn = this.lookupFunction(call.name);\n  }\n\n  // Undefined function? render literal CSS\n  if (!fn || fn.nodeName != 'function') {\n    debug('%s is undefined', call);\n    // Special case for `calc`\n    if ('calc' == this.unvendorize(call.name)) {\n      literal = call.args.nodes && call.args.nodes[0];\n      if (literal) ret = new nodes.Literal(call.name + literal);\n    } else {\n      ret = this.literalCall(call);\n    }\n    this.ignoreColors = false;\n    return ret;\n  }\n\n  this.calling.push(call.name);\n\n  // Massive stack\n  if (this.calling.length > 200) {\n    throw new RangeError('Maximum stylus call stack size exceeded');\n  }\n\n  // First node in expression\n  if ('expression' == fn.nodeName) fn = fn.first;\n\n  // Evaluate arguments\n  this.return++;\n  var args = this.visit(call.args);\n\n  for (var key in args.map) {\n    args.map[key] = this.visit(args.map[key].clone());\n  }\n  this.return--;\n\n  // Built-in\n  if (fn.fn) {\n    debug('%s is built-in', call);\n    ret = this.invokeBuiltin(fn.fn, args);\n  // User-defined\n  } else if ('function' == fn.nodeName) {\n    debug('%s is user-defined', call);\n    // Evaluate mixin block\n    if (call.block) call.block = this.visit(call.block);\n    ret = this.invokeFunction(fn, args, call.block);\n  }\n\n  this.calling.pop();\n  this.ignoreColors = false;\n  return ret;\n};\n\n/**\n * Visit Ident.\n */\n\nEvaluator.prototype.visitIdent = function(ident){\n  var prop;\n  // Property lookup\n  if (ident.property) {\n    if (prop = this.lookupProperty(ident.name)) {\n      return this.visit(prop.expr.clone());\n    }\n    return nodes.null;\n  // Lookup\n  } else if (ident.val.isNull) {\n    var val = this.lookup(ident.name);\n    // Object or Block mixin\n    if (val && ident.mixin) this.mixinNode(val);\n    return val ? this.visit(val) : ident;\n  // Assign\n  } else {\n    this.return++;\n    ident.val = this.visit(ident.val);\n    this.return--;\n    this.currentScope.add(ident);\n    return ident.val;\n  }\n};\n\n/**\n * Visit BinOp.\n */\n\nEvaluator.prototype.visitBinOp = function(binop){\n  // Special-case \"is defined\" pseudo binop\n  if ('is defined' == binop.op) return this.isDefined(binop.left);\n\n  this.return++;\n  // Visit operands\n  var op = binop.op\n    , left = this.visit(binop.left)\n    , right = ('||' == op || '&&' == op)\n      ? binop.right : this.visit(binop.right);\n\n  // HACK: ternary\n  var val = binop.val\n    ? this.visit(binop.val)\n    : null;\n  this.return--;\n\n  // Operate\n  try {\n    return this.visit(left.operate(op, right, val));\n  } catch (err) {\n    // disregard coercion issues in equality\n    // checks, and simply return false\n    if ('CoercionError' == err.name) {\n      switch (op) {\n        case '==':\n          return nodes.false;\n        case '!=':\n          return nodes.true;\n      }\n    }\n    throw err;\n  }\n};\n\n/**\n * Visit UnaryOp.\n */\n\nEvaluator.prototype.visitUnaryOp = function(unary){\n  var op = unary.op\n    , node = this.visit(unary.expr);\n\n  if ('!' != op) {\n    node = node.first.clone();\n    utils.assertType(node, 'unit');\n  }\n\n  switch (op) {\n    case '-':\n      node.val = -node.val;\n      break;\n    case '+':\n      node.val = +node.val;\n      break;\n    case '~':\n      node.val = ~node.val;\n      break;\n    case '!':\n      return node.toBoolean().negate();\n  }\n\n  return node;\n};\n\n/**\n * Visit TernaryOp.\n */\n\nEvaluator.prototype.visitTernary = function(ternary){\n  var ok = this.visit(ternary.cond).toBoolean();\n  return ok.isTrue\n    ? this.visit(ternary.trueExpr)\n    : this.visit(ternary.falseExpr);\n};\n\n/**\n * Visit Expression.\n */\n\nEvaluator.prototype.visitExpression = function(expr){\n  for (var i = 0, len = expr.nodes.length; i < len; ++i) {\n    expr.nodes[i] = this.visit(expr.nodes[i]);\n  }\n\n  // support (n * 5)px etc\n  if (this.castable(expr)) expr = this.cast(expr);\n\n  return expr;\n};\n\n/**\n * Visit Arguments.\n */\n\nEvaluator.prototype.visitArguments = Evaluator.prototype.visitExpression;\n\n/**\n * Visit Property.\n */\n\nEvaluator.prototype.visitProperty = function(prop){\n  var name = this.interpolate(prop)\n    , fn = this.lookup(name)\n    , call = fn && 'function' == fn.first.nodeName\n    , literal = ~this.calling.indexOf(name)\n    , _prop = this.property;\n\n  // Function of the same name\n  if (call && !literal && !prop.literal) {\n    var args = nodes.Arguments.fromExpression(utils.unwrap(prop.expr.clone()));\n    prop.name = name;\n    this.property = prop;\n    this.return++;\n    this.property.expr = this.visit(prop.expr);\n    this.return--;\n    var ret = this.visit(new nodes.Call(name, args));\n    this.property = _prop;\n    return ret;\n  // Regular property\n  } else {\n    this.return++;\n    prop.name = name;\n    prop.literal = true;\n    this.property = prop;\n    prop.expr = this.visit(prop.expr);\n    this.property = _prop;\n    this.return--;\n    return prop;\n  }\n};\n\n/**\n * Visit Root.\n */\n\nEvaluator.prototype.visitRoot = function(block){\n  // normalize cached imports\n  if (block != this.root) {\n    block.constructor = nodes.Block;\n    return this.visit(block);\n  }\n\n  for (var i = 0; i < block.nodes.length; ++i) {\n    block.index = i;\n    block.nodes[i] = this.visit(block.nodes[i]);\n  }\n  return block;\n};\n\n/**\n * Visit Block.\n */\n\nEvaluator.prototype.visitBlock = function(block){\n  this.stack.push(new Frame(block));\n  for (block.index = 0; block.index < block.nodes.length; ++block.index) {\n    try {\n      block.nodes[block.index] = this.visit(block.nodes[block.index]);\n    } catch (err) {\n      if ('return' == err.nodeName) {\n        if (this.return) {\n          this.stack.pop();\n          throw err;\n        } else {\n          block.nodes[block.index] = err;\n          break;\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n  this.stack.pop();\n  return block;\n};\n\n/**\n * Visit Atblock.\n */\n\nEvaluator.prototype.visitAtblock = function(atblock){\n  atblock.block = this.visit(atblock.block);\n  return atblock;\n};\n\n/**\n * Visit Atrule.\n */\n\nEvaluator.prototype.visitAtrule = function(atrule){\n  atrule.val = this.interpolate(atrule);\n  if (atrule.block) atrule.block = this.visit(atrule.block);\n  return atrule;\n};\n\n/**\n * Visit Supports.\n */\n\nEvaluator.prototype.visitSupports = function(node){\n  var condition = node.condition\n    , val;\n\n  this.return++;\n  node.condition = this.visit(condition);\n  this.return--;\n\n  val = condition.first;\n  if (1 == condition.nodes.length\n    && 'string' == val.nodeName) {\n    node.condition = val.string;\n  }\n  node.block = this.visit(node.block);\n  return node;\n};\n\n/**\n * Visit If.\n */\n\nEvaluator.prototype.visitIf = function(node){\n  var ret\n    , block = this.currentBlock\n    , negate = node.negate;\n\n  this.return++;\n  var ok = this.visit(node.cond).first.toBoolean();\n  this.return--;\n\n  node.block.scope = node.block.hasMedia;\n\n  // Evaluate body\n  if (negate) {\n    // unless\n    if (ok.isFalse) {\n      ret = this.visit(node.block);\n    }\n  } else {\n    // if\n    if (ok.isTrue) {\n      ret = this.visit(node.block);\n    // else\n    } else if (node.elses.length) {\n      var elses = node.elses\n        , len = elses.length\n        , cond;\n      for (var i = 0; i < len; ++i) {\n        // else if\n        if (elses[i].cond) {\n          elses[i].block.scope = elses[i].block.hasMedia;\n          this.return++;\n          cond = this.visit(elses[i].cond).first.toBoolean();\n          this.return--;\n          if (cond.isTrue) {\n            ret = this.visit(elses[i].block);\n            break;\n          }\n        // else\n        } else {\n          elses[i].scope = elses[i].hasMedia;\n          ret = this.visit(elses[i]);\n        }\n      }\n    }\n  }\n\n  // mixin conditional statements within\n  // a selector group or at-rule\n  if (ret && !node.postfix && block.node\n    && ~['group'\n       , 'atrule'\n       , 'media'\n       , 'supports'\n       , 'keyframes'].indexOf(block.node.nodeName)) {\n    this.mixin(ret.nodes, block);\n    return nodes.null;\n  }\n\n  return ret || nodes.null;\n};\n\n/**\n * Visit Extend.\n */\n\nEvaluator.prototype.visitExtend = function(extend){\n  var block = this.currentBlock;\n  if ('group' != block.node.nodeName) block = this.closestGroup;\n  extend.selectors.forEach(function(selector){\n    block.node.extends.push({\n      // Cloning the selector for when we are in a loop and don't want it to affect\n      // the selector nodes and cause the values to be different to expected\n      selector: this.interpolate(selector.clone()).trim(),\n      optional: selector.optional,\n      lineno: selector.lineno,\n      column: selector.column\n    });\n  }, this);\n  return nodes.null;\n};\n\n/**\n * Visit Import.\n */\n\nEvaluator.prototype.visitImport = function(imported){\n  this.return++;\n\n  var path = this.visit(imported.path).first\n    , nodeName = imported.once ? 'require' : 'import'\n    , found\n    , literal;\n\n  this.return--;\n  debug('import %s', path);\n\n  // url() passed\n  if ('url' == path.name) {\n    if (imported.once) throw new Error('You cannot @require a url');\n\n    return imported;\n  }\n\n  // Ensure string\n  if (!path.string) throw new Error('@' + nodeName + ' string expected');\n\n  var name = path = path.string;\n\n  // Absolute URL or hash\n  if (/(?:url\\s*\\(\\s*)?['\"]?(?:#|(?:https?:)?\\/\\/)/i.test(path)) {\n    if (imported.once) throw new Error('You cannot @require a url');\n    return imported;\n  }\n\n  // Literal\n  if (/\\.css(?:\"|$)/.test(path)) {\n    literal = true;\n    if (!imported.once && !this.includeCSS) {\n      return imported;\n    }\n  }\n\n  // support optional .styl\n  if (!literal && !/\\.styl$/i.test(path)) path += '.styl';\n\n  // Lookup\n  found = utils.find(path, this.paths, this.filename);\n  if (!found) {\n    found = utils.lookupIndex(name, this.paths, this.filename);\n  }\n\n  // Throw if import failed\n  if (!found) throw new Error('failed to locate @' + nodeName + ' file ' + path);\n  \n  var block = new nodes.Block;\n\n  for (var i = 0, len = found.length; i < len; ++i) {\n    block.push(importFile.call(this, imported, found[i], literal));\n  }\n\n  return block;\n};\n\n/**\n * Invoke `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeFunction = function(fn, args, content){\n  var block = new nodes.Block(fn.block.parent);\n\n  // Clone the function body\n  // to prevent mutation of subsequent calls\n  var body = fn.block.clone(block);\n\n  // mixin block\n  var mixinBlock = this.stack.currentFrame.block;\n\n  // new block scope\n  this.stack.push(new Frame(block));\n  var scope = this.currentScope;\n\n  // normalize arguments\n  if ('arguments' != args.nodeName) {\n    var expr = new nodes.Expression;\n    expr.push(args);\n    args = nodes.Arguments.fromExpression(expr);\n  }\n\n  // arguments local\n  scope.add(new nodes.Ident('arguments', args));\n\n  // mixin scope introspection\n  scope.add(new nodes.Ident('mixin', this.return\n    ? nodes.false\n    : new nodes.String(mixinBlock.nodeName)));\n\n  // current property\n  if (this.property) {\n    var prop = this.propertyExpression(this.property, fn.name);\n    scope.add(new nodes.Ident('current-property', prop));\n  } else {\n    scope.add(new nodes.Ident('current-property', nodes.null));\n  }\n\n  // current call stack\n  var expr = new nodes.Expression;\n  for (var i = this.calling.length - 1; i-- ; ) {\n    expr.push(new nodes.Literal(this.calling[i]));\n  };\n  scope.add(new nodes.Ident('called-from', expr));\n\n  // inject arguments as locals\n  var i = 0\n    , len = args.nodes.length;\n  fn.params.nodes.forEach(function(node){\n    // rest param support\n    if (node.rest) {\n      node.val = new nodes.Expression;\n      for (; i < len; ++i) node.val.push(args.nodes[i]);\n      node.val.preserve = true;\n      node.val.isList = args.isList;\n    // argument default support\n    } else {\n      var arg = args.map[node.name] || args.nodes[i++];\n      node = node.clone();\n      if (arg) {\n        arg.isEmpty ? args.nodes[i - 1] = this.visit(node) : node.val = arg;\n      } else {\n        args.push(node.val);\n      }\n\n      // required argument not satisfied\n      if (node.val.isNull) {\n        throw new Error('argument \"' + node + '\" required for ' + fn);\n      }\n    }\n\n    scope.add(node);\n  }, this);\n\n  // mixin block\n  if (content) scope.add(new nodes.Ident('block', content, true));\n\n  // invoke\n  return this.invoke(body, true, fn.filename);\n};\n\n/**\n * Invoke built-in `fn` with `args`.\n *\n * @param {Function} fn\n * @param {Array} args\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invokeBuiltin = function(fn, args){\n  // Map arguments to first node\n  // providing a nicer js api for\n  // BIFs. Functions may specify that\n  // they wish to accept full expressions\n  // via .raw\n  if (fn.raw) {\n    args = args.nodes;\n  } else {\n    if (!fn.params) {\n      fn.params = utils.params(fn);\n    }\n    args = fn.params.reduce(function(ret, param){\n      var arg = args.map[param] || args.nodes.shift()\n      if (arg) {\n        arg = utils.unwrap(arg);\n        var len = arg.nodes.length;\n        if (len > 1) {\n          for (var i = 0; i < len; ++i) {\n            ret.push(utils.unwrap(arg.nodes[i].first));\n          }\n        } else {\n          ret.push(arg.first);\n        }\n      }\n      return ret;\n    }, []);\n  }\n\n  // Invoke the BIF\n  var body = utils.coerce(fn.apply(this, args));\n\n  // Always wrapping allows js functions\n  // to return several values with a single\n  // Expression node\n  var expr = new nodes.Expression;\n  expr.push(body);\n  body = expr;\n\n  // Invoke\n  return this.invoke(body);\n};\n\n/**\n * Invoke the given function `body`.\n *\n * @param {Block} body\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.invoke = function(body, stack, filename){\n  var self = this\n    , ret;\n\n  if (filename) this.paths.push(dirname(filename));\n\n  // Return\n  if (this.return) {\n    ret = this.eval(body.nodes);\n    if (stack) this.stack.pop();\n  // Mixin\n  } else {\n    body = this.visit(body);\n    if (stack) this.stack.pop();\n    this.mixin(body.nodes, this.currentBlock);\n    ret = nodes.null;\n  }\n\n  if (filename) this.paths.pop();\n\n  return ret;\n};\n\n/**\n * Mixin the given `nodes` to the given `block`.\n *\n * @param {Array} nodes\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype.mixin = function(nodes, block){\n  if (!nodes.length) return;\n  var len = block.nodes.length\n    , head = block.nodes.slice(0, block.index)\n    , tail = block.nodes.slice(block.index + 1, len);\n  this._mixin(nodes, head, block);\n  block.index = 0;\n  block.nodes = head.concat(tail);\n};\n\n/**\n * Mixin the given `items` to the `dest` array.\n *\n * @param {Array} items\n * @param {Array} dest\n * @param {Block} block\n * @api private\n */\n\nEvaluator.prototype._mixin = function(items, dest, block){\n  var node\n    , len = items.length;\n  for (var i = 0; i < len; ++i) {\n    switch ((node = items[i]).nodeName) {\n      case 'return':\n        return;\n      case 'block':\n        this._mixin(node.nodes, dest, block);\n        break;\n      case 'media':\n        // fix link to the parent block\n        var parentNode = node.block.parent.node;\n        if (parentNode && 'call' != parentNode.nodeName) {\n          node.block.parent = block;\n        }\n      case 'property':\n        var val = node.expr;\n        // prevent `block` mixin recursion\n        if (node.literal && 'block' == val.first.name) {\n          val = utils.unwrap(val);\n          val.nodes[0] = new nodes.Literal('block');\n        }\n      default:\n        dest.push(node);\n    }\n  }\n};\n\n/**\n * Mixin the given `node` to the current block.\n *\n * @param {Node} node\n * @api private\n */\n\nEvaluator.prototype.mixinNode = function(node){\n  node = this.visit(node.first);\n  switch (node.nodeName) {\n    case 'object':\n      this.mixinObject(node);\n      return nodes.null;\n    case 'block':\n    case 'atblock':\n      this.mixin(node.nodes, this.currentBlock);\n      return nodes.null;\n  }\n};\n\n/**\n * Mixin the given `object` to the current block.\n *\n * @param {Object} object\n * @api private\n */\n\nEvaluator.prototype.mixinObject = function(object){\n  var Parser = require('../parser')\n    , root = this.root\n    , str = '$block ' + object.toBlock()\n    , parser = new Parser(str, utils.merge({ root: block }, this.options))\n    , block;\n\n  try {\n    block = parser.parse();\n  } catch (err) {\n    err.filename = this.filename;\n    err.lineno = parser.lexer.lineno;\n    err.column = parser.lexer.column;\n    err.input = str;\n    throw err;\n  }\n\n  block.parent = root;\n  block.scope = false;\n  var ret = this.visit(block)\n    , vals = ret.first.nodes;\n  for (var i = 0, len = vals.length; i < len; ++i) {\n    if (vals[i].block) {\n      this.mixin(vals[i].block.nodes, this.currentBlock);\n      break;\n    }\n  }\n};\n\n/**\n * Evaluate the given `vals`.\n *\n * @param {Array} vals\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.eval = function(vals){\n  if (!vals) return nodes.null;\n  var len = vals.length\n    , node = nodes.null;\n\n  try {\n    for (var i = 0; i < len; ++i) {\n      node = vals[i];\n      switch (node.nodeName) {\n        case 'if':\n          if ('block' != node.block.nodeName) {\n            node = this.visit(node);\n            break;\n          }\n        case 'each':\n        case 'block':\n          node = this.visit(node);\n          if (node.nodes) node = this.eval(node.nodes);\n          break;\n        default:\n          node = this.visit(node);\n      }\n    }\n  } catch (err) {\n    if ('return' == err.nodeName) {\n      return err.expr;\n    } else {\n      throw err;\n    }\n  }\n\n  return node;\n};\n\n/**\n * Literal function `call`.\n *\n * @param {Call} call\n * @return {call}\n * @api private\n */\n\nEvaluator.prototype.literalCall = function(call){\n  call.args = this.visit(call.args);\n  return call;\n};\n\n/**\n * Lookup property `name`.\n *\n * @param {String} name\n * @return {Property}\n * @api private\n */\n\nEvaluator.prototype.lookupProperty = function(name){\n  var i = this.stack.length\n    , index = this.currentBlock.index\n    , top = i\n    , nodes\n    , block\n    , len\n    , other;\n\n  while (i--) {\n    block = this.stack[i].block;\n    if (!block.node) continue;\n    switch (block.node.nodeName) {\n      case 'group':\n      case 'function':\n      case 'if':\n      case 'each':\n      case 'atrule':\n      case 'media':\n      case 'atblock':\n      case 'call':\n        nodes = block.nodes;\n        // scan siblings from the property index up\n        if (i + 1 == top) {\n          while (index--) {\n            // ignore current property\n            if (this.property == nodes[index]) continue;\n            other = this.interpolate(nodes[index]);\n            if (name == other) return nodes[index].clone();\n          }\n        // sequential lookup for non-siblings (for now)\n        } else {\n          len = nodes.length;\n          while (len--) {\n            if ('property' != nodes[len].nodeName\n              || this.property == nodes[len]) continue;\n            other = this.interpolate(nodes[len]);\n            if (name == other) return nodes[len].clone();\n          }\n        }\n        break;\n    }\n  }\n\n  return nodes.null;\n};\n\n/**\n * Return the closest mixin-able `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestBlock', function(){\n  var i = this.stack.length\n    , block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node) {\n      switch (block.node.nodeName) {\n        case 'group':\n        case 'keyframes':\n        case 'atrule':\n        case 'atblock':\n        case 'media':\n        case 'call':\n          return block;\n      }\n    }\n  }\n});\n\n/**\n * Return the closest group block.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('closestGroup', function(){\n  var i = this.stack.length\n    , block;\n  while (i--) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      return block;\n    }\n  }\n});\n\n/**\n * Return the current selectors stack.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('selectorStack', function(){\n  var block\n    , stack = [];\n  for (var i = 0, len = this.stack.length; i < len; ++i) {\n    block = this.stack[i].block;\n    if (block.node && 'group' == block.node.nodeName) {\n      block.node.nodes.forEach(function(selector) {\n        if (!selector.val) selector.val = this.interpolate(selector);\n      }, this);\n      stack.push(block.node.nodes);\n    }\n  }\n  return stack;\n});\n\n/**\n * Lookup `name`, with support for JavaScript\n * functions, and BIFs.\n *\n * @param {String} name\n * @return {Node}\n * @api private\n */\n\nEvaluator.prototype.lookup = function(name){\n  var val;\n  if (this.ignoreColors && name in colors) return;\n  if (val = this.stack.lookup(name)) {\n    return utils.unwrap(val);\n  } else {\n    return this.lookupFunction(name);\n  }\n};\n\n/**\n * Map segments in `node` returning a string.\n *\n * @param {Node} node\n * @return {String}\n * @api private\n */\n\nEvaluator.prototype.interpolate = function(node){\n  var self = this\n    , isSelector = ('selector' == node.nodeName);\n  function toString(node) {\n    switch (node.nodeName) {\n      case 'function':\n      case 'ident':\n        return node.name;\n      case 'literal':\n      case 'string':\n        if (self.prefix && !node.prefixed && !node.val.nodeName) {\n          node.val = node.val.replace(/\\.(?=[\\w-])|^\\.$/g, '.' + self.prefix);\n          node.prefixed = true;\n        }\n        return node.val;\n      case 'unit':\n        // Interpolation inside keyframes\n        return '%' == node.type ? node.val + '%' : node.val;\n      case 'member':\n        return toString(self.visit(node));\n      case 'expression':\n        // Prevent cyclic `selector()` calls.\n        if (self.calling && ~self.calling.indexOf('selector') && self._selector) return self._selector;\n        self.return++;\n        var ret = toString(self.visit(node).first);\n        self.return--;\n        if (isSelector) self._selector = ret;\n        return ret;\n    }\n  }\n\n  if (node.segments) {\n    return node.segments.map(toString).join('');\n  } else {\n    return toString(node);\n  }\n};\n\n/**\n * Lookup JavaScript user-defined or built-in function.\n *\n * @param {String} name\n * @return {Function}\n * @api private\n */\n\nEvaluator.prototype.lookupFunction = function(name){\n  var fn = this.functions[name] || bifs[name];\n  if (fn) return new nodes.Function(name, fn);\n};\n\n/**\n * Check if the given `node` is an ident, and if it is defined.\n *\n * @param {Node} node\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.isDefined = function(node){\n  if ('ident' == node.nodeName) {\n    return nodes.Boolean(this.lookup(node.name));\n  } else {\n    throw new Error('invalid \"is defined\" check on non-variable ' + node);\n  }\n};\n\n/**\n * Return `Expression` based on the given `prop`,\n * replacing cyclic calls to the given function `name`\n * with \"__CALL__\".\n *\n * @param {Property} prop\n * @param {String} name\n * @return {Expression}\n * @api private\n */\n\nEvaluator.prototype.propertyExpression = function(prop, name){\n  var expr = new nodes.Expression\n    , val = prop.expr.clone();\n\n  // name\n  expr.push(new nodes.String(prop.name));\n\n  // replace cyclic call with __CALL__\n  function replace(node) {\n    if ('call' == node.nodeName && name == node.name) {\n      return new nodes.Literal('__CALL__');\n    }\n\n    if (node.nodes) node.nodes = node.nodes.map(replace);\n    return node;\n  }\n\n  replace(val);\n  expr.push(val);\n  return expr;\n};\n\n/**\n * Cast `expr` to the trailing ident.\n *\n * @param {Expression} expr\n * @return {Unit}\n * @api private\n */\n\nEvaluator.prototype.cast = function(expr){\n  return new nodes.Unit(expr.first.val, expr.nodes[1].name);\n};\n\n/**\n * Check if `expr` is castable.\n *\n * @param {Expression} expr\n * @return {Boolean}\n * @api private\n */\n\nEvaluator.prototype.castable = function(expr){\n  return 2 == expr.nodes.length\n    && 'unit' == expr.first.nodeName\n    && ~units.indexOf(expr.nodes[1].name);\n};\n\n/**\n * Warn with the given `msg`.\n *\n * @param {String} msg\n * @api private\n */\n\nEvaluator.prototype.warn = function(msg){\n  if (!this.warnings) return;\n  console.warn('\\u001b[33mWarning:\\u001b[0m ' + msg);\n};\n\n/**\n * Return the current `Block`.\n *\n * @return {Block}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentBlock', function(){\n  return this.stack.currentFrame.block;\n});\n\n/**\n * Return an array of vendor names.\n *\n * @return {Array}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('vendors', function(){\n  return this.lookup('vendors').nodes.map(function(node){\n    return node.string;\n  });\n});\n\n/**\n * Return the property name without vendor prefix.\n *\n * @param {String} prop\n * @return {String}\n * @api public\n */\n\nEvaluator.prototype.unvendorize = function(prop){\n  for (var i = 0, len = this.vendors.length; i < len; i++) {\n    if ('official' != this.vendors[i]) {\n      var vendor = '-' + this.vendors[i] + '-';\n      if (~prop.indexOf(vendor)) return prop.replace(vendor, '');\n    }\n  }\n  return prop;\n};\n\n/**\n * Return the current frame `Scope`.\n *\n * @return {Scope}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentScope', function(){\n  return this.stack.currentFrame.scope;\n});\n\n/**\n * Return the current `Frame`.\n *\n * @return {Frame}\n * @api private\n */\n\nEvaluator.prototype.__defineGetter__('currentFrame', function(){\n  return this.stack.currentFrame;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}