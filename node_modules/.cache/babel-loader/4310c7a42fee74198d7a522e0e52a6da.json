{"ast":null,"code":"/*!\n * Stylus - plugin - url\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils'),\n  nodes = require('../nodes'),\n  Buffer = require('safer-buffer').Buffer,\n  fs = require('fs'),\n  path = require('path'),\n  sax = require('sax');\n\n/**\n * Initialize a new `Image` with the given `ctx` and `path.\n *\n * @param {Evaluator} ctx\n * @param {String} path\n * @api private\n */\n\nvar Image = module.exports = function Image(ctx, path) {\n  this.ctx = ctx;\n  this.path = utils.lookup(path, ctx.paths);\n  if (!this.path) throw new Error('failed to locate file ' + path);\n};\n\n/**\n * Open the image for reading.\n *\n * @api private\n */\n\nImage.prototype.open = function () {\n  this.fd = fs.openSync(this.path, 'r');\n  this.length = fs.fstatSync(this.fd).size;\n  this.extname = path.extname(this.path).slice(1);\n};\n\n/**\n * Close the file.\n *\n * @api private\n */\n\nImage.prototype.close = function () {\n  if (this.fd) fs.closeSync(this.fd);\n};\n\n/**\n * Return the type of image, supports:\n *\n *  - gif\n *  - png\n *  - jpeg\n *  - svg\n *\n * @return {String}\n * @api private\n */\n\nImage.prototype.type = function () {\n  var type,\n    buf = Buffer.alloc(4);\n  fs.readSync(this.fd, buf, 0, 4, 0);\n\n  // GIF\n  if (0x47 == buf[0] && 0x49 == buf[1] && 0x46 == buf[2]) type = 'gif';\n\n  // PNG\n  else if (0x50 == buf[1] && 0x4E == buf[2] && 0x47 == buf[3]) type = 'png';\n\n  // JPEG\n  else if (0xff == buf[0] && 0xd8 == buf[1]) type = 'jpeg';\n\n  // SVG\n  else if ('svg' == this.extname) type = this.extname;\n  return type;\n};\n\n/**\n * Return image dimensions `[width, height]`.\n *\n * @return {Array}\n * @api private\n */\n\nImage.prototype.size = function () {\n  var type = this.type(),\n    width,\n    height,\n    buf,\n    offset,\n    blockSize,\n    parser;\n  function uint16(b) {\n    return b[1] << 8 | b[0];\n  }\n  function uint32(b) {\n    return b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3];\n  }\n\n  // Determine dimensions\n  switch (type) {\n    case 'jpeg':\n      buf = Buffer.alloc(this.length);\n      fs.readSync(this.fd, buf, 0, this.length, 0);\n      offset = 4;\n      blockSize = buf[offset] << 8 | buf[offset + 1];\n      while (offset < this.length) {\n        offset += blockSize;\n        if (offset >= this.length || 0xff != buf[offset]) break;\n        // SOF0 or SOF2 (progressive)\n        if (0xc0 == buf[offset + 1] || 0xc2 == buf[offset + 1]) {\n          height = buf[offset + 5] << 8 | buf[offset + 6];\n          width = buf[offset + 7] << 8 | buf[offset + 8];\n        } else {\n          offset += 2;\n          blockSize = buf[offset] << 8 | buf[offset + 1];\n        }\n      }\n      break;\n    case 'png':\n      buf = Buffer.alloc(8);\n      // IHDR chunk width / height uint32_t big-endian\n      fs.readSync(this.fd, buf, 0, 8, 16);\n      width = uint32(buf);\n      height = uint32(buf.slice(4, 8));\n      break;\n    case 'gif':\n      buf = Buffer.alloc(4);\n      // width / height uint16_t little-endian\n      fs.readSync(this.fd, buf, 0, 4, 6);\n      width = uint16(buf);\n      height = uint16(buf.slice(2, 4));\n      break;\n    case 'svg':\n      offset = Math.min(this.length, 1024);\n      buf = Buffer.alloc(offset);\n      fs.readSync(this.fd, buf, 0, offset, 0);\n      buf = buf.toString('utf8');\n      parser = sax.parser(true);\n      parser.onopentag = function (node) {\n        if ('svg' == node.name && node.attributes.width && node.attributes.height) {\n          width = parseInt(node.attributes.width, 10);\n          height = parseInt(node.attributes.height, 10);\n        }\n      };\n      parser.write(buf).close();\n      break;\n  }\n  if ('number' != typeof width) throw new Error('failed to find width of \"' + this.path + '\"');\n  if ('number' != typeof height) throw new Error('failed to find height of \"' + this.path + '\"');\n  return [width, height];\n};","map":{"version":3,"names":["utils","require","nodes","Buffer","fs","path","sax","Image","module","exports","ctx","lookup","paths","Error","prototype","open","fd","openSync","length","fstatSync","size","extname","slice","close","closeSync","type","buf","alloc","readSync","width","height","offset","blockSize","parser","uint16","b","uint32","Math","min","toString","onopentag","node","name","attributes","parseInt","write"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/image.js"],"sourcesContent":["\n\n/*!\n * Stylus - plugin - url\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , nodes = require('../nodes')\n  , Buffer = require('safer-buffer').Buffer\n  , fs = require('fs')\n  , path = require('path')\n  , sax = require('sax');\n\n/**\n * Initialize a new `Image` with the given `ctx` and `path.\n *\n * @param {Evaluator} ctx\n * @param {String} path\n * @api private\n */\n\nvar Image = module.exports = function Image(ctx, path) {\n  this.ctx = ctx;\n  this.path = utils.lookup(path, ctx.paths);\n  if (!this.path) throw new Error('failed to locate file ' + path);\n};\n\n/**\n * Open the image for reading.\n *\n * @api private\n */\n\nImage.prototype.open = function(){\n  this.fd = fs.openSync(this.path, 'r');\n  this.length = fs.fstatSync(this.fd).size;\n  this.extname = path.extname(this.path).slice(1);\n};\n\n/**\n * Close the file.\n *\n * @api private\n */\n\nImage.prototype.close = function(){\n  if (this.fd) fs.closeSync(this.fd);\n};\n\n/**\n * Return the type of image, supports:\n *\n *  - gif\n *  - png\n *  - jpeg\n *  - svg\n *\n * @return {String}\n * @api private\n */\n\nImage.prototype.type = function(){\n  var type\n    , buf = Buffer.alloc(4);\n  \n  fs.readSync(this.fd, buf, 0, 4, 0);\n\n  // GIF\n  if (0x47 == buf[0] && 0x49 == buf[1] && 0x46 == buf[2]) type = 'gif';\n\n  // PNG\n  else if (0x50 == buf[1] && 0x4E == buf[2] && 0x47 == buf[3]) type = 'png';\n\n  // JPEG\n  else if (0xff == buf[0] && 0xd8 == buf[1]) type = 'jpeg';\n\n  // SVG\n  else if ('svg' == this.extname) type = this.extname;\n\n  return type;\n};\n\n/**\n * Return image dimensions `[width, height]`.\n *\n * @return {Array}\n * @api private\n */\n\nImage.prototype.size = function(){\n  var type = this.type()\n    , width\n    , height\n    , buf\n    , offset\n    , blockSize\n    , parser;\n\n  function uint16(b) { return b[1] << 8 | b[0]; }\n  function uint32(b) { return b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]; } \n\n  // Determine dimensions\n  switch (type) {\n    case 'jpeg':\n      buf = Buffer.alloc(this.length);\n      fs.readSync(this.fd, buf, 0, this.length, 0);\n      offset = 4;\n      blockSize = buf[offset] << 8 | buf[offset + 1];\n\n      while (offset < this.length) {\n        offset += blockSize;\n        if (offset >= this.length || 0xff != buf[offset]) break;\n        // SOF0 or SOF2 (progressive)\n        if (0xc0 == buf[offset + 1] || 0xc2 == buf[offset + 1]) {\n          height = buf[offset + 5] << 8 | buf[offset + 6];\n          width = buf[offset + 7] << 8 | buf[offset + 8];\n        } else {\n          offset += 2;\n          blockSize = buf[offset] << 8 | buf[offset + 1];\n        }\n      }\n      break;\n    case 'png':\n      buf = Buffer.alloc(8);\n      // IHDR chunk width / height uint32_t big-endian\n      fs.readSync(this.fd, buf, 0, 8, 16);\n      width = uint32(buf);\n      height = uint32(buf.slice(4, 8));\n      break;\n    case 'gif':\n      buf = Buffer.alloc(4);\n      // width / height uint16_t little-endian\n      fs.readSync(this.fd, buf, 0, 4, 6);\n      width = uint16(buf);\n      height = uint16(buf.slice(2, 4));\n      break;\n    case 'svg':\n      offset = Math.min(this.length, 1024);\n      buf = Buffer.alloc(offset);\n      fs.readSync(this.fd, buf, 0, offset, 0);\n      buf = buf.toString('utf8');\n      parser = sax.parser(true);\n      parser.onopentag = function(node) {\n        if ('svg' == node.name && node.attributes.width && node.attributes.height) {\n          width = parseInt(node.attributes.width, 10);\n          height = parseInt(node.attributes.height, 10);\n        }\n      };\n      parser.write(buf).close();\n      break;\n  }\n\n  if ('number' != typeof width) throw new Error('failed to find width of \"' + this.path + '\"');\n  if ('number' != typeof height) throw new Error('failed to find height of \"' + this.path + '\"');\n\n  return [width, height];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}