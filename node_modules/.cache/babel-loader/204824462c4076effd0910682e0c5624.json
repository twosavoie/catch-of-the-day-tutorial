{"ast":null,"code":"var utils = require('../utils'),\n  nodes = require('../nodes'),\n  readFile = require('fs').readFileSync;\n\n/**\n * Convert a .json file into stylus variables or object.\n * Nested variable object keys are joined with a dash (-)\n *\n * Given this sample media-queries.json file:\n * {\n *   \"small\": \"screen and (max-width:400px)\",\n *   \"tablet\": {\n *     \"landscape\": \"screen and (min-width:600px) and (orientation:landscape)\",\n *     \"portrait\": \"screen and (min-width:600px) and (orientation:portrait)\"\n *   }\n * }\n *\n * Examples:\n *\n *    json('media-queries.json')\n *\n *    @media small\n *    // => @media screen and (max-width:400px)\n *\n *    @media tablet-landscape\n *    // => @media screen and (min-width:600px) and (orientation:landscape)\n *\n *    vars = json('vars.json', { hash: true })\n *    body\n *      width: vars.width\n *\n * @param {String} path\n * @param {Boolean} [local]\n * @param {String} [namePrefix]\n * @api public\n*/\n\nfunction json(path, local, namePrefix) {\n  utils.assertString(path, 'path');\n\n  // lookup\n  path = path.string;\n  var found = utils.lookup(path, this.options.paths, this.options.filename),\n    options = local && 'object' == local.nodeName && local;\n  if (!found) {\n    // optional JSON file\n    if (options && options.get('optional').toBoolean().isTrue) {\n      return nodes.null;\n    }\n    throw new Error('failed to locate .json file ' + path);\n  }\n\n  // read\n  var json = JSON.parse(readFile(found, 'utf8'));\n  if (options) {\n    return convert(json, options);\n  } else {\n    oldJson.call(this, json, local, namePrefix);\n  }\n  function convert(obj, options) {\n    var ret = new nodes.Object(),\n      leaveStrings = options.get('leave-strings').toBoolean();\n    for (var key in obj) {\n      var val = obj[key];\n      if ('object' == typeof val) {\n        ret.set(key, convert(val, options));\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName && leaveStrings.isFalse) {\n          val = utils.parseString(val.string);\n        }\n        ret.set(key, val);\n      }\n    }\n    return ret;\n  }\n}\n;\njson.params = ['path', 'local', 'namePrefix'];\nmodule.exports = json;\n\n/**\n * Old `json` BIF.\n *\n * @api private\n */\n\nfunction oldJson(json, local, namePrefix) {\n  if (namePrefix) {\n    utils.assertString(namePrefix, 'namePrefix');\n    namePrefix = namePrefix.val;\n  } else {\n    namePrefix = '';\n  }\n  local = local ? local.toBoolean() : new nodes.Boolean(local);\n  var scope = local.isTrue ? this.currentScope : this.global.scope;\n  convert(json);\n  return;\n  function convert(obj, prefix) {\n    prefix = prefix ? prefix + '-' : '';\n    for (var key in obj) {\n      var val = obj[key];\n      var name = prefix + key;\n      if ('object' == typeof val) {\n        convert(val, name);\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName) val = utils.parseString(val.string);\n        scope.add({\n          name: namePrefix + name,\n          val: val\n        });\n      }\n    }\n  }\n}\n;","map":{"version":3,"names":["utils","require","nodes","readFile","readFileSync","json","path","local","namePrefix","assertString","string","found","lookup","options","paths","filename","nodeName","get","toBoolean","isTrue","null","Error","JSON","parse","convert","oldJson","call","obj","ret","Object","leaveStrings","key","val","set","coerce","isFalse","parseString","params","module","exports","Boolean","scope","currentScope","global","prefix","name","add"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/json.js"],"sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes')\n  , readFile = require('fs').readFileSync;\n\n/**\n * Convert a .json file into stylus variables or object.\n * Nested variable object keys are joined with a dash (-)\n *\n * Given this sample media-queries.json file:\n * {\n *   \"small\": \"screen and (max-width:400px)\",\n *   \"tablet\": {\n *     \"landscape\": \"screen and (min-width:600px) and (orientation:landscape)\",\n *     \"portrait\": \"screen and (min-width:600px) and (orientation:portrait)\"\n *   }\n * }\n *\n * Examples:\n *\n *    json('media-queries.json')\n *\n *    @media small\n *    // => @media screen and (max-width:400px)\n *\n *    @media tablet-landscape\n *    // => @media screen and (min-width:600px) and (orientation:landscape)\n *\n *    vars = json('vars.json', { hash: true })\n *    body\n *      width: vars.width\n *\n * @param {String} path\n * @param {Boolean} [local]\n * @param {String} [namePrefix]\n * @api public\n*/\n\nfunction json(path, local, namePrefix){\n  utils.assertString(path, 'path');\n\n  // lookup\n  path = path.string;\n  var found = utils.lookup(path, this.options.paths, this.options.filename)\n    , options = (local && 'object' == local.nodeName) && local;\n\n  if (!found) {\n    // optional JSON file\n    if (options && options.get('optional').toBoolean().isTrue) {\n      return nodes.null;\n    }\n    throw new Error('failed to locate .json file ' + path);\n  }\n\n  // read\n  var json = JSON.parse(readFile(found, 'utf8'));\n\n  if (options) {\n    return convert(json, options);\n  } else {\n    oldJson.call(this, json, local, namePrefix);\n  }\n\n  function convert(obj, options){\n    var ret = new nodes.Object()\n      , leaveStrings = options.get('leave-strings').toBoolean();\n\n    for (var key in obj) {\n      var val = obj[key];\n      if ('object' == typeof val) {\n        ret.set(key, convert(val, options));\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName && leaveStrings.isFalse) {\n          val = utils.parseString(val.string);\n        }\n        ret.set(key, val);\n      }\n    }\n    return ret;\n  }\n};\njson.params = ['path', 'local', 'namePrefix'];\nmodule.exports = json;\n\n/**\n * Old `json` BIF.\n *\n * @api private\n */\n\nfunction oldJson(json, local, namePrefix){\n  if (namePrefix) {\n    utils.assertString(namePrefix, 'namePrefix');\n    namePrefix = namePrefix.val;\n  } else {\n    namePrefix = '';\n  }\n  local = local ? local.toBoolean() : new nodes.Boolean(local);\n  var scope = local.isTrue ? this.currentScope : this.global.scope;\n\n  convert(json);\n  return;\n\n  function convert(obj, prefix){\n    prefix = prefix ? prefix + '-' : '';\n    for (var key in obj){\n      var val = obj[key];\n      var name = prefix + key;\n      if ('object' == typeof val) {\n        convert(val, name);\n      } else {\n        val = utils.coerce(val);\n        if ('string' == val.nodeName) val = utils.parseString(val.string);\n        scope.add({ name: namePrefix + name, val: val });\n      }\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}