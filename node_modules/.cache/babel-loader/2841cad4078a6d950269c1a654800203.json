{"ast":null,"code":"/*!\n * Stylus - Query\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Query`.\n *\n * @api public\n */\n\nvar Query = module.exports = function Query() {\n  Node.call(this);\n  this.nodes = [];\n  this.type = '';\n  this.predicate = '';\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nQuery.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nQuery.prototype.clone = function (parent) {\n  var clone = new Query();\n  clone.predicate = this.predicate;\n  clone.type = this.type;\n  for (var i = 0, len = this.nodes.length; i < len; ++i) {\n    clone.push(this.nodes[i].clone(parent, clone));\n  }\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Push the given `feature`.\n *\n * @param {Feature} feature\n * @api public\n */\n\nQuery.prototype.push = function (feature) {\n  this.nodes.push(feature);\n};\n\n/**\n * Return resolved type of this query.\n *\n * @return {String}\n * @api private\n */\n\nQuery.prototype.__defineGetter__('resolvedType', function () {\n  if (this.type) {\n    return this.type.nodeName ? this.type.string : this.type;\n  }\n});\n\n/**\n * Return resolved predicate of this query.\n *\n * @return {String}\n * @api private\n */\n\nQuery.prototype.__defineGetter__('resolvedPredicate', function () {\n  if (this.predicate) {\n    return this.predicate.nodeName ? this.predicate.string : this.predicate;\n  }\n});\n\n/**\n * Merges this query with the `other`.\n *\n * @param {Query} other\n * @return {Query}\n * @api private\n */\n\nQuery.prototype.merge = function (other) {\n  var query = new Query(),\n    p1 = this.resolvedPredicate,\n    p2 = other.resolvedPredicate,\n    t1 = this.resolvedType,\n    t2 = other.resolvedType,\n    type,\n    pred;\n\n  // Stolen from Sass :D\n  t1 = t1 || t2;\n  t2 = t2 || t1;\n  if ('not' == p1 ^ 'not' == p2) {\n    if (t1 == t2) return;\n    type = 'not' == p1 ? t2 : t1;\n    pred = 'not' == p1 ? p2 : p1;\n  } else if ('not' == p1 && 'not' == p2) {\n    if (t1 != t2) return;\n    type = t1;\n    pred = 'not';\n  } else if (t1 != t2) {\n    return;\n  } else {\n    type = t1;\n    pred = p1 || p2;\n  }\n  query.predicate = pred;\n  query.type = type;\n  query.nodes = this.nodes.concat(other.nodes);\n  return query;\n};\n\n/**\n * Return \"<a> and <b> and <c>\"\n *\n * @return {String}\n * @api public\n */\n\nQuery.prototype.toString = function () {\n  var pred = this.predicate ? this.predicate + ' ' : '',\n    type = this.type || '',\n    len = this.nodes.length,\n    str = pred + type;\n  if (len) {\n    str += (type && ' and ') + this.nodes.map(function (expr) {\n      return expr.toString();\n    }).join(' and ');\n  }\n  return str;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nQuery.prototype.toJSON = function () {\n  return {\n    __type: 'Query',\n    predicate: this.predicate,\n    type: this.type,\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};","map":{"version":3,"names":["Node","require","Query","module","exports","call","nodes","type","predicate","prototype","__proto__","clone","parent","i","len","length","push","lineno","column","filename","feature","__defineGetter__","nodeName","string","merge","other","query","p1","resolvedPredicate","p2","t1","resolvedType","t2","pred","concat","toString","str","map","expr","join","toJSON","__type"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/query.js"],"sourcesContent":["\n/*!\n * Stylus - Query\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node');\n\n/**\n * Initialize a new `Query`.\n *\n * @api public\n */\n\nvar Query = module.exports = function Query(){\n  Node.call(this);\n  this.nodes = [];\n  this.type = '';\n  this.predicate = '';\n};\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nQuery.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nQuery.prototype.clone = function(parent){\n  var clone = new Query;\n  clone.predicate = this.predicate;\n  clone.type = this.type;\n  for (var i = 0, len = this.nodes.length; i < len; ++i) {\n    clone.push(this.nodes[i].clone(parent, clone));\n  }\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Push the given `feature`.\n *\n * @param {Feature} feature\n * @api public\n */\n\nQuery.prototype.push = function(feature){\n  this.nodes.push(feature);\n};\n\n/**\n * Return resolved type of this query.\n *\n * @return {String}\n * @api private\n */\n\nQuery.prototype.__defineGetter__('resolvedType', function(){\n  if (this.type) {\n    return this.type.nodeName\n      ? this.type.string\n      : this.type;\n  }\n});\n\n/**\n * Return resolved predicate of this query.\n *\n * @return {String}\n * @api private\n */\n\nQuery.prototype.__defineGetter__('resolvedPredicate', function(){\n  if (this.predicate) {\n    return this.predicate.nodeName\n      ? this.predicate.string\n      : this.predicate;\n  }\n});\n\n/**\n * Merges this query with the `other`.\n *\n * @param {Query} other\n * @return {Query}\n * @api private\n */\n\nQuery.prototype.merge = function(other){\n  var query = new Query\n    , p1 = this.resolvedPredicate\n    , p2 = other.resolvedPredicate\n    , t1 = this.resolvedType\n    , t2 = other.resolvedType\n    , type, pred;\n\n  // Stolen from Sass :D\n  t1 = t1 || t2;\n  t2 = t2 || t1;\n  if (('not' == p1) ^ ('not' == p2)) {\n    if (t1 == t2) return;\n    type = ('not' == p1) ? t2 : t1;\n    pred = ('not' == p1) ? p2 : p1;\n  } else if (('not' == p1) && ('not' == p2)) {\n    if (t1 != t2) return;\n    type = t1;\n    pred = 'not';\n  } else if (t1 != t2) {\n    return;\n  } else {\n    type = t1;\n    pred = p1 || p2;\n  }\n  query.predicate = pred;\n  query.type = type;\n  query.nodes = this.nodes.concat(other.nodes);\n  return query;\n};\n\n/**\n * Return \"<a> and <b> and <c>\"\n *\n * @return {String}\n * @api public\n */\n\nQuery.prototype.toString = function(){\n  var pred = this.predicate ? this.predicate + ' ' : ''\n    , type = this.type || ''\n    , len = this.nodes.length\n    , str = pred + type;\n  if (len) {\n    str += (type && ' and ') + this.nodes.map(function(expr){\n      return expr.toString();\n    }).join(' and ');\n  }\n  return str;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nQuery.prototype.toJSON = function(){\n  return {\n    __type: 'Query',\n    predicate: this.predicate,\n    type: this.type,\n    nodes: this.nodes,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}