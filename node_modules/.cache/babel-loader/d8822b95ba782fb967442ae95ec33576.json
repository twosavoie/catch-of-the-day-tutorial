{"ast":null,"code":"var utils = require('../utils'),\n  nodes = require('../nodes');\nvar VALID_FLAGS = 'igm';\n\n/**\n * retrieves the matches when matching a `val`(string)\n * against a `pattern`(regular expression).\n *\n * Examples:\n *   $regex = '^(height|width)?([<>=]{1,})(.*)'\n *\n *   match($regex,'height>=sm')\n * \t // => ('height>=sm' 'height' '>=' 'sm')\n * \t // => also truthy\n *\n *   match($regex, 'lorem ipsum')\n *   // => null\n *\n * @param {String} pattern\n * @param {String|Ident} val\n * @param {String|Ident} [flags='']\n * @return {String|Null}\n * @api public\n */\n\nfunction match(pattern, val, flags) {\n  utils.assertType(pattern, 'string', 'pattern');\n  utils.assertString(val, 'val');\n  var re = new RegExp(pattern.val, validateFlags(flags) ? flags.string : '');\n  return val.string.match(re);\n}\nmatch.params = ['pattern', 'val', 'flags'];\nmodule.exports = match;\nfunction validateFlags(flags) {\n  flags = flags && flags.string;\n  if (flags) {\n    return flags.split('').every(function (flag) {\n      return ~VALID_FLAGS.indexOf(flag);\n    });\n  }\n  return false;\n}","map":{"version":3,"names":["utils","require","nodes","VALID_FLAGS","match","pattern","val","flags","assertType","assertString","re","RegExp","validateFlags","string","params","module","exports","split","every","flag","indexOf"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/match.js"],"sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\nvar VALID_FLAGS = 'igm';\n\n/**\n * retrieves the matches when matching a `val`(string)\n * against a `pattern`(regular expression).\n *\n * Examples:\n *   $regex = '^(height|width)?([<>=]{1,})(.*)'\n *\n *   match($regex,'height>=sm')\n * \t // => ('height>=sm' 'height' '>=' 'sm')\n * \t // => also truthy\n *\n *   match($regex, 'lorem ipsum')\n *   // => null\n *\n * @param {String} pattern\n * @param {String|Ident} val\n * @param {String|Ident} [flags='']\n * @return {String|Null}\n * @api public\n */\n\nfunction match(pattern, val, flags){\n  utils.assertType(pattern, 'string', 'pattern');\n  utils.assertString(val, 'val');\n  var re = new RegExp(pattern.val, validateFlags(flags) ? flags.string : '');\n  return val.string.match(re);\n}\nmatch.params = ['pattern', 'val', 'flags'];\nmodule.exports = match;\n\nfunction validateFlags(flags) {\n  flags = flags && flags.string;\n\n  if (flags) {\n    return flags.split('').every(function(flag) {\n      return ~VALID_FLAGS.indexOf(flag);\n    });\n  }\n  return false;\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC3BC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;AAE/B,IAAIE,WAAW,GAAG,KAAK;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAK,CAACC,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAC;EACjCP,KAAK,CAACQ,UAAU,CAACH,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;EAC9CL,KAAK,CAACS,YAAY,CAACH,GAAG,EAAE,KAAK,CAAC;EAC9B,IAAII,EAAE,GAAG,IAAIC,MAAM,CAACN,OAAO,CAACC,GAAG,EAAEM,aAAa,CAACL,KAAK,CAAC,GAAGA,KAAK,CAACM,MAAM,GAAG,EAAE,CAAC;EAC1E,OAAOP,GAAG,CAACO,MAAM,CAACT,KAAK,CAACM,EAAE,CAAC;AAC7B;AACAN,KAAK,CAACU,MAAM,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC;AAC1CC,MAAM,CAACC,OAAO,GAAGZ,KAAK;AAEtB,SAASQ,aAAa,CAACL,KAAK,EAAE;EAC5BA,KAAK,GAAGA,KAAK,IAAIA,KAAK,CAACM,MAAM;EAE7B,IAAIN,KAAK,EAAE;IACT,OAAOA,KAAK,CAACU,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,UAASC,IAAI,EAAE;MAC1C,OAAO,CAAChB,WAAW,CAACiB,OAAO,CAACD,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ;EACA,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"script"}