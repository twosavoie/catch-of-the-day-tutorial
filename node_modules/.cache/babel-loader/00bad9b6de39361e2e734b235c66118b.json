{"ast":null,"code":"/*!\n * Stylus - Expression\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  nodes = require('../nodes'),\n  utils = require('../utils');\n\n/**\n * Initialize a new `Expression`.\n *\n * @param {Boolean} isList\n * @api public\n */\n\nvar Expression = module.exports = function Expression(isList) {\n  Node.call(this);\n  this.nodes = [];\n  this.isList = isList;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('isEmpty', function () {\n  return !this.nodes.length;\n});\n\n/**\n * Return the first node in this expression.\n *\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('first', function () {\n  return this.nodes[0] ? this.nodes[0].first : nodes.null;\n});\n\n/**\n * Hash all the nodes in order.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('hash', function () {\n  return this.nodes.map(function (node) {\n    return node.hash;\n  }).join('::');\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nExpression.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nExpression.prototype.clone = function (parent) {\n  var clone = new this.constructor(this.isList);\n  clone.preserve = this.preserve;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.nodes = this.nodes.map(function (node) {\n    return node.clone(parent, clone);\n  });\n  return clone;\n};\n\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\nExpression.prototype.push = function (node) {\n  this.nodes.push(node);\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.operate = function (op, right, val) {\n  switch (op) {\n    case '[]=':\n      var self = this,\n        range = utils.unwrap(right).nodes,\n        val = utils.unwrap(val),\n        len,\n        node;\n      range.forEach(function (unit) {\n        len = self.nodes.length;\n        if ('unit' == unit.nodeName) {\n          var i = unit.val < 0 ? len + unit.val : unit.val,\n            n = i;\n          while (i-- > len) self.nodes[i] = nodes.null;\n          self.nodes[n] = val;\n        } else if (unit.string) {\n          node = self.nodes[0];\n          if (node && 'object' == node.nodeName) node.set(unit.string, val.clone());\n        }\n      });\n      return val;\n    case '[]':\n      var expr = new nodes.Expression(),\n        vals = utils.unwrap(this).nodes,\n        range = utils.unwrap(right).nodes,\n        node;\n      range.forEach(function (unit) {\n        if ('unit' == unit.nodeName) {\n          node = vals[unit.val < 0 ? vals.length + unit.val : unit.val];\n        } else if ('object' == vals[0].nodeName) {\n          node = vals[0].get(unit.string);\n        }\n        if (node) expr.push(node);\n      });\n      return expr.isEmpty ? nodes.null : utils.unwrap(expr);\n    case '||':\n      return this.toBoolean().isTrue ? this : right;\n    case 'in':\n      return Node.prototype.operate.call(this, op, right);\n    case '!=':\n      return this.operate('==', right, val).negate();\n    case '==':\n      var len = this.nodes.length,\n        right = right.toExpression(),\n        a,\n        b;\n      if (len != right.nodes.length) return nodes.false;\n      for (var i = 0; i < len; ++i) {\n        a = this.nodes[i];\n        b = right.nodes[i];\n        if (a.operate(op, b).isTrue) continue;\n        return nodes.false;\n      }\n      return nodes.true;\n      break;\n    default:\n      return this.first.operate(op, right, val);\n  }\n};\n\n/**\n * Expressions with length > 1 are truthy,\n * otherwise the first value's toBoolean()\n * method is invoked.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.toBoolean = function () {\n  if (this.nodes.length > 1) return nodes.true;\n  return this.first.toBoolean();\n};\n\n/**\n * Return \"<a> <b> <c>\" or \"<a>, <b>, <c>\" if\n * the expression represents a list.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.toString = function () {\n  return '(' + this.nodes.map(function (node) {\n    return node.toString();\n  }).join(this.isList ? ', ' : ' ') + ')';\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nExpression.prototype.toJSON = function () {\n  return {\n    __type: 'Expression',\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};","map":{"version":3,"names":["Node","require","nodes","utils","Expression","module","exports","isList","call","prototype","__defineGetter__","length","first","null","map","node","hash","join","__proto__","clone","parent","constructor","preserve","lineno","column","filename","push","operate","op","right","val","self","range","unwrap","len","forEach","unit","nodeName","i","n","string","set","expr","vals","get","isEmpty","toBoolean","isTrue","negate","toExpression","a","b","false","true","toString","toJSON","__type"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/expression.js"],"sourcesContent":["\n/*!\n * Stylus - Expression\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('../nodes')\n  , utils = require('../utils');\n\n/**\n * Initialize a new `Expression`.\n *\n * @param {Boolean} isList\n * @api public\n */\n\nvar Expression = module.exports = function Expression(isList){\n  Node.call(this);\n  this.nodes = [];\n  this.isList = isList;\n};\n\n/**\n * Check if the variable has a value.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('isEmpty', function(){\n  return !this.nodes.length;\n});\n\n/**\n * Return the first node in this expression.\n *\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('first', function(){\n  return this.nodes[0]\n    ? this.nodes[0].first\n    : nodes.null;\n});\n\n/**\n * Hash all the nodes in order.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.__defineGetter__('hash', function(){\n  return this.nodes.map(function(node){\n    return node.hash;\n  }).join('::');\n});\n\n/**\n * Inherit from `Node.prototype`.\n */\n\nExpression.prototype.__proto__ = Node.prototype;\n\n/**\n * Return a clone of this node.\n * \n * @return {Node}\n * @api public\n */\n\nExpression.prototype.clone = function(parent){\n  var clone = new this.constructor(this.isList);\n  clone.preserve = this.preserve;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  clone.nodes = this.nodes.map(function(node) {\n    return node.clone(parent, clone);\n  });\n  return clone;\n};\n\n/**\n * Push the given `node`.\n *\n * @param {Node} node\n * @api public\n */\n\nExpression.prototype.push = function(node){\n  this.nodes.push(node);\n};\n\n/**\n * Operate on `right` with the given `op`.\n *\n * @param {String} op\n * @param {Node} right\n * @return {Node}\n * @api public\n */\n\nExpression.prototype.operate = function(op, right, val){\n  switch (op) {\n    case '[]=':\n      var self = this\n        , range = utils.unwrap(right).nodes\n        , val = utils.unwrap(val)\n        , len\n        , node;\n      range.forEach(function(unit){\n        len = self.nodes.length;\n        if ('unit' == unit.nodeName) {\n          var i = unit.val < 0 ? len + unit.val : unit.val\n            , n = i;\n          while (i-- > len) self.nodes[i] = nodes.null;\n          self.nodes[n] = val;\n        } else if (unit.string) {\n          node = self.nodes[0];\n          if (node && 'object' == node.nodeName) node.set(unit.string, val.clone());\n        }\n      });\n      return val;\n    case '[]':\n      var expr = new nodes.Expression\n        , vals = utils.unwrap(this).nodes\n        , range = utils.unwrap(right).nodes\n        , node;\n      range.forEach(function(unit){\n        if ('unit' == unit.nodeName) {\n          node = vals[unit.val < 0 ? vals.length + unit.val : unit.val];\n        } else if ('object' == vals[0].nodeName) {\n          node = vals[0].get(unit.string);\n        }\n        if (node) expr.push(node);\n      });\n      return expr.isEmpty\n        ? nodes.null\n        : utils.unwrap(expr);\n    case '||':\n      return this.toBoolean().isTrue\n        ? this\n        : right;\n    case 'in':\n      return Node.prototype.operate.call(this, op, right);\n    case '!=':\n      return this.operate('==', right, val).negate();\n    case '==':\n      var len = this.nodes.length\n        , right = right.toExpression()\n        , a\n        , b;\n      if (len != right.nodes.length) return nodes.false;\n      for (var i = 0; i < len; ++i) {\n        a = this.nodes[i];\n        b = right.nodes[i];\n        if (a.operate(op, b).isTrue) continue;\n        return nodes.false;\n      }\n      return nodes.true;\n      break;\n    default:\n      return this.first.operate(op, right, val);\n  }\n};\n\n/**\n * Expressions with length > 1 are truthy,\n * otherwise the first value's toBoolean()\n * method is invoked.\n *\n * @return {Boolean}\n * @api public\n */\n\nExpression.prototype.toBoolean = function(){\n  if (this.nodes.length > 1) return nodes.true;\n  return this.first.toBoolean();\n};\n\n/**\n * Return \"<a> <b> <c>\" or \"<a>, <b>, <c>\" if\n * the expression represents a list.\n *\n * @return {String}\n * @api public\n */\n\nExpression.prototype.toString = function(){\n  return '(' + this.nodes.map(function(node){\n    return node.toString();\n  }).join(this.isList ? ', ' : ' ') + ')';\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nExpression.prototype.toJSON = function(){\n  return {\n    __type: 'Expression',\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}