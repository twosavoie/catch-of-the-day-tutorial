{"ast":null,"code":"var utils = require('../utils'),\n  path = require('path');\n\n/**\n*  Use the given `plugin`\n*  \n*  Examples:\n*\n*     use(\"plugins/add.js\")\n*\n*     width add(10, 100)\n*     // => width: 110\n*/\n\nfunction use(plugin, options) {\n  utils.assertString(plugin, 'plugin');\n  if (options) {\n    utils.assertType(options, 'object', 'options');\n    options = parseObject(options);\n  }\n\n  // lookup\n  plugin = plugin.string;\n  var found = utils.lookup(plugin, this.options.paths, this.options.filename);\n  if (!found) throw new Error('failed to locate plugin file \"' + plugin + '\"');\n\n  // use\n  var fn = require(path.resolve(found));\n  if ('function' != typeof fn) {\n    throw new Error('plugin \"' + plugin + '\" does not export a function');\n  }\n  this.renderer.use(fn(options || this.options));\n}\nuse.params = ['plugin', 'options'];\nmodule.exports = use;\n\n/**\n * Attempt to parse object node to the javascript object.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction parseObject(obj) {\n  obj = obj.vals;\n  for (var key in obj) {\n    var nodes = obj[key].nodes[0].nodes;\n    if (nodes && nodes.length) {\n      obj[key] = [];\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        obj[key].push(convert(nodes[i]));\n      }\n    } else {\n      obj[key] = convert(obj[key].first);\n    }\n  }\n  return obj;\n  function convert(node) {\n    switch (node.nodeName) {\n      case 'object':\n        return parseObject(node);\n      case 'boolean':\n        return node.isTrue;\n      case 'unit':\n        return node.type ? node.toString() : +node.val;\n      case 'string':\n      case 'literal':\n        return node.val;\n      default:\n        return node.toString();\n    }\n  }\n}","map":{"version":3,"names":["utils","require","path","use","plugin","options","assertString","assertType","parseObject","string","found","lookup","paths","filename","Error","fn","resolve","renderer","params","module","exports","obj","vals","key","nodes","length","i","len","push","convert","first","node","nodeName","isTrue","type","toString","val"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/use.js"],"sourcesContent":["var utils = require('../utils')\n  , path = require('path');\n\n/**\n*  Use the given `plugin`\n*  \n*  Examples:\n*\n*     use(\"plugins/add.js\")\n*\n*     width add(10, 100)\n*     // => width: 110\n*/\n\nfunction use(plugin, options){\n  utils.assertString(plugin, 'plugin');\n\n  if (options) {\n    utils.assertType(options, 'object', 'options');\n    options = parseObject(options);\n  }\n\n  // lookup\n  plugin = plugin.string;\n  var found = utils.lookup(plugin, this.options.paths, this.options.filename);\n  if (!found) throw new Error('failed to locate plugin file \"' + plugin + '\"');\n\n  // use\n  var fn = require(path.resolve(found));\n  if ('function' != typeof fn) {\n    throw new Error('plugin \"' + plugin + '\" does not export a function');\n  }\n  this.renderer.use(fn(options || this.options));\n}\nuse.params = ['plugin', 'options'];\nmodule.exports = use;\n\n/**\n * Attempt to parse object node to the javascript object.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction parseObject(obj){\n  obj = obj.vals;\n  for (var key in obj) {\n    var nodes = obj[key].nodes[0].nodes;\n    if (nodes && nodes.length) {\n      obj[key] = [];\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        obj[key].push(convert(nodes[i]));\n      }\n    } else {\n      obj[key] = convert(obj[key].first);\n    }\n  }\n  return obj;\n\n  function convert(node){\n    switch (node.nodeName) {\n      case 'object':\n        return parseObject(node);\n      case 'boolean':\n        return node.isTrue;\n      case 'unit':\n        return node.type ? node.toString() : +node.val;\n      case 'string':\n      case 'literal':\n        return node.val;\n      default:\n        return node.toString();\n    }\n  }\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC3BC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,GAAG,CAACC,MAAM,EAAEC,OAAO,EAAC;EAC3BL,KAAK,CAACM,YAAY,CAACF,MAAM,EAAE,QAAQ,CAAC;EAEpC,IAAIC,OAAO,EAAE;IACXL,KAAK,CAACO,UAAU,CAACF,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC9CA,OAAO,GAAGG,WAAW,CAACH,OAAO,CAAC;EAChC;;EAEA;EACAD,MAAM,GAAGA,MAAM,CAACK,MAAM;EACtB,IAAIC,KAAK,GAAGV,KAAK,CAACW,MAAM,CAACP,MAAM,EAAE,IAAI,CAACC,OAAO,CAACO,KAAK,EAAE,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAAC;EAC3E,IAAI,CAACH,KAAK,EAAE,MAAM,IAAII,KAAK,CAAC,gCAAgC,GAAGV,MAAM,GAAG,GAAG,CAAC;;EAE5E;EACA,IAAIW,EAAE,GAAGd,OAAO,CAACC,IAAI,CAACc,OAAO,CAACN,KAAK,CAAC,CAAC;EACrC,IAAI,UAAU,IAAI,OAAOK,EAAE,EAAE;IAC3B,MAAM,IAAID,KAAK,CAAC,UAAU,GAAGV,MAAM,GAAG,8BAA8B,CAAC;EACvE;EACA,IAAI,CAACa,QAAQ,CAACd,GAAG,CAACY,EAAE,CAACV,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC,CAAC;AAChD;AACAF,GAAG,CAACe,MAAM,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC;AAClCC,MAAM,CAACC,OAAO,GAAGjB,GAAG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASK,WAAW,CAACa,GAAG,EAAC;EACvBA,GAAG,GAAGA,GAAG,CAACC,IAAI;EACd,KAAK,IAAIC,GAAG,IAAIF,GAAG,EAAE;IACnB,IAAIG,KAAK,GAAGH,GAAG,CAACE,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK;IACnC,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;MACzBJ,GAAG,CAACE,GAAG,CAAC,GAAG,EAAE;MACb,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,KAAK,CAACC,MAAM,EAAEC,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAChDL,GAAG,CAACE,GAAG,CAAC,CAACK,IAAI,CAACC,OAAO,CAACL,KAAK,CAACE,CAAC,CAAC,CAAC,CAAC;MAClC;IACF,CAAC,MAAM;MACLL,GAAG,CAACE,GAAG,CAAC,GAAGM,OAAO,CAACR,GAAG,CAACE,GAAG,CAAC,CAACO,KAAK,CAAC;IACpC;EACF;EACA,OAAOT,GAAG;EAEV,SAASQ,OAAO,CAACE,IAAI,EAAC;IACpB,QAAQA,IAAI,CAACC,QAAQ;MACnB,KAAK,QAAQ;QACX,OAAOxB,WAAW,CAACuB,IAAI,CAAC;MAC1B,KAAK,SAAS;QACZ,OAAOA,IAAI,CAACE,MAAM;MACpB,KAAK,MAAM;QACT,OAAOF,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAACJ,IAAI,CAACK,GAAG;MAChD,KAAK,QAAQ;MACb,KAAK,SAAS;QACZ,OAAOL,IAAI,CAACK,GAAG;MACjB;QACE,OAAOL,IAAI,CAACI,QAAQ,EAAE;IAAC;EAE7B;AACF"},"metadata":{},"sourceType":"script"}