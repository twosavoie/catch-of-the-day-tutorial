{"ast":null,"code":"var utils = require('../utils'),\n  nodes = require('../nodes');\n\n/**\n * Color component name map.\n */\n\nvar componentMap = {\n  red: 'r',\n  green: 'g',\n  blue: 'b',\n  alpha: 'a',\n  hue: 'h',\n  saturation: 's',\n  lightness: 'l'\n};\n\n/**\n * Color component unit type map.\n */\n\nvar unitMap = {\n  hue: 'deg',\n  saturation: '%',\n  lightness: '%'\n};\n\n/**\n * Color type map.\n */\n\nvar typeMap = {\n  red: 'rgba',\n  blue: 'rgba',\n  green: 'rgba',\n  alpha: 'rgba',\n  hue: 'hsla',\n  saturation: 'hsla',\n  lightness: 'hsla'\n};\n\n/**\n * Return component `name` for the given `color`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} name\n * @return {Unit}\n * @api public\n */\n\nfunction component(color, name) {\n  utils.assertColor(color, 'color');\n  utils.assertString(name, 'name');\n  var name = name.string,\n    unit = unitMap[name],\n    type = typeMap[name],\n    name = componentMap[name];\n  if (!name) throw new Error('invalid color component \"' + name + '\"');\n  return new nodes.Unit(color[type][name], unit);\n}\n;\ncomponent.params = ['color', 'name'];\nmodule.exports = component;","map":{"version":3,"names":["utils","require","nodes","componentMap","red","green","blue","alpha","hue","saturation","lightness","unitMap","typeMap","component","color","name","assertColor","assertString","string","unit","type","Error","Unit","params","module","exports"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/functions/component.js"],"sourcesContent":["var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Color component name map.\n */\n\nvar componentMap = {\n    red: 'r'\n  , green: 'g'\n  , blue: 'b'\n  , alpha: 'a'\n  , hue: 'h'\n  , saturation: 's'\n  , lightness: 'l'\n};\n\n/**\n * Color component unit type map.\n */\n\nvar unitMap = {\n    hue: 'deg'\n  , saturation: '%'\n  , lightness: '%'\n};\n\n/**\n * Color type map.\n */\n\nvar typeMap = {\n    red: 'rgba'\n  , blue: 'rgba'\n  , green: 'rgba'\n  , alpha: 'rgba'\n  , hue: 'hsla'\n  , saturation: 'hsla'\n  , lightness: 'hsla'\n};\n\n/**\n * Return component `name` for the given `color`.\n *\n * @param {RGBA|HSLA} color\n * @param {String} name\n * @return {Unit}\n * @api public\n */\n\nfunction component(color, name) {\n  utils.assertColor(color, 'color');\n  utils.assertString(name, 'name');\n  var name = name.string\n    , unit = unitMap[name]\n    , type = typeMap[name]\n    , name = componentMap[name];\n  if (!name) throw new Error('invalid color component \"' + name + '\"');\n  return new nodes.Unit(color[type][name], unit);\n};\ncomponent.params = ['color', 'name'];\nmodule.exports = component;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC3BC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAE/B;AACA;AACA;;AAEA,IAAIE,YAAY,GAAG;EACfC,GAAG,EAAE,GAAG;EACRC,KAAK,EAAE,GAAG;EACVC,IAAI,EAAE,GAAG;EACTC,KAAK,EAAE,GAAG;EACVC,GAAG,EAAE,GAAG;EACRC,UAAU,EAAE,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;;AAED;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG;EACVH,GAAG,EAAE,KAAK;EACVC,UAAU,EAAE,GAAG;EACfC,SAAS,EAAE;AACf,CAAC;;AAED;AACA;AACA;;AAEA,IAAIE,OAAO,GAAG;EACVR,GAAG,EAAE,MAAM;EACXE,IAAI,EAAE,MAAM;EACZD,KAAK,EAAE,MAAM;EACbE,KAAK,EAAE,MAAM;EACbC,GAAG,EAAE,MAAM;EACXC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,SAAS,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC9Bf,KAAK,CAACgB,WAAW,CAACF,KAAK,EAAE,OAAO,CAAC;EACjCd,KAAK,CAACiB,YAAY,CAACF,IAAI,EAAE,MAAM,CAAC;EAChC,IAAIA,IAAI,GAAGA,IAAI,CAACG,MAAM;IAClBC,IAAI,GAAGR,OAAO,CAACI,IAAI,CAAC;IACpBK,IAAI,GAAGR,OAAO,CAACG,IAAI,CAAC;IACpBA,IAAI,GAAGZ,YAAY,CAACY,IAAI,CAAC;EAC7B,IAAI,CAACA,IAAI,EAAE,MAAM,IAAIM,KAAK,CAAC,2BAA2B,GAAGN,IAAI,GAAG,GAAG,CAAC;EACpE,OAAO,IAAIb,KAAK,CAACoB,IAAI,CAACR,KAAK,CAACM,IAAI,CAAC,CAACL,IAAI,CAAC,EAAEI,IAAI,CAAC;AAChD;AAAC;AACDN,SAAS,CAACU,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;AACpCC,MAAM,CAACC,OAAO,GAAGZ,SAAS"},"metadata":{},"sourceType":"script"}