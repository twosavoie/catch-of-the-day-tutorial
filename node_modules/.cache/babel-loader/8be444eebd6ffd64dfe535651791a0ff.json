{"ast":null,"code":"/*!\n * Stylus - Arguments\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node'),\n  nodes = require('../nodes'),\n  utils = require('../utils');\n\n/**\n * Initialize a new `Arguments`.\n *\n * @api public\n */\n\nvar Arguments = module.exports = function Arguments() {\n  nodes.Expression.call(this);\n  this.map = {};\n};\n\n/**\n * Inherit from `nodes.Expression.prototype`.\n */\n\nArguments.prototype.__proto__ = nodes.Expression.prototype;\n\n/**\n * Initialize an `Arguments` object with the nodes\n * from the given `expr`.\n *\n * @param {Expression} expr\n * @return {Arguments}\n * @api public\n */\n\nArguments.fromExpression = function (expr) {\n  var args = new Arguments(),\n    len = expr.nodes.length;\n  args.lineno = expr.lineno;\n  args.column = expr.column;\n  args.isList = expr.isList;\n  for (var i = 0; i < len; ++i) {\n    args.push(expr.nodes[i]);\n  }\n  return args;\n};\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nArguments.prototype.clone = function (parent) {\n  var clone = nodes.Expression.prototype.clone.call(this, parent);\n  clone.map = {};\n  for (var key in this.map) {\n    clone.map[key] = this.map[key].clone(parent, clone);\n  }\n  clone.isList = this.isList;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nArguments.prototype.toJSON = function () {\n  return {\n    __type: 'Arguments',\n    map: this.map,\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};","map":{"version":3,"names":["Node","require","nodes","utils","Arguments","module","exports","Expression","call","map","prototype","__proto__","fromExpression","expr","args","len","length","lineno","column","isList","i","push","clone","parent","key","filename","toJSON","__type","preserve"],"sources":["/Users/lisasavoie/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/stylus/lib/nodes/arguments.js"],"sourcesContent":["\n/*!\n * Stylus - Arguments\n * Copyright (c) Automattic <developer.wordpress.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Node = require('./node')\n  , nodes = require('../nodes')\n  , utils = require('../utils');\n\n/**\n * Initialize a new `Arguments`.\n *\n * @api public\n */\n\nvar Arguments = module.exports = function Arguments(){\n  nodes.Expression.call(this);\n  this.map = {};\n};\n\n/**\n * Inherit from `nodes.Expression.prototype`.\n */\n\nArguments.prototype.__proto__ = nodes.Expression.prototype;\n\n/**\n * Initialize an `Arguments` object with the nodes\n * from the given `expr`.\n *\n * @param {Expression} expr\n * @return {Arguments}\n * @api public\n */\n\nArguments.fromExpression = function(expr){\n  var args = new Arguments\n    , len = expr.nodes.length;\n  args.lineno = expr.lineno;\n  args.column = expr.column;\n  args.isList = expr.isList;\n  for (var i = 0; i < len; ++i) {\n    args.push(expr.nodes[i]);\n  }\n  return args;\n};\n\n/**\n * Return a clone of this node.\n *\n * @return {Node}\n * @api public\n */\n\nArguments.prototype.clone = function(parent){\n  var clone = nodes.Expression.prototype.clone.call(this, parent);\n  clone.map = {};\n  for (var key in this.map) {\n    clone.map[key] = this.map[key].clone(parent, clone);\n  }\n  clone.isList = this.isList;\n  clone.lineno = this.lineno;\n  clone.column = this.column;\n  clone.filename = this.filename;\n  return clone;\n};\n\n/**\n * Return a JSON representation of this node.\n *\n * @return {Object}\n * @api public\n */\n\nArguments.prototype.toJSON = function(){\n  return {\n    __type: 'Arguments',\n    map: this.map,\n    isList: this.isList,\n    preserve: this.preserve,\n    lineno: this.lineno,\n    column: this.column,\n    filename: this.filename,\n    nodes: this.nodes\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACxBC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;EAC3BE,KAAK,GAAGF,OAAO,CAAC,UAAU,CAAC;;AAE/B;AACA;AACA;AACA;AACA;;AAEA,IAAIG,SAAS,GAAGC,MAAM,CAACC,OAAO,GAAG,SAASF,SAAS,GAAE;EACnDF,KAAK,CAACK,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;EAC3B,IAAI,CAACC,GAAG,GAAG,CAAC,CAAC;AACf,CAAC;;AAED;AACA;AACA;;AAEAL,SAAS,CAACM,SAAS,CAACC,SAAS,GAAGT,KAAK,CAACK,UAAU,CAACG,SAAS;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAN,SAAS,CAACQ,cAAc,GAAG,UAASC,IAAI,EAAC;EACvC,IAAIC,IAAI,GAAG,IAAIV,SAAS;IACpBW,GAAG,GAAGF,IAAI,CAACX,KAAK,CAACc,MAAM;EAC3BF,IAAI,CAACG,MAAM,GAAGJ,IAAI,CAACI,MAAM;EACzBH,IAAI,CAACI,MAAM,GAAGL,IAAI,CAACK,MAAM;EACzBJ,IAAI,CAACK,MAAM,GAAGN,IAAI,CAACM,MAAM;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,EAAE,EAAEK,CAAC,EAAE;IAC5BN,IAAI,CAACO,IAAI,CAACR,IAAI,CAACX,KAAK,CAACkB,CAAC,CAAC,CAAC;EAC1B;EACA,OAAON,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAV,SAAS,CAACM,SAAS,CAACY,KAAK,GAAG,UAASC,MAAM,EAAC;EAC1C,IAAID,KAAK,GAAGpB,KAAK,CAACK,UAAU,CAACG,SAAS,CAACY,KAAK,CAACd,IAAI,CAAC,IAAI,EAAEe,MAAM,CAAC;EAC/DD,KAAK,CAACb,GAAG,GAAG,CAAC,CAAC;EACd,KAAK,IAAIe,GAAG,IAAI,IAAI,CAACf,GAAG,EAAE;IACxBa,KAAK,CAACb,GAAG,CAACe,GAAG,CAAC,GAAG,IAAI,CAACf,GAAG,CAACe,GAAG,CAAC,CAACF,KAAK,CAACC,MAAM,EAAED,KAAK,CAAC;EACrD;EACAA,KAAK,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BG,KAAK,CAACL,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BK,KAAK,CAACJ,MAAM,GAAG,IAAI,CAACA,MAAM;EAC1BI,KAAK,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC9B,OAAOH,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAlB,SAAS,CAACM,SAAS,CAACgB,MAAM,GAAG,YAAU;EACrC,OAAO;IACLC,MAAM,EAAE,WAAW;IACnBlB,GAAG,EAAE,IAAI,CAACA,GAAG;IACbU,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBS,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBX,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBO,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBvB,KAAK,EAAE,IAAI,CAACA;EACd,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}